Index: app/src/main/java/com/example/agrimart/viewmodel/SignUpViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.agrimart.viewmodel;\r\n\r\nimport android.app.Application;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.lifecycle.AndroidViewModel;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseAuthUserCollisionException;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\npublic class SignUpViewModel extends AndroidViewModel {\r\n    private FirebaseAuth mAuth;\r\n    private FirebaseFirestore firestore;\r\n    private MutableLiveData<Boolean> signUpSuccess;\r\n    private MutableLiveData<Boolean> emailVerificationSent;\r\n\r\n    public SignUpViewModel(@NonNull Application application) {\r\n        super(application);\r\n        mAuth = FirebaseAuth.getInstance();\r\n        firestore = FirebaseFirestore.getInstance();\r\n        signUpSuccess = new MutableLiveData<>();\r\n        emailVerificationSent = new MutableLiveData<>();\r\n    }\r\n\r\n    public MutableLiveData<Boolean> getSignUpSuccess() {\r\n        return signUpSuccess;\r\n    }\r\n\r\n    public MutableLiveData<Boolean> getEmailVerificationSent() {\r\n        return emailVerificationSent;\r\n    }\r\n\r\n    public void signUpWithEmail(String email, String password, String fullName) {\r\n        mAuth.createUserWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(task -> {\r\n                    if (task.isSuccessful()) {\r\n                        FirebaseUser user = mAuth.getCurrentUser();\r\n                        if (user != null) {\r\n                            sendEmailVerification(user);\r\n                            saveUserToFirestore(user, fullName);\r\n                        }\r\n                        signUpSuccess.setValue(true);\r\n                    } else {\r\n                        if (task.getException() instanceof FirebaseAuthUserCollisionException) {\r\n                            Toast.makeText(getApplication(), \"Email đã tồn tại\", Toast.LENGTH_SHORT).show();\r\n                        } else {\r\n                            signUpSuccess.setValue(false);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void sendEmailVerification(FirebaseUser user) {\r\n        user.sendEmailVerification()\r\n                .addOnCompleteListener(task -> {\r\n                    if (task.isSuccessful()) {\r\n                        emailVerificationSent.setValue(true);\r\n                    } else {\r\n                        emailVerificationSent.setValue(false);\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void saveUserToFirestore(FirebaseUser firebaseUser, String fullName) {\r\n        firestore.collection(\"users\").document(firebaseUser.getUid())\r\n                .get()\r\n                .addOnSuccessListener(documentSnapshot -> {\r\n                    String role = \"customer\";\r\n                    if (documentSnapshot.exists() && documentSnapshot.contains(\"role\")) {\r\n                        role = documentSnapshot.getString(\"role\");\r\n                    }\r\n\r\n                    Map<String, Object> userMap = new HashMap<>();\r\n                    userMap.put(\"userId\", firebaseUser.getUid());\r\n                    userMap.put(\"role\", role);\r\n                    userMap.put(\"fullName\", fullName);\r\n                    if (firebaseUser.getEmail() != null) {\r\n                        userMap.put(\"email\", firebaseUser.getEmail());\r\n                    }\r\n                    if (firebaseUser.getPhoneNumber() != null) {\r\n                        userMap.put(\"phoneNumber\", firebaseUser.getPhoneNumber());\r\n                    }\r\n                    userMap.put(\"createdAt\", new Date());\r\n                    userMap.put(\"updatedAt\", new Date());\r\n\r\n                    firestore.collection(\"users\").document(firebaseUser.getUid())\r\n                            .set(userMap)\r\n                            .addOnSuccessListener(aVoid -> {\r\n                            })\r\n                            .addOnFailureListener(e -> {\r\n                            });\r\n                })\r\n                .addOnFailureListener(e -> {\r\n                });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/agrimart/viewmodel/SignUpViewModel.java b/app/src/main/java/com/example/agrimart/viewmodel/SignUpViewModel.java
--- a/app/src/main/java/com/example/agrimart/viewmodel/SignUpViewModel.java	
+++ b/app/src/main/java/com/example/agrimart/viewmodel/SignUpViewModel.java	
@@ -1,11 +1,14 @@
 package com.example.agrimart.viewmodel;
 
 import android.app.Application;
+import android.content.Intent;
 import android.widget.Toast;
 
 import androidx.annotation.NonNull;
 import androidx.lifecycle.AndroidViewModel;
 import androidx.lifecycle.MutableLiveData;
+
+import com.example.agrimart.ui.Account.VerifyActivity;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseAuthUserCollisionException;
 import com.google.firebase.auth.FirebaseUser;
@@ -44,7 +47,10 @@
                         FirebaseUser user = mAuth.getCurrentUser();
                         if (user != null) {
                             sendEmailVerification(user);
-                            saveUserToFirestore(user, fullName);
+                            Intent intent = new Intent(getApplication(), VerifyActivity.class);
+                            intent.putExtra("fullname", fullName);
+                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+                            getApplication().startActivity(intent);
                         }
                         signUpSuccess.setValue(true);
                     } else {
@@ -56,7 +62,6 @@
                     }
                 });
     }
-
     public void sendEmailVerification(FirebaseUser user) {
         user.sendEmailVerification()
                 .addOnCompleteListener(task -> {
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-feature\r\n        android:name=\"android.hardware.telephony\"\r\n        android:required=\"false\" />\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.GET_ACCOUNTS\" />\r\n    <uses-permission android:name=\"android.permission.USE_CREDENTIALS\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_MEDIA_IMAGES\" />\r\n    <uses-permission android:name=\"android.permission.SEND_SMS\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@drawable/logo_icon\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@drawable/logo_icon\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.AgriMart\"\r\n        tools:ignore=\"ExtraText\"\r\n        tools:targetApi=\"31\">\r\n        <activity android:name=\".ui.payment.VNPaymentActivity\"\r\n            android:exported=\"false\"/>\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyStore.EditProfileStoreActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.PostProduct.ProductPreviewActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAddress.GetAddressActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.EditNumberPhoneActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.ChangePasswordActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.VerifyWithPasswordActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.EditUserNameActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\"com.yalantis.ucrop.UCropActivity\"\r\n            android:theme=\"@style/Theme.AppCompat.NoActionBar\"\r\n            tools:replace=\"android:theme\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAddress.EditAddressActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAddress.NewAddressActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyStore.RegisterSellerActivity\"\r\n            android:exported=\"false\"\r\n            android:theme=\"@style/Theme.AgriMart\" />\r\n        <activity\r\n            android:name=\".ui.Account.VerifyActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyStore.MyStoreActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.PurchasedOrders.PurchasedOrdersActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAddress.MyAddressActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.MyAccountActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Store.StoreActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyStore.OrderManagementActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Homepage.SearchActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Cart.CheckoutActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.ProductPage.ProductDetailActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.PostProduct.YourProductListingsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.PostProduct.PostProductActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MainActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Account.EnterOTPActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Account.ForgotPasswordActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Account.SignUpActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Homepage.HomeFragment\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Account.SignInActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.ApplicationId\"\r\n            android:value=\"@string/facebook_app_id\" />\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.ClientToken\"\r\n            android:value=\"@string/facebook_client_token\" />\r\n\r\n        <activity\r\n            android:name=\"com.facebook.FacebookActivity\"\r\n            android:configChanges=\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\"\r\n            android:label=\"@string/app_name\"\r\n            android:screenOrientation=\"portrait\"\r\n            tools:ignore=\"DiscouragedApi\" />\r\n        <activity\r\n            android:name=\"com.facebook.CustomTabActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\"\r\n            tools:ignore=\"DiscouragedApi\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n\r\n                <data android:scheme=\"@string/fb_login_protocol_scheme\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -27,7 +27,7 @@
         android:theme="@style/Theme.AgriMart"
         tools:ignore="ExtraText"
         tools:targetApi="31">
-        <activity android:name=".ui.payment.VNPaymentActivity"
+        <activity android:name=".ui.Payment.VNPaymentActivity"
             android:exported="false"/>
         <activity
             android:name=".ui.MyProfile.MyStore.EditProfileStoreActivity"
Index: app/src/main/java/com/example/agrimart/ui/Account/SignInActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.agrimart.ui.Account;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.ui.MainActivity;\r\nimport com.example.agrimart.viewmodel.SignInViewModel;\r\nimport com.facebook.AccessToken;\r\nimport com.facebook.CallbackManager;\r\nimport com.facebook.FacebookCallback;\r\nimport com.facebook.FacebookException;\r\nimport com.facebook.FacebookSdk;\r\nimport com.facebook.login.LoginManager;\r\nimport com.facebook.login.LoginResult;\r\nimport com.facebook.login.widget.LoginButton;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignIn;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInAccount;\r\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions;\r\nimport com.google.android.gms.common.api.ApiException;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthCredential;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.FacebookAuthProvider;\r\nimport com.google.firebase.auth.GoogleAuthProvider;\r\n\r\npublic class SignInActivity extends AppCompatActivity {\r\n    private static final String TAG = \"SignInActivity\";\r\n    private SignInViewModel signInViewModel;\r\n    private ActivityResultLauncher<Intent> googleSignInLauncher;\r\n    private GoogleSignInOptions gso;\r\n    private SharedPreferences sharedPreferences;\r\n    private FirebaseAuth mAuth;\r\n    private CallbackManager callbackManager;\r\n\r\n    private TextView tvDonthaveAccount;\r\n    private TextView forgotPass;\r\n    private Button btnSignIn;\r\n    private Button btnSignInGoogle, btnSignInFacebook;\r\n    private TextView edtEmail, edtPassword;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_sign_in);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main1), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        sharedPreferences = getSharedPreferences(\"user_prefs\", MODE_PRIVATE);\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        if (sharedPreferences.getBoolean(\"is_logged_in\", false)) {\r\n            FirebaseUser currentUser = mAuth.getCurrentUser();\r\n            if (currentUser != null) {\r\n                navigateToMain();\r\n                return;\r\n            }\r\n        }\r\n\r\n        signInViewModel = new ViewModelProvider(this).get(SignInViewModel.class);\r\n\r\n        gso = new GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\r\n                .requestIdToken(getString(R.string.default_web_client_id))\r\n                .requestEmail()\r\n                .build();\r\n\r\n        googleSignInLauncher = registerForActivityResult(\r\n                new ActivityResultContracts.StartActivityForResult(),\r\n                result -> {\r\n                    if (result.getResultCode() == RESULT_OK) {\r\n                        Intent data = result.getData();\r\n                        Task<GoogleSignInAccount> task = GoogleSignIn.getSignedInAccountFromIntent(data);\r\n                        try {\r\n                            GoogleSignInAccount account = task.getResult(ApiException.class);\r\n                            handleGoogleAccessToken(account);\r\n                        } catch (ApiException e) {\r\n                            Toast.makeText(this, \"Đăng nhập thất bại\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    } else {\r\n                        Toast.makeText(this, \"Đăng nhập bị từ chối\", Toast.LENGTH_SHORT).show();\r\n                    }\r\n                });\r\n\r\n        FacebookSdk.sdkInitialize(getApplicationContext());\r\n        callbackManager = CallbackManager.Factory.create();\r\n\r\n        addControls();\r\n        addEvents();\r\n    }\r\n\r\n    public void addControls() {\r\n        tvDonthaveAccount = findViewById(R.id.dontHaveAccount);\r\n        forgotPass = findViewById(R.id.forgotPassword);\r\n        btnSignIn = findViewById(R.id.btnSignIn);\r\n        btnSignInGoogle = findViewById(R.id.btnSignInGoogle);\r\n        edtEmail = findViewById(R.id.edtEmail);\r\n        edtPassword = findViewById(R.id.edtPassword);\r\n        btnSignInFacebook = findViewById(R.id.btnSignInFacebook);\r\n    }\r\n\r\n    public void addEvents() {\r\n        tvDonthaveAccount.setOnClickListener(v -> {\r\n            Intent intent = new Intent(SignInActivity.this, SignUpActivity.class);\r\n            startActivity(intent);\r\n        });\r\n\r\n        forgotPass.setOnClickListener(v -> {\r\n            Intent intent = new Intent(SignInActivity.this, ForgotPasswordActivity.class);\r\n            startActivity(intent);\r\n        });\r\n\r\n        btnSignIn.setOnClickListener(v -> {\r\n            String email = edtEmail.getText().toString().trim();\r\n            String password = edtPassword.getText().toString().trim();\r\n            if (!email.isEmpty() && !password.isEmpty()) {\r\n                signInViewModel.signInWithEmail(email, password, () -> checkEmailVerification(true));\r\n            } else {\r\n                Toast.makeText(SignInActivity.this, \"Email hoặc mật khẩu không hợp lệ\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n\r\n        btnSignInGoogle.setOnClickListener(v -> {\r\n            Intent signInIntent = GoogleSignIn.getClient(this, gso).getSignInIntent();\r\n            googleSignInLauncher.launch(signInIntent);\r\n        });\r\n\r\n        btnSignInFacebook.setOnClickListener(v -> {\r\n            LoginButton loginButton = new LoginButton(this);\r\n            loginButton.setPermissions(\"email\", \"public_profile\");\r\n            loginButton.registerCallback(callbackManager, new FacebookCallback<LoginResult>() {\r\n                @Override\r\n                public void onSuccess(LoginResult loginResult) {\r\n                    handleFacebookAccessToken(loginResult.getAccessToken());\r\n                    Toast.makeText(SignInActivity.this, \"Đăng nhập thành công\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                @Override\r\n                public void onCancel() {\r\n                    Toast.makeText(SignInActivity.this, \"Đăng nhập thất bại\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                @Override\r\n                public void onError(FacebookException error) {\r\n                    Toast.makeText(SignInActivity.this, \"Đăng nhập thất bại\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n            loginButton.performClick();\r\n        });\r\n    }\r\n\r\n    private void checkEmailVerification(boolean isEmailSignIn) {\r\n        FirebaseUser user = mAuth.getCurrentUser();\r\n        if (user != null) {\r\n            if (!isEmailSignIn || user.isEmailVerified()) {\r\n                navigateToMain();\r\n            } else {\r\n                Toast.makeText(SignInActivity.this, \"Vui lòng xác thực email của bạn trước khi đăng nhập\", Toast.LENGTH_SHORT).show();\r\n                signOut();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void signOut() {\r\n        mAuth.signOut();\r\n        setLoginState(false);\r\n    }\r\n\r\n    private boolean isUserDataExists() {\r\n        String email = sharedPreferences.getString(\"user_email\", null);\r\n        return email != null;\r\n    }\r\n\r\n    private void saveUserData(FirebaseUser user) {\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"user_email\", user.getEmail());\r\n        editor.putString(\"user_name\", user.getDisplayName());\r\n        editor.apply();\r\n    }\r\n\r\n    private void handleGoogleAccessToken(GoogleSignInAccount account) {\r\n        AuthCredential credential = GoogleAuthProvider.getCredential(account.getIdToken(), null);\r\n        signInViewModel.signInWithGoogle(credential, () -> {\r\n            FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n            if (user != null) {\r\n                if (!isUserDataExists()) {\r\n                    saveUserData(user);\r\n                    Toast.makeText(this, \"Đăng nhập thành công\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                checkEmailVerification(false);\r\n            } else {\r\n                Toast.makeText(this, \"Đăng nhập thất bại\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    private void handleFacebookAccessToken(AccessToken token) {\r\n        AuthCredential credential = FacebookAuthProvider.getCredential(token.getToken());\r\n        signInViewModel.signInWithFacebook(credential, () -> {\r\n            FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n            if (user != null) {\r\n                if (!isUserDataExists()) {\r\n                    saveUserData(user);\r\n                    Toast.makeText(this, \"Đăng nhập thành công\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                checkEmailVerification(false);\r\n            } else {\r\n                Toast.makeText(this, \"Đăng nhập thất bại\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        callbackManager.onActivityResult(requestCode, resultCode, data);\r\n    }\r\n\r\n    private void navigateToMain() {\r\n        Intent intent = new Intent(SignInActivity.this, MainActivity.class);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    private void setLoginState(boolean isLoggedIn) {\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putBoolean(\"is_logged_in\", isLoggedIn);\r\n        editor.apply();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/agrimart/ui/Account/SignInActivity.java b/app/src/main/java/com/example/agrimart/ui/Account/SignInActivity.java
--- a/app/src/main/java/com/example/agrimart/ui/Account/SignInActivity.java	
+++ b/app/src/main/java/com/example/agrimart/ui/Account/SignInActivity.java	
@@ -131,6 +131,7 @@
             String password = edtPassword.getText().toString().trim();
             if (!email.isEmpty() && !password.isEmpty()) {
                 signInViewModel.signInWithEmail(email, password, () -> checkEmailVerification(true));
+                Toast.makeText(SignInActivity.this, "Đăng nhập thành công", Toast.LENGTH_SHORT).show();
             } else {
                 Toast.makeText(SignInActivity.this, "Email hoặc mật khẩu không hợp lệ", Toast.LENGTH_SHORT).show();
             }
Index: app/src/main/java/com/example/agrimart/ui/MyProfile/MyProfileFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.agrimart.ui.MyProfile;\r\n\r\nimport static android.app.Activity.RESULT_OK;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Dialog;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.bumptech.glide.request.RequestOptions;\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.ui.Account.SignInActivity;\r\n\r\nimport com.example.agrimart.ui.MyProfile.MyAccount.MyAccountActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyAddress.MyAddressActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyStore.MyStoreActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyStore.RegisterSellerActivity;\r\nimport com.example.agrimart.ui.MyProfile.PurchasedOrders.PurchasedOrdersActivity;\r\nimport android.content.Context;\r\nimport android.widget.Toast;\r\n\r\nimport com.facebook.login.LoginManager;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\n\r\npublic class MyProfileFragment extends Fragment {\r\n\r\n    private LinearLayout purchase_order, confirm, goods, logout,\r\n            delivery, evaluate, my_store, my_address, setting, my_account, header;\r\n    private TextView userNameTextView;\r\n    private ImageView user_image;\r\n    private FirebaseAuth auth;\r\n    private FirebaseFirestore firestore;\r\n    private static final int MY_ACCOUNT_REQUEST_CODE = 2;\r\n\r\n    public MyProfileFragment() {\r\n        // Required empty public constructor\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_my_profile, container, false);\r\n        auth = FirebaseAuth.getInstance();\r\n        firestore = FirebaseFirestore.getInstance();\r\n        addControl(view);\r\n        addEvents();\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {\r\n            Window window = getActivity().getWindow();\r\n            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\r\n            window.setStatusBarColor(ContextCompat.getColor(getActivity(), R.color.green));\r\n        }\r\n\r\n        loadUserInfo();\r\n\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == MY_ACCOUNT_REQUEST_CODE && resultCode == RESULT_OK) {\r\n            loadUserInfo(); // Gọi phương thức để tải lại thông tin người dùng\r\n        }\r\n    }\r\n\r\n    @SuppressLint(\"WrongViewCast\")\r\n    void addControl(View view) {\r\n        purchase_order = view.findViewById(R.id.purchase_order);\r\n        confirm = view.findViewById(R.id.waiting_confirm);\r\n        goods = view.findViewById(R.id.waiting_goods);\r\n        delivery = view.findViewById(R.id.waiting_delivery);\r\n        evaluate = view.findViewById(R.id.evaluate);\r\n        my_store = view.findViewById(R.id.my_store);\r\n        my_address = view.findViewById(R.id.my_address);\r\n        setting = view.findViewById(R.id.setting);\r\n        logout = view.findViewById(R.id.logout);\r\n        userNameTextView = view.findViewById(R.id.user_name); // Ensure this ID matches the layout\r\n        purchase_order = (LinearLayout)view.findViewById(R.id.purchase_order);\r\n        confirm = (LinearLayout)view.findViewById(R.id.waiting_confirm);\r\n        goods = (LinearLayout)view.findViewById(R.id.waiting_goods);\r\n        delivery = (LinearLayout)view.findViewById(R.id.waiting_delivery);\r\n        evaluate = (LinearLayout)view.findViewById(R.id.evaluate);\r\n        my_store = (LinearLayout)view.findViewById(R.id.my_store);\r\n        my_address = (LinearLayout)view.findViewById(R.id.my_address);\r\n        setting = (LinearLayout)view.findViewById(R.id.setting);\r\n        logout = (LinearLayout)view.findViewById(R.id.logout);\r\n        my_account = (LinearLayout) view.findViewById(R.id.my_account);\r\n        header = (LinearLayout) view.findViewById(R.id.header);\r\n        user_image = (ImageView) view.findViewById(R.id.user_image);\r\n    }\r\n\r\n    void addEvents() {\r\n        purchase_order.setOnClickListener(v -> navigateToPurchasedOrders());\r\n        confirm.setOnClickListener(v -> navigateToWaitingConfirm());\r\n        goods.setOnClickListener(v -> navigateToWaitingGoods());\r\n        delivery.setOnClickListener(v -> navigateToWaitingDeliverey());\r\n        evaluate.setOnClickListener(v -> navigateToEcaluate());\r\n        my_store.setOnClickListener(view -> {\r\n            SharedPreferences sharedPreferences = requireContext().getSharedPreferences(\"user_prefs\", Context.MODE_PRIVATE);\r\n            if (sharedPreferences.getString(\"user_role\", \"seller\").equals(\"seller\")) {\r\n                navigateToMyStore();\r\n            } else {\r\n                showDialog();\r\n            }\r\n        });\r\n        my_address.setOnClickListener(v -> navigateToAddress());\r\n        setting.setOnClickListener(v -> navigateToSettings());\r\n        logout.setOnClickListener(v -> handleLogout());\r\n        header.setOnClickListener(v -> myAccount());\r\n        my_account.setOnClickListener(v -> myAccount());\r\n    }\r\n\r\n    private void myAccount() {\r\n        Intent intent = new Intent(requireContext(), MyAccountActivity.class);\r\n        startActivityForResult(intent, MY_ACCOUNT_REQUEST_CODE);\r\n    }\r\n\r\n    private void loadUserInfo() {\r\n        String userId = auth.getCurrentUser().getUid(); // Lấy UID của người dùng hiện tại\r\n        firestore.collection(\"users\").document(userId)\r\n                .get()\r\n                .addOnCompleteListener(task -> {\r\n                    if (task.isSuccessful()) {\r\n                        DocumentSnapshot document = task.getResult();\r\n                        if (document.exists()) {\r\n                            // Lấy dữ liệu từ document\r\n                            String name = document.getString(\"fullName\");\r\n                            String urlImage = document.getString(\"userImage\");\r\n\r\n                            // Cập nhật TextViews\r\n                            userNameTextView.setText(name);\r\n\r\n                            if (urlImage != null && !urlImage.isEmpty()) {\r\n                                Glide.with(this)\r\n                                        .load(urlImage)\r\n                                        .apply(RequestOptions.circleCropTransform()) // Bo tròn ảnh khi tải lên\r\n                                        .placeholder(R.drawable.user_img) // ảnh mặc định khi đang tải\r\n                                        .error(R.drawable.user_img) // ảnh mặc định nếu URL không tồn tại hoặc tải ảnh lỗi\r\n                                        .into(user_image);\r\n                            } else {\r\n                                // Hiển thị ảnh mặc định nếu URL rỗng\r\n                                Glide.with(this)\r\n                                        .load(R.drawable.user_img)\r\n                                        .apply(RequestOptions.circleCropTransform()) // Bo tròn ảnh mặc định\r\n                                        .into(user_image);\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void navigateToPurchasedOrders() {\r\n        Intent intent = new Intent(requireContext(), PurchasedOrdersActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void navigateToAddress() {\r\n        Intent intent = new Intent(requireContext(), MyAddressActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void navigateToWaitingConfirm() {\r\n        Intent intent = new Intent(requireContext(), PurchasedOrdersActivity.class);\r\n        intent.putExtra(\"selectedTab\", 0);  // Tab thứ 2 có chỉ số là 1\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void navigateToWaitingGoods() {\r\n        Intent intent = new Intent(requireContext(), PurchasedOrdersActivity.class);\r\n        intent.putExtra(\"selectedTab\", 1);  // Tab thứ 2 có chỉ số là 1\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void navigateToWaitingDeliverey() {\r\n        Intent intent = new Intent(requireContext(), PurchasedOrdersActivity.class);\r\n        intent.putExtra(\"selectedTab\", 2);  // Tab thứ 2 có chỉ số là 1\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void navigateToMyStore() {\r\n        Intent intent = new Intent(requireContext(), MyStoreActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void navigateToSettings() {\r\n        //Intent intent = new Intent(requireContext(), SettingsActivity.class);\r\n        //startActivity(intent);\r\n    }\r\n\r\n    private void handleLogout() {\r\n        SharedPreferences sharedPreferences = requireContext().getSharedPreferences(\"user_prefs\", Context.MODE_PRIVATE);\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.clear();\r\n        editor.apply();\r\n\r\n        FirebaseAuth.getInstance().signOut();\r\n        LoginManager.getInstance().logOut();\r\n\r\n        Intent intent = new Intent(requireContext(), SignInActivity.class);\r\n        startActivity(intent);\r\n        requireActivity().finish();\r\n        Toast.makeText(requireContext(), \"Đăng xuất thành công\", Toast.LENGTH_SHORT).show();\r\n    }\r\n\r\n    private void navigateToEcaluate() {\r\n        // Implement navigation to evaluate\r\n    }\r\n\r\n    void showDialog() {\r\n        Dialog dialog = new Dialog(requireContext());\r\n\r\n        View view = LayoutInflater.from(requireContext()).inflate(R.layout.dialog_seller, null);\r\n        dialog.setContentView(view);\r\n\r\n        Window window = dialog.getWindow();\r\n        if (window != null) {\r\n            window.setLayout(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);\r\n        }\r\n\r\n        Button button = view.findViewById(R.id.btnCreateSeller);\r\n        button.setOnClickListener(v -> {\r\n            Intent intent = new Intent(requireContext(), RegisterSellerActivity.class);\r\n            startActivity(intent);\r\n            dialog.dismiss();\r\n        });\r\n\r\n        Button btnClose = view.findViewById(R.id.btnCancel);\r\n        btnClose.setOnClickListener(v -> dialog.dismiss());\r\n\r\n        dialog.setCancelable(true);\r\n        dialog.show();\r\n    }\r\n\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/agrimart/ui/MyProfile/MyProfileFragment.java b/app/src/main/java/com/example/agrimart/ui/MyProfile/MyProfileFragment.java
--- a/app/src/main/java/com/example/agrimart/ui/MyProfile/MyProfileFragment.java	
+++ b/app/src/main/java/com/example/agrimart/ui/MyProfile/MyProfileFragment.java	
@@ -94,7 +94,7 @@
         my_address = view.findViewById(R.id.my_address);
         setting = view.findViewById(R.id.setting);
         logout = view.findViewById(R.id.logout);
-        userNameTextView = view.findViewById(R.id.user_name); // Ensure this ID matches the layout
+        userNameTextView = view.findViewById(R.id.user_name);
         purchase_order = (LinearLayout)view.findViewById(R.id.purchase_order);
         confirm = (LinearLayout)view.findViewById(R.id.waiting_confirm);
         goods = (LinearLayout)view.findViewById(R.id.waiting_goods);
@@ -146,6 +146,7 @@
                             // Lấy dữ liệu từ document
                             String name = document.getString("fullName");
                             String urlImage = document.getString("userImage");
+                            String userRole = document.getString("role");
 
                             // Cập nhật TextViews
                             userNameTextView.setText(name);
@@ -165,6 +166,13 @@
                                         .into(user_image);
                             }
 
+                            // Cập nhật TextView my_store_text dựa trên userRole
+                            TextView myStoreTextView = getView().findViewById(R.id.my_store_text);
+                            if ("seller".equals(userRole)) {
+                                myStoreTextView.setText("Cửa hàng của tôi");
+                            } else {
+                                myStoreTextView.setText("Bắt đầu bán");
+                            }
                         }
                     }
                 });
