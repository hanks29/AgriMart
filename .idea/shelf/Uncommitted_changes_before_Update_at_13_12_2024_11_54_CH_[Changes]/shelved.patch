Index: app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.agrimart.ui.Cart;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.adapter.CheckoutAdapter;\r\nimport com.example.agrimart.data.model.Product;\r\nimport com.example.agrimart.ui.MyProfile.MyAddress.MyAddressActivity;\r\nimport com.example.agrimart.ui.Payment.VNPaymentActivity;\r\nimport com.example.agrimart.viewmodel.CheckoutViewModel;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.text.NumberFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.stream.Collectors;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.widget.Toast;\r\n\r\npublic class CheckoutActivity extends AppCompatActivity {\r\n    private Toolbar toolbar;\r\n    private RecyclerView rvProduct;\r\n    private CheckoutAdapter checkoutAdapter;\r\n    private List<Product> selectedProducts;\r\n    private TextView tvTotalProductPrice, tvTotalShippingPrice, tvFinalTotalPrice, tvTotalPrice;\r\n    private TextView tvUserName, tvPhoneNumber, tvAddress, tvChangeAddress;\r\n    private Button btnPlaceOrder;\r\n    private RadioGroup paymentMethodGroup;\r\n    private RadioButton radVNPay, radCOD;\r\n    private LinearLayout linearLayout;\r\n    private CheckoutViewModel checkoutViewModel;\r\n    private String orderId;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_checkout);\r\n\r\n        setupWindowInsets();\r\n        setupToolbar();\r\n        initializeViews();\r\n        setupRecyclerView();\r\n        setupViewModel();\r\n        setupListeners();\r\n        updatePrices();\r\n        calculateShippingFee();\r\n        createOrderWithGHN();\r\n    }\r\n\r\n    private void setupWindowInsets() {\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main1), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) {\r\n            Window window = getWindow();\r\n            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\r\n            window.setStatusBarColor(ContextCompat.getColor(this, R.color.green));\r\n        }\r\n    }\r\n\r\n    private void setupToolbar() {\r\n        toolbar = findViewById(R.id.header);\r\n        toolbar.setNavigationOnClickListener(v -> finish());\r\n    }\r\n\r\n    private void initializeViews() {\r\n        selectedProducts = getIntent().getParcelableArrayListExtra(\"selectedProducts\");\r\n        if (selectedProducts == null) {\r\n            selectedProducts = new ArrayList<>();\r\n        }\r\n\r\n        rvProduct = findViewById(R.id.rv_product);\r\n        tvTotalProductPrice = findViewById(R.id.tvTotalProductPrice);\r\n        tvTotalShippingPrice = findViewById(R.id.tvTotalShippingPrice);\r\n        tvFinalTotalPrice = findViewById(R.id.tvFinalTotalPrice);\r\n        tvTotalPrice = findViewById(R.id.tvTotalPrice);\r\n        tvUserName = findViewById(R.id.tvUserName1);\r\n        tvPhoneNumber = findViewById(R.id.tvPhoneNumber1);\r\n        tvAddress = findViewById(R.id.tvAddress1);\r\n        tvChangeAddress = findViewById(R.id.tvChangeAddress);\r\n//        paymentMethodGroup = findViewById(R.id.radGroupPayment);\r\n        radVNPay = findViewById(R.id.radVNPay);\r\n        radCOD = findViewById(R.id.radCOD);\r\n        btnPlaceOrder = findViewById(R.id.btnPlaceOrder);\r\n        linearLayout = findViewById(R.id.lnGHN);\r\n    }\r\n\r\n\r\n    private void setupRecyclerView() {\r\n        rvProduct.setLayoutManager(new LinearLayoutManager(this));\r\n        checkoutAdapter = new CheckoutAdapter(selectedProducts);\r\n        rvProduct.setAdapter(checkoutAdapter);\r\n    }\r\n\r\n    private void setupViewModel() {\r\n        checkoutViewModel = new ViewModelProvider(this).get(CheckoutViewModel.class);\r\n        checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n        orderId = checkoutViewModel.generateOrderId();\r\n    }\r\n\r\n    private void setupListeners() {\r\n        tvChangeAddress.setOnClickListener(v -> {\r\n            Intent intent = new Intent(CheckoutActivity.this, MyAddressActivity.class);\r\n            startActivity(intent);\r\n        });\r\n\r\n        radCOD.setOnCheckedChangeListener((buttonView, isChecked) -> {\r\n            if (isChecked) {\r\n                radVNPay.setChecked(false);\r\n            }\r\n        });\r\n\r\n        radVNPay.setOnCheckedChangeListener((buttonView, isChecked) -> {\r\n            if (isChecked) {\r\n                radCOD.setChecked(false);\r\n            }\r\n        });\r\n        btnPlaceOrder.setOnClickListener(v -> placeOrder());\r\n\r\n    }\r\n\r\n    private void calculateShippingFee() {\r\n        checkoutViewModel.createOrder(tvAddress.getText().toString(), selectedProducts.get(0).getStoreId());\r\n        checkoutViewModel.shippingFee.observe(this, shippingFee -> {\r\n            tvTotalShippingPrice.setText(shippingFee + \" đ\");\r\n\r\n            int price = Integer.parseInt(tvTotalProductPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n            int totalPrice = price + Integer.parseInt(String.valueOf(shippingFee));\r\n            tvTotalPrice.setText(totalPrice + \" đ\");\r\n            checkoutViewModel.updateStatusOrder(orderId, shippingFee);\r\n        });\r\n    }\r\n\r\n    private void placeOrder() {\r\n        String address = tvAddress.getText().toString();\r\n        String storeId = selectedProducts.get(0).getStoreId();\r\n        String username = tvUserName.getText().toString();\r\n        String phonenumber = tvPhoneNumber.getText().toString();\r\n\r\n        if (radVNPay.isChecked()) {\r\n            handleVNPayPayment(address, storeId, username, phonenumber);\r\n        } else if (radCOD.isChecked()) {\r\n            handleCODPayment(address, storeId, username, phonenumber);\r\n        } else {\r\n            showPaymentMethodDialog();\r\n        }\r\n    }\r\n\r\n    private void handleVNPayPayment(String address, String storeId, String username, String phonenumber) {\r\n        int price = Integer.parseInt(tvTotalPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n        String orderInfo = \"Thanh toán đơn hàng \" + orderId;\r\n        List<String> productIds = selectedProducts.stream()\r\n                .map(Product::getProduct_id)\r\n                .collect(Collectors.toList());\r\n        Intent intent = new Intent(CheckoutActivity.this, VNPaymentActivity.class);\r\n        intent.putExtra(\"price\", price);\r\n        intent.putExtra(\"orderInfo\", orderInfo);\r\n        intent.putStringArrayListExtra(\"productIds\", new ArrayList<>(productIds));\r\n        intent.putExtra(\"address\", address);\r\n        intent.putExtra(\"storeId\", storeId);\r\n        intent.putExtra(\"username\", username);\r\n        intent.putExtra(\"phonenumber\", phonenumber);\r\n        intent.putParcelableArrayListExtra(\"products\", new ArrayList<>(selectedProducts));\r\n\r\n        int shippingFee = Integer.parseInt(tvTotalShippingPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n        checkoutViewModel.updateStatusOrder(orderId, shippingFee);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void handleCODPayment(String address, String storeId, String username, String phonenumber) {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_confirm, null);\r\n        builder.setView(dialogView);\r\n\r\n        TextView tvDialogTitle = dialogView.findViewById(R.id.tvDialogTitle);\r\n        TextView tvDialogMessage = dialogView.findViewById(R.id.tvDialogMessage);\r\n        Button btnDialogCancel = dialogView.findViewById(R.id.btnDialogCancel);\r\n        Button btnDialogConfirm = dialogView.findViewById(R.id.btnDialogConfirm);\r\n\r\n        tvDialogTitle.setText(\"Xác nhận đặt hàng\");\r\n        tvDialogMessage.setText(\"Bạn có chắc chắn muốn đặt hàng?\");\r\n\r\n        AlertDialog alertDialog = builder.create();\r\n\r\n        btnDialogCancel.setOnClickListener(v -> alertDialog.dismiss());\r\n\r\n        btnDialogConfirm.setOnClickListener(v -> {\r\n            double totalPrice = Double.parseDouble(tvTotalPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n            String expectedDeliveryTime = \"3-5 ngày\";\r\n            double shippingFee = 0;\r\n            String paymentMethod = \"COD\";\r\n            String shippingName = \"Giao hàng nhanh\";\r\n            List<String> productIds = selectedProducts.stream()\r\n                    .map(Product::getProduct_id)\r\n                    .collect(Collectors.toList());\r\n            checkoutViewModel.placeOrder(totalPrice, expectedDeliveryTime, shippingFee, paymentMethod, shippingName, productIds, address, storeId, selectedProducts, username, phonenumber, new CheckoutViewModel.OrderCallback() {\r\n                @Override\r\n                public void onSuccess(String orderId) {\r\n                    checkoutViewModel.removeOrderedProductsFromCart(FirebaseAuth.getInstance().getCurrentUser().getUid(), new CheckoutViewModel.OrderCallback() {\r\n                        @Override\r\n                        public void onSuccess(String orderId) {\r\n                            Intent intent = new Intent(CheckoutActivity.this, PlaceOrderActivity.class);\r\n                            intent.putExtra(\"orderId\", orderId);\r\n                            checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n\r\n                            int shippingFee = Integer.parseInt(tvTotalShippingPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n                            checkoutViewModel.updateStatusOrder(orderId, shippingFee);\r\n\r\n                            startActivity(intent);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Exception e) {\r\n                            Toast.makeText(CheckoutActivity.this, \"Đặt hàng thất bại\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }, orderId);\r\n                }\r\n\r\n                @Override\r\n                public void onFailure(Exception e) {\r\n                    Toast.makeText(CheckoutActivity.this, \"Đặt hàng thất bại\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n            alertDialog.dismiss();\r\n        });\r\n\r\n        alertDialog.show();\r\n    }\r\n\r\n    private void showPaymentMethodDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_confirm, null);\r\n        builder.setView(dialogView);\r\n\r\n        TextView tvDialogTitle = dialogView.findViewById(R.id.tvDialogTitle);\r\n        TextView tvDialogMessage = dialogView.findViewById(R.id.tvDialogMessage);\r\n        Button btnDialogCancel = dialogView.findViewById(R.id.btnDialogCancel);\r\n        Button btnDialogConfirm = dialogView.findViewById(R.id.btnDialogConfirm);\r\n\r\n        tvDialogTitle.setText(\"Chọn phương thức thanh toán\");\r\n        tvDialogMessage.setText(\"Vui lòng chọn phương thức thanh toán\");\r\n\r\n        AlertDialog alertDialog = builder.create();\r\n\r\n        btnDialogCancel.setVisibility(View.GONE);\r\n        btnDialogConfirm.setText(\"OK\");\r\n        btnDialogConfirm.setOnClickListener(v -> alertDialog.dismiss());\r\n\r\n        alertDialog.show();\r\n    }\r\n\r\n    private void showNoAddressDialog() {\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_confirm, null);\r\n        builder.setView(dialogView);\r\n\r\n        TextView tvDialogTitle = dialogView.findViewById(R.id.tvDialogTitle);\r\n        TextView tvDialogMessage = dialogView.findViewById(R.id.tvDialogMessage);\r\n        Button btnDialogCancel = dialogView.findViewById(R.id.btnDialogCancel);\r\n        Button btnDialogConfirm = dialogView.findViewById(R.id.btnDialogConfirm);\r\n\r\n        tvDialogTitle.setText(\"Không có địa chỉ nhận hàng\");\r\n        tvDialogMessage.setText(\"Vui lòng thêm địa chỉ nhận hàng\");\r\n\r\n        AlertDialog alertDialog = builder.create();\r\n\r\n        btnDialogCancel.setText(\"Thoát\");\r\n        btnDialogCancel.setOnClickListener(v -> finish());\r\n\r\n        btnDialogConfirm.setText(\"Thêm địa chỉ\");\r\n        btnDialogConfirm.setOnClickListener(v -> {\r\n            Intent intent = new Intent(CheckoutActivity.this, MyAddressActivity.class);\r\n            startActivity(intent);\r\n            alertDialog.dismiss();\r\n        });\r\n\r\n        alertDialog.show();\r\n    }\r\n\r\n    private void updatePrices() {\r\n        double totalProductPrice = 0;\r\n        for (Product product : selectedProducts) {\r\n            totalProductPrice += product.getPrice() * product.getQuantity();\r\n        }\r\n\r\n        double totalShippingPrice = 0;\r\n        double finalTotalPrice = totalProductPrice + totalShippingPrice;\r\n\r\n        NumberFormat format = NumberFormat.getCurrencyInstance(new Locale(\"vi\", \"VN\"));\r\n        tvTotalProductPrice.setText(format.format(totalProductPrice));\r\n        tvTotalShippingPrice.setText(format.format(totalShippingPrice));\r\n        tvFinalTotalPrice.setText(format.format(finalTotalPrice));\r\n        tvTotalPrice.setText(format.format(finalTotalPrice));\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == 1 && resultCode == RESULT_OK) {\r\n            checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n        checkoutViewModel.isUserDataAvailable(isAvailable -> {\r\n            if (!isAvailable) {\r\n                showNoAddressDialog();\r\n            }\r\n        });\r\n    }\r\n    private void createOrderWithGHN() {\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        db.collection(\"users\").document(user.getUid())\r\n                .get()\r\n                .addOnSuccessListener(documentSnapshot -> {\r\n                    List<Map<String, Object>> addresses = (List<Map<String, Object>>) documentSnapshot.get(\"addresses\");\r\n\r\n                    if (addresses != null && !addresses.isEmpty()) {\r\n                        Map<String, Object> address = addresses.get(0);\r\n\r\n                        String province = (String) address.get(\"province\");\r\n                        String district = (String) address.get(\"district\");\r\n                        String commune = (String) address.get(\"commune\");\r\n                        String street = (String) address.get(\"street\");\r\n\r\n                        String address5 = street + \", \" + commune + \", \" + district + \", \" + province;\r\n                        checkoutViewModel.createOrder(address5, selectedProducts.get(0).getStoreId());\r\n                        checkoutViewModel.shippingFee.observe(CheckoutActivity.this, shippingFee -> {\r\n\r\n\r\n                            int price = Integer.parseInt(tvTotalProductPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n                            int totalPrice = price + Integer.parseInt(String.valueOf(shippingFee));\r\n\r\n\r\n                            NumberFormat format = NumberFormat.getCurrencyInstance(new Locale(\"vi\", \"VN\"));\r\n\r\n                            tvTotalShippingPrice.setText(format.format(shippingFee));\r\n\r\n                            String totalPriceString = format.format(totalPrice);\r\n                            tvFinalTotalPrice.setText(totalPriceString);\r\n                            tvTotalPrice.setText(totalPriceString);\r\n\r\n                        });\r\n                    }\r\n                });\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java b/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java
--- a/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ b/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java	(date 1734108821560)
@@ -217,7 +217,7 @@
         btnDialogConfirm.setOnClickListener(v -> {
             double totalPrice = Double.parseDouble(tvTotalPrice.getText().toString().replaceAll("[^0-9]", ""));
             String expectedDeliveryTime = "3-5 ngày";
-            double shippingFee = 0;
+            double shippingFee = Double.parseDouble(tvTotalShippingPrice.getText().toString().replaceAll("[^0-9]", ""));
             String paymentMethod = "COD";
             String shippingName = "Giao hàng nhanh";
             List<String> productIds = selectedProducts.stream()
@@ -229,14 +229,6 @@
                     checkoutViewModel.removeOrderedProductsFromCart(FirebaseAuth.getInstance().getCurrentUser().getUid(), new CheckoutViewModel.OrderCallback() {
                         @Override
                         public void onSuccess(String orderId) {
-                            Intent intent = new Intent(CheckoutActivity.this, PlaceOrderActivity.class);
-                            intent.putExtra("orderId", orderId);
-                            checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);
-
-                            int shippingFee = Integer.parseInt(tvTotalShippingPrice.getText().toString().replaceAll("[^0-9]", ""));
-                            checkoutViewModel.updateStatusOrder(orderId, shippingFee);
-
-                            startActivity(intent);
                         }
 
                         @Override
@@ -251,6 +243,10 @@
                     Toast.makeText(CheckoutActivity.this, "Đặt hàng thất bại", Toast.LENGTH_SHORT).show();
                 }
             });
+            Intent intent = new Intent(CheckoutActivity.this, PlaceOrderActivity.class);
+            intent.putExtra("orderId", orderId);
+            startActivity(intent);
+            finish();
             alertDialog.dismiss();
         });
 
@@ -365,7 +361,6 @@
                             int price = Integer.parseInt(tvTotalProductPrice.getText().toString().replaceAll("[^0-9]", ""));
                             int totalPrice = price + Integer.parseInt(String.valueOf(shippingFee));
 
-
                             NumberFormat format = NumberFormat.getCurrencyInstance(new Locale("vi", "VN"));
 
                             tvTotalShippingPrice.setText(format.format(shippingFee));
Index: app/src/main/java/com/example/agrimart/ui/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.agrimart.ui;\r\n\r\nimport android.Manifest;\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Build;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.app.NotificationManagerCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.fragment.app.Fragment;\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.ui.Account.SignInActivity;\r\nimport com.example.agrimart.ui.Cart.CartFragment;\r\nimport com.example.agrimart.ui.Explore.ExploreFragment;\r\nimport com.example.agrimart.ui.Homepage.HomeFragment;\r\nimport com.example.agrimart.ui.MyProfile.MyProfileFragment;\r\nimport com.example.agrimart.ui.Notification.NotificationFragment;\r\nimport com.example.agrimart.viewmodel.NotificationViewModel;\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n\r\n    private SharedPreferences sharedPreferences;\r\n    private FirebaseAuth mAuth;\r\n    private static final int REQUEST_NOTIFICATION_PERMISSION = 1;\r\n    private NotificationViewModel notificationViewModel;\r\n    private String userId;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_main);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main1), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, 0);\r\n            return insets;\r\n        });\r\n\r\n        sharedPreferences = getSharedPreferences(\"user_prefs\", MODE_PRIVATE);\r\n        mAuth = FirebaseAuth.getInstance();\r\n\r\n        if (sharedPreferences.getBoolean(\"is_logged_in\", false)) {\r\n            FirebaseUser currentUser = mAuth.getCurrentUser();\r\n            if (currentUser != null) {\r\n                userId = currentUser.getUid();\r\n                navigateToHome();\r\n                getUserRole(currentUser);\r\n            } else {\r\n                clearLoginState();\r\n                navigateToLogin();\r\n            }\r\n        } else {\r\n            navigateToLogin();\r\n        }\r\n\r\n        BottomNavigationView bottomNavigationView = findViewById(R.id.bottomNavigation);\r\n        bottomNavigationView.setOnNavigationItemSelectedListener(this::onNavigationItemSelected);\r\n\r\n        if (savedInstanceState == null) {\r\n            loadFragment(new HomeFragment());\r\n            bottomNavigationView.setSelectedItemId(R.id.home);\r\n        }\r\n\r\n        int selectedItemId = getIntent().getIntExtra(\"selected_item_id\", R.id.home);\r\n        if (selectedItemId != R.id.home) {\r\n            bottomNavigationView.setSelectedItemId(selectedItemId);\r\n        }\r\n\r\n        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.TIRAMISU) {\r\n            if (ContextCompat.checkSelfPermission(this, Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {\r\n                ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.POST_NOTIFICATIONS}, REQUEST_NOTIFICATION_PERMISSION);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onStart() {\r\n        super.onStart();\r\n        getUserInfo(mAuth.getCurrentUser());\r\n        notificationViewModel = new NotificationViewModel(getApplication());\r\n        notificationViewModel.createNotificationsForUser();\r\n        notificationViewModel.createNotificationsForSeller();\r\n    }\r\n\r\n    private void navigateToHome() {\r\n        loadFragment(new HomeFragment());\r\n    }\r\n\r\n    private void navigateToLogin() {\r\n        Intent intent = new Intent(MainActivity.this, SignInActivity.class);\r\n        startActivity(intent);\r\n        finish();\r\n    }\r\n\r\n    private void clearLoginState() {\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.clear();\r\n        editor.apply();\r\n    }\r\n\r\n    private void loadFragment(Fragment fragment) {\r\n        getSupportFragmentManager().beginTransaction()\r\n                .replace(R.id.fragment_container, fragment)\r\n                .commit();\r\n    }\r\n\r\n    private boolean onNavigationItemSelected(MenuItem item) {\r\n        Fragment selectedFragment = null;\r\n\r\n        if (item.getItemId() == R.id.home) {\r\n            selectedFragment = new HomeFragment();\r\n        } else if (item.getItemId() == R.id.category) {\r\n            selectedFragment = new ExploreFragment();\r\n        } else if (item.getItemId() == R.id.notification) {\r\n            selectedFragment = new NotificationFragment();\r\n            Bundle bundle = new Bundle();\r\n            bundle.putString(\"userId\", userId);\r\n            selectedFragment.setArguments(bundle);\r\n        } else if (item.getItemId() == R.id.profile) {\r\n            selectedFragment = new MyProfileFragment();\r\n        } else if (item.getItemId() == R.id.cart) {\r\n            selectedFragment = new CartFragment();\r\n        } else {\r\n            return false;\r\n        }\r\n\r\n        if (selectedFragment != null) {\r\n            loadFragment(selectedFragment);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    private void getUserRole(FirebaseUser user) {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        DocumentReference docRef = db.collection(\"users\").document(user.getUid());\r\n        docRef.get().addOnSuccessListener(documentSnapshot -> {\r\n            if (documentSnapshot.exists()) {\r\n                String role = documentSnapshot.getString(\"role\");\r\n                if (role != null) {\r\n                    saveUserToSharedPreferences(role);\r\n                }\r\n            }\r\n        }).addOnFailureListener(e -> {\r\n            Log.e(\"FirebaseError\", \"Error getting user role\", e);\r\n        });\r\n    }\r\n\r\n    private void getUserInfo(FirebaseUser user) {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        DocumentReference docRef = db.collection(\"users\").document(user.getUid());\r\n        docRef.get().addOnSuccessListener(documentSnapshot -> {\r\n            if (documentSnapshot.exists()) {\r\n                userId = documentSnapshot.getString(\"userId\");\r\n                Log.d(\"MainActivity\", \"User ID: \" + userId);\r\n            }\r\n        }).addOnFailureListener(e -> {\r\n            Log.e(\"FirebaseError\", \"Error getting user info\", e);\r\n        });\r\n    }\r\n\r\n    private void saveUserToSharedPreferences(String role) {\r\n        SharedPreferences.Editor editor = sharedPreferences.edit();\r\n        editor.putString(\"user_role\", role);\r\n        editor.apply();\r\n    }\r\n\r\n    @Override\r\n    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) {\r\n        super.onRequestPermissionsResult(requestCode, permissions, grantResults);\r\n        if (requestCode == REQUEST_NOTIFICATION_PERMISSION) {\r\n            if (grantResults.length > 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED) {\r\n                Log.d(\"NotificationPermission\", \"Notification permission granted\");\r\n            } else {\r\n                Log.d(\"NotificationPermission\", \"Notification permission denied\");\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/agrimart/ui/MainActivity.java b/app/src/main/java/com/example/agrimart/ui/MainActivity.java
--- a/app/src/main/java/com/example/agrimart/ui/MainActivity.java	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ b/app/src/main/java/com/example/agrimart/ui/MainActivity.java	(date 1734108623383)
@@ -9,8 +9,11 @@
 import android.content.pm.PackageManager;
 import android.os.Build;
 import android.os.Bundle;
+import android.os.Looper;
 import android.util.Log;
 import android.view.MenuItem;
+import android.widget.Toast;
+
 import androidx.activity.EdgeToEdge;
 import androidx.annotation.NonNull;
 import androidx.appcompat.app.AppCompatActivity;
@@ -23,13 +26,17 @@
 import androidx.core.view.WindowInsetsCompat;
 import androidx.fragment.app.Fragment;
 import com.example.agrimart.R;
+import com.example.agrimart.adapter.OrderStoreAdapter;
+import com.example.agrimart.data.model.Order;
 import com.example.agrimart.ui.Account.SignInActivity;
 import com.example.agrimart.ui.Cart.CartFragment;
 import com.example.agrimart.ui.Explore.ExploreFragment;
 import com.example.agrimart.ui.Homepage.HomeFragment;
 import com.example.agrimart.ui.MyProfile.MyProfileFragment;
 import com.example.agrimart.ui.Notification.NotificationFragment;
+import com.example.agrimart.ui.Payment.VnpayRefund;
 import com.example.agrimart.viewmodel.NotificationViewModel;
+import com.example.agrimart.viewmodel.OrderStatusFragmentViewModel;
 import com.google.android.material.bottomnavigation.BottomNavigationView;
 import com.google.firebase.auth.FirebaseAuth;
 import com.google.firebase.auth.FirebaseUser;
@@ -43,6 +50,7 @@
     private static final int REQUEST_NOTIFICATION_PERMISSION = 1;
     private NotificationViewModel notificationViewModel;
     private String userId;
+    private static final String CHANNEL_ID = "default_channel";
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -90,6 +98,11 @@
                 ActivityCompat.requestPermissions(this, new String[]{Manifest.permission.POST_NOTIFICATIONS}, REQUEST_NOTIFICATION_PERMISSION);
             }
         }
+
+        Order order = (Order) getIntent().getSerializableExtra("order");
+        if (order != null) {
+            refundOrder(order);
+        }
     }
 
     @Override
@@ -99,6 +112,22 @@
         notificationViewModel = new NotificationViewModel(getApplication());
         notificationViewModel.createNotificationsForUser();
         notificationViewModel.createNotificationsForSeller();
+        createNotificationChannel(this);
+    }
+
+    private void createNotificationChannel(Context context) {
+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+            CharSequence name = "Default Channel";
+            String description = "This is the default notification channel";
+            int importance = NotificationManager.IMPORTANCE_DEFAULT;
+            NotificationChannel channel = new NotificationChannel(CHANNEL_ID, name, importance);
+            channel.setDescription(description);
+
+            NotificationManager notificationManager = context.getSystemService(NotificationManager.class);
+            if (notificationManager != null) {
+                notificationManager.createNotificationChannel(channel);
+            }
+        }
     }
 
     private void navigateToHome() {
@@ -195,4 +224,59 @@
             }
         }
     }
+
+    private void refundOrder(Order order) {
+        FirebaseFirestore db = FirebaseFirestore.getInstance();
+        db.collection("orders").document(order.getOrderId()).get().addOnSuccessListener(documentSnapshot -> {
+            if (documentSnapshot.exists()) {
+                Boolean isReturn = documentSnapshot.getBoolean("return");
+                if (isReturn != null && isReturn) {
+                    String vnpTxnRef = documentSnapshot.getString("vnpTxnRef");
+                    order.setVnpTxnRef(vnpTxnRef);
+
+                    new Thread(() -> {
+                        try {
+                            String vnp_TxnRef = order.getVnpTxnRef();
+                            String transactionId = order.getTransactionId();
+                            int totalPrice = order.getTotalPrice();
+                            String formattedTransactionDate = OrderStoreAdapter.formatTimestampToVnpayDate(order.getTransactionDateMillis());
+
+                            // Gửi yêu cầu hoàn tiền
+                            String response = VnpayRefund.createRefundRequest(
+                                    vnp_TxnRef,          // Mã giao dịch của merchant (txnRef)
+                                    transactionId,       // Mã giao dịch từ VNPAY
+                                    totalPrice,          // Số tiền hoàn
+                                    formattedTransactionDate, // Ngày giao dịch gốc
+                                    "Hoàn tiền cho đơn hàng " + order.getOrderId(), // Lý do hoàn tiền
+                                    "admin"              // Người thực hiện
+                            );
+
+                            // Nếu hoàn tiền thành công
+                            if (response.contains("\"vnp_ResponseCode\":\"00\"")) { // ResponseCode là 00 (Hoàn tiền thành công)
+                                new android.os.Handler(Looper.getMainLooper()).post(() -> {
+                                    Toast.makeText(MainActivity.this, "Hoàn tiền thành công", Toast.LENGTH_SHORT).show();
+                                });
+                            } else {
+                                // Nếu hoàn tiền không thành công
+                                new android.os.Handler(Looper.getMainLooper()).post(() -> {
+                                    Toast.makeText(MainActivity.this, "Không thể hoàn tiền: " + response, Toast.LENGTH_SHORT).show();
+                                });
+                                Log.println(Log.ERROR, "Vnpayreturn", response);
+                            }
+                        } catch (Exception e) {
+                            new android.os.Handler(Looper.getMainLooper()).post(() -> {
+                                Toast.makeText(MainActivity.this, "Lỗi: " + e.getMessage(), Toast.LENGTH_SHORT).show();
+                            });
+                        }
+                    }).start();
+                } else {
+                    Toast.makeText(MainActivity.this, "Đơn hàng không có yêu cầu trả hàng", Toast.LENGTH_SHORT).show();
+                }
+            } else {
+                Toast.makeText(MainActivity.this, "Đơn hàng không tồn tại", Toast.LENGTH_SHORT).show();
+            }
+        }).addOnFailureListener(e -> {
+            Toast.makeText(MainActivity.this, "Lỗi khi lấy thông tin đơn hàng: " + e.getMessage(), Toast.LENGTH_SHORT).show();
+        });
+    }
 }
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM_[Changes]/shelved.patch	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,656 +0,0 @@
-Index: app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.adapter;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.data.model.Notification;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class NotificationAdapter extends RecyclerView.Adapter<NotificationAdapter.ViewHolder> {\r\n    private List<Notification> notificationList;\r\n\r\n    public NotificationAdapter(List<Notification> notificationList) {\r\n        this.notificationList = notificationList;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_notification, parent, false);\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n        Notification notification = notificationList.get(position);\r\n        holder.title.setText(notification.getTitle());\r\n        holder.message.setText(notification.getMessage());\r\n\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy HH:mm\", Locale.getDefault());\r\n        String formattedDate = sdf.format(new Date(notification.getTimestamp()));\r\n        holder.time.setText(formattedDate);\r\n\r\n        Glide.with(holder.itemView.getContext())\r\n                .load(notification.getImageUrl())\r\n                .placeholder(R.drawable.placeholder_image)\r\n                .error(R.drawable.logo_icon)\r\n                .into(holder.notificationImage);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return notificationList.size();\r\n    }\r\n\r\n    public static class ViewHolder extends RecyclerView.ViewHolder {\r\n        TextView title, message, time;\r\n        ImageView notificationImage;\r\n\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            title = itemView.findViewById(R.id.notification_title);\r\n            message = itemView.findViewById(R.id.notification_message);\r\n            time = itemView.findViewById(R.id.notification_time);\r\n            notificationImage = itemView.findViewById(R.id.notification_image);\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java b/app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java
---- a/app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java	(date 1733234798503)
-@@ -1,5 +1,7 @@
- package com.example.agrimart.adapter;
- 
-+import android.content.Context;
-+import android.content.Intent;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
-@@ -12,6 +14,7 @@
- import com.bumptech.glide.Glide;
- import com.example.agrimart.R;
- import com.example.agrimart.data.model.Notification;
-+import com.example.agrimart.ui.MyProfile.PurchasedOrders.OrderInformationActivity;
- 
- import java.text.SimpleDateFormat;
- import java.util.Date;
-@@ -47,6 +50,30 @@
-                 .placeholder(R.drawable.placeholder_image)
-                 .error(R.drawable.logo_icon)
-                 .into(holder.notificationImage);
-+
-+        holder.itemView.setOnClickListener(v -> {
-+            Context context = v.getContext();
-+            Intent intent = new Intent(context, OrderInformationActivity.class);
-+
-+            String message = notification.getMessage();
-+            String status = "";
-+            if (message.contains("chờ người bán xác nhận")) {
-+                status = "pending";
-+            } else if (message.contains("đang được đóng gói")) {
-+                status = "approved";
-+            } else if (message.contains("trong quá trình vận chuyển")) {
-+                status = "delivering";
-+            } else if (message.contains("đã được giao thành công")) {
-+                status = "delivered";
-+            } else if (message.contains("đã bị huỷ")) {
-+                status = "canceled";
-+            } else if (message.contains("trả hàng")) {
-+                status = "return";
-+            }
-+
-+            intent.putExtra("status", status);
-+            context.startActivity(intent);
-+        });
-     }
- 
-     @Override
-Index: app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.ui.Cart;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.adapter.CheckoutAdapter;\r\nimport com.example.agrimart.data.model.Product;\r\nimport com.example.agrimart.ui.MyProfile.MyAddress.MyAddressActivity;\r\nimport com.example.agrimart.ui.Payment.VNPaymentActivity;\r\nimport com.example.agrimart.viewmodel.CheckoutViewModel;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.text.NumberFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.stream.Collectors;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.widget.Toast;\r\n\r\npublic class CheckoutActivity extends AppCompatActivity {\r\n    private Toolbar toolbar;\r\n    private RecyclerView rvProduct;\r\n    private CheckoutAdapter checkoutAdapter;\r\n    private List<Product> selectedProducts;\r\n    private TextView tvTotalProductPrice, tvTotalShippingPrice, tvFinalTotalPrice, tvTotalPrice;\r\n    private TextView tvUserName, tvPhoneNumber, tvAddress, tvChangeAddress;\r\n    private Button btnPlaceOrder;\r\n    private RadioGroup paymentMethodGroup;\r\n    private RadioButton radVNPay, radCOD;\r\n    private LinearLayout linearLayout;\r\n    private CheckoutViewModel checkoutViewModel;\r\n    private String orderId;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_checkout);\r\n\r\n        setupWindowInsets();\r\n        setupToolbar();\r\n        initializeViews();\r\n        setupRecyclerView();\r\n        setupViewModel();\r\n        setupListeners();\r\n        updatePrices();\r\n        calculateShippingFee();\r\n        createOrderWithGHN();\r\n    }\r\n\r\n    private void setupWindowInsets() {\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main1), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) {\r\n            Window window = getWindow();\r\n            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\r\n            window.setStatusBarColor(ContextCompat.getColor(this, R.color.green));\r\n        }\r\n    }\r\n\r\n    private void setupToolbar() {\r\n        toolbar = findViewById(R.id.header);\r\n        toolbar.setNavigationOnClickListener(v -> finish());\r\n    }\r\n\r\n    private void initializeViews() {\r\n        selectedProducts = getIntent().getParcelableArrayListExtra(\"selectedProducts\");\r\n        if (selectedProducts == null) {\r\n            selectedProducts = new ArrayList<>();\r\n        }\r\n\r\n        rvProduct = findViewById(R.id.rv_product);\r\n        tvTotalProductPrice = findViewById(R.id.tvTotalProductPrice);\r\n        tvTotalShippingPrice = findViewById(R.id.tvTotalShippingPrice);\r\n        tvFinalTotalPrice = findViewById(R.id.tvFinalTotalPrice);\r\n        tvTotalPrice = findViewById(R.id.tvTotalPrice);\r\n        tvUserName = findViewById(R.id.tvUserName1);\r\n        tvPhoneNumber = findViewById(R.id.tvPhoneNumber1);\r\n        tvAddress = findViewById(R.id.tvAddress1);\r\n        tvChangeAddress = findViewById(R.id.tvChangeAddress);\r\n        paymentMethodGroup = findViewById(R.id.radGroupPayment);\r\n        radVNPay = findViewById(R.id.radVNPay);\r\n        radCOD = findViewById(R.id.radCOD);\r\n        btnPlaceOrder = findViewById(R.id.btnPlaceOrder);\r\n        linearLayout = findViewById(R.id.lnGHN);\r\n    }\r\n\r\n    private void setupRecyclerView() {\r\n        rvProduct.setLayoutManager(new LinearLayoutManager(this));\r\n        checkoutAdapter = new CheckoutAdapter(selectedProducts);\r\n        rvProduct.setAdapter(checkoutAdapter);\r\n    }\r\n\r\n    private void setupViewModel() {\r\n        checkoutViewModel = new ViewModelProvider(this).get(CheckoutViewModel.class);\r\n        checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n        orderId = checkoutViewModel.generateOrderId();\r\n    }\r\n\r\n    private void setupListeners() {\r\n        tvChangeAddress.setOnClickListener(v -> {\r\n            Intent intent = new Intent(CheckoutActivity.this, MyAddressActivity.class);\r\n            startActivity(intent);\r\n        });\r\n\r\n        paymentMethodGroup.setOnCheckedChangeListener((group, checkId) -> {\r\n            if (checkId == R.id.radVNPay) {\r\n                radCOD.setChecked(false);\r\n            } else if (checkId == R.id.radCOD) {\r\n                radVNPay.setChecked(false);\r\n            }\r\n        });\r\n\r\n        btnPlaceOrder.setOnClickListener(v -> placeOrder());\r\n    }\r\n\r\n    private void calculateShippingFee() {\r\n        checkoutViewModel.createOrder(tvAddress.getText().toString(), selectedProducts.get(0).getStoreId());\r\n        checkoutViewModel.shippingFee.observe(this, shippingFee -> {\r\n            tvTotalShippingPrice.setText(shippingFee + \" đ\");\r\n\r\n            int price = Integer.parseInt(tvTotalProductPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n            int totalPrice = price + Integer.parseInt(String.valueOf(shippingFee));\r\n            tvTotalPrice.setText(totalPrice + \" đ\");\r\n            checkoutViewModel.updateStatusOrder(orderId, shippingFee);\r\n        });\r\n    }\r\n\r\n    private void placeOrder() {\r\n        String address = tvAddress.getText().toString();\r\n        String storeId = selectedProducts.get(0).getStoreId();\r\n        String username = tvUserName.getText().toString();\r\n        String phonenumber = tvPhoneNumber.getText().toString();\r\n\r\n        if (radVNPay.isChecked()) {\r\n            handleVNPayPayment(address, storeId, username, phonenumber);\r\n        } else if (radCOD.isChecked()) {\r\n            handleCODPayment(address, storeId, username, phonenumber);\r\n        } else {\r\n            showPaymentMethodDialog();\r\n        }\r\n    }\r\n\r\n    private void handleVNPayPayment(String address, String storeId, String username, String phonenumber) {\r\n        int price = Integer.parseInt(tvTotalPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n        String orderInfo = \"Thanh toán đơn hàng \" + orderId;\r\n        List<String> productIds = selectedProducts.stream()\r\n                .map(Product::getProduct_id)\r\n                .collect(Collectors.toList());\r\n        Intent intent = new Intent(CheckoutActivity.this, VNPaymentActivity.class);\r\n        intent.putExtra(\"price\", price);\r\n        intent.putExtra(\"orderInfo\", orderInfo);\r\n        intent.putStringArrayListExtra(\"productIds\", new ArrayList<>(productIds));\r\n        intent.putExtra(\"address\", address);\r\n        intent.putExtra(\"storeId\", storeId);\r\n        intent.putExtra(\"username\", username);\r\n        intent.putExtra(\"phonenumber\", phonenumber);\r\n        intent.putParcelableArrayListExtra(\"products\", new ArrayList<>(selectedProducts));\r\n\r\n        int shippingFee = Integer.parseInt(tvTotalShippingPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n        checkoutViewModel.updateStatusOrder(orderId, shippingFee);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void handleCODPayment(String address, String storeId, String username, String phonenumber) {\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"Xác nhận đặt hàng\")\r\n                .setMessage(\"Bạn có chắc chắn muốn đặt hàng?\")\r\n                .setPositiveButton(\"Đặt hàng\", (dialog, which) -> {\r\n                    double totalPrice = Double.parseDouble(tvTotalPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n                    String expectedDeliveryTime = \"3-5 ngày\";\r\n                    double shippingFee = 0;\r\n                    String paymentMethod = \"COD\";\r\n                    String shippingName = \"Giao hàng nhanh\";\r\n                    List<String> productIds = selectedProducts.stream()\r\n                            .map(Product::getProduct_id)\r\n                            .collect(Collectors.toList());\r\n                    checkoutViewModel.placeOrder(totalPrice, expectedDeliveryTime, shippingFee, paymentMethod, shippingName, productIds, address, storeId, selectedProducts, username, phonenumber, new CheckoutViewModel.OrderCallback() {\r\n                        @Override\r\n                        public void onSuccess(String orderId) {\r\n                            checkoutViewModel.removeOrderedProductsFromCart(FirebaseAuth.getInstance().getCurrentUser().getUid(), new CheckoutViewModel.OrderCallback() {\r\n                                @Override\r\n                                public void onSuccess(String orderId) {\r\n                                    Intent intent = new Intent(CheckoutActivity.this, PlaceOrderActivity.class);\r\n                                    intent.putExtra(\"orderId\", orderId);\r\n                                    checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n\r\n                                    int shippingFee = Integer.parseInt(tvTotalShippingPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n                                    checkoutViewModel.updateStatusOrder(orderId, shippingFee);\r\n\r\n                                    startActivity(intent);\r\n                                }\r\n\r\n                                @Override\r\n                                public void onFailure(Exception e) {\r\n                                    Toast.makeText(CheckoutActivity.this, \"Đặt hàng thất bại\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            }, orderId);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Exception e) {\r\n                            Toast.makeText(CheckoutActivity.this, \"Đặt hàng thất bại\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                })\r\n                .setNegativeButton(\"Hủy\", (dialog, which) -> {\r\n                })\r\n                .show();\r\n    }\r\n\r\n    private void showPaymentMethodDialog() {\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"Chọn phương thức thanh toán\")\r\n                .setMessage(\"Vui lòng chọn phương thức thanh toán\")\r\n                .setPositiveButton(\"OK\", (dialog, which) -> {\r\n                })\r\n                .show();\r\n    }\r\n\r\n    private void showNoAddressDialog() {\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"Không có địa chỉ nhận hàng\")\r\n                .setMessage(\"Vui lòng thêm địa chỉ nhận hàng\")\r\n                .setPositiveButton(\"Thêm địa chỉ\", (dialog, which) -> {\r\n                    Intent intent = new Intent(CheckoutActivity.this, MyAddressActivity.class);\r\n                    startActivity(intent);\r\n                })\r\n                .setNegativeButton(\"Thoát\", (dialog, which) -> finish())\r\n                .show();\r\n    }\r\n\r\n    private void updatePrices() {\r\n        double totalProductPrice = 0;\r\n        for (Product product : selectedProducts) {\r\n            totalProductPrice += product.getPrice() * product.getQuantity();\r\n        }\r\n\r\n        double totalShippingPrice = 0;\r\n        double finalTotalPrice = totalProductPrice + totalShippingPrice;\r\n\r\n        NumberFormat format = NumberFormat.getCurrencyInstance(new Locale(\"vi\", \"VN\"));\r\n        tvTotalProductPrice.setText(format.format(totalProductPrice));\r\n        tvTotalShippingPrice.setText(format.format(totalShippingPrice));\r\n        tvFinalTotalPrice.setText(format.format(finalTotalPrice));\r\n        tvTotalPrice.setText(format.format(finalTotalPrice));\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == 1 && resultCode == RESULT_OK) {\r\n            checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n        checkoutViewModel.isUserDataAvailable(isAvailable -> {\r\n            if (!isAvailable) {\r\n                showNoAddressDialog();\r\n            }\r\n        });\r\n    }\r\n    private void createOrderWithGHN() {\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        db.collection(\"users\").document(user.getUid())\r\n                .get()\r\n                .addOnSuccessListener(documentSnapshot -> {\r\n                    List<Map<String, Object>> addresses = (List<Map<String, Object>>) documentSnapshot.get(\"addresses\");\r\n\r\n                    if (addresses != null && !addresses.isEmpty()) {\r\n                        Map<String, Object> address = addresses.get(0);\r\n\r\n                        String province = (String) address.get(\"province\");\r\n                        String district = (String) address.get(\"district\");\r\n                        String commune = (String) address.get(\"commune\");\r\n                        String street = (String) address.get(\"street\");\r\n\r\n                        String address5 = street + \", \" + commune + \", \" + district + \", \" + province;\r\n                        checkoutViewModel.createOrder(address5, selectedProducts.get(0).getStoreId());\r\n                        checkoutViewModel.shippingFee.observe(CheckoutActivity.this, shippingFee -> {\r\n\r\n\r\n                            int price = Integer.parseInt(tvTotalProductPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n                            int totalPrice = price + Integer.parseInt(String.valueOf(shippingFee));\r\n\r\n\r\n                            NumberFormat format = NumberFormat.getCurrencyInstance(new Locale(\"vi\", \"VN\"));\r\n\r\n                            tvTotalShippingPrice.setText(format.format(shippingFee));\r\n\r\n                            String totalPriceString = format.format(totalPrice);\r\n                            tvFinalTotalPrice.setText(totalPriceString);\r\n                            tvTotalPrice.setText(totalPriceString);\r\n\r\n                        });\r\n                    }\r\n                });\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java b/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java
---- a/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java	(date 1733234798515)
-@@ -2,6 +2,7 @@
- 
- import android.content.Intent;
- import android.os.Bundle;
-+import android.util.Log;
- import android.view.Window;
- import android.view.WindowManager;
- import android.widget.Button;
-@@ -139,7 +140,9 @@
-             }
-         });
- 
--        btnPlaceOrder.setOnClickListener(v -> placeOrder());
-+        btnPlaceOrder.setOnClickListener(v -> placeOrder()
-+
-+        );
-     }
- 
-     private void calculateShippingFee() {
-@@ -206,9 +209,11 @@
-                     checkoutViewModel.placeOrder(totalPrice, expectedDeliveryTime, shippingFee, paymentMethod, shippingName, productIds, address, storeId, selectedProducts, username, phonenumber, new CheckoutViewModel.OrderCallback() {
-                         @Override
-                         public void onSuccess(String orderId) {
-+                            Log.d("CheckoutActivity", "Order placed successfully: " + orderId);
-                             checkoutViewModel.removeOrderedProductsFromCart(FirebaseAuth.getInstance().getCurrentUser().getUid(), new CheckoutViewModel.OrderCallback() {
-                                 @Override
-                                 public void onSuccess(String orderId) {
-+                                    Log.d("CheckoutActivity", "Products removed from cart successfully: " + orderId);
-                                     Intent intent = new Intent(CheckoutActivity.this, PlaceOrderActivity.class);
-                                     intent.putExtra("orderId", orderId);
-                                     checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);
-@@ -221,6 +226,7 @@
- 
-                                 @Override
-                                 public void onFailure(Exception e) {
-+                                    Log.e("CheckoutActivity", "Failed to remove products from cart", e);
-                                     Toast.makeText(CheckoutActivity.this, "Đặt hàng thất bại", Toast.LENGTH_SHORT).show();
-                                 }
-                             }, orderId);
-@@ -228,6 +234,7 @@
- 
-                         @Override
-                         public void onFailure(Exception e) {
-+                            Log.e("CheckoutActivity", "Failed to place order", e);
-                             Toast.makeText(CheckoutActivity.this, "Đặt hàng thất bại", Toast.LENGTH_SHORT).show();
-                         }
-                     });
-Index: app/src/main/res/layout/fragment_notification.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:id=\"@+id/main1\"\r\n    android:background=\"@color/white\"\r\n    tools:context=\".ui.Notification.NotificationFragment\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:id=\"@+id/header\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:background=\"@color/green\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvTitle\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerInParent=\"true\"\r\n            android:text=\"@string/thong_bao\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\"\r\n            android:textColor=\"@color/black\"/>\r\n    </RelativeLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recycler_notifications\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/header\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        android:dividerHeight=\"1dp\"\r\n        android:padding=\"8dp\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/fragment_notification.xml b/app/src/main/res/layout/fragment_notification.xml
---- a/app/src/main/res/layout/fragment_notification.xml	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/res/layout/fragment_notification.xml	(date 1733234798525)
-@@ -18,14 +18,21 @@
-         android:background="@color/green">
- 
-         <TextView
--            android:id="@+id/tvTitle"
--            android:layout_width="wrap_content"
--            android:layout_height="wrap_content"
--            android:layout_centerInParent="true"
--            android:text="@string/thong_bao"
--            android:textSize="20sp"
-+            android:id="@+id/tv_title"
-+            android:layout_width="126dp"
-+            android:layout_height="40dp"
-+            android:layout_gravity="center"
-+            android:layout_marginStart="145dp"
-+            android:layout_marginTop="16dp"
-+            android:layout_marginEnd="140dp"
-+            android:layout_marginBottom="8dp"
-+            android:gravity="center"
-+            android:text="THÔNG BÁO"
-+            android:textSize="18sp"
-             android:textStyle="bold"
--            android:textColor="@color/black"/>
-+            app:layout_constraintEnd_toEndOf="parent"
-+            app:layout_constraintStart_toStartOf="parent"
-+            app:layout_constraintTop_toTopOf="parent" />
-     </RelativeLayout>
- 
-     <androidx.recyclerview.widget.RecyclerView
-@@ -38,4 +45,12 @@
-         app:layout_constraintEnd_toEndOf="parent"
-         android:dividerHeight="1dp"
-         android:padding="8dp" />
-+
-+    <ImageView
-+        android:id="@+id/ivEmpty"
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:src="@drawable/noti_empty"
-+        app:layout_constraintTop_toBottomOf="@id/header"
-+        tools:layout_editor_absoluteX="0dp" />
- </androidx.constraintlayout.widget.ConstraintLayout>
-Index: app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.ui.Notification;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.adapter.NotificationAdapter;\r\nimport com.example.agrimart.data.model.Notification;\r\nimport com.example.agrimart.viewmodel.NotificationViewModel;\r\nimport java.util.List;\r\n\r\npublic class NotificationFragment extends Fragment {\r\n    private static final String ARG_USER_ID = \"userId\";\r\n    private static final String TAG = \"NotificationFragment\";\r\n    private RecyclerView recyclerView;\r\n    private NotificationAdapter adapter;\r\n    private NotificationViewModel notificationViewModel;\r\n    private String userId;\r\n\r\n    public NotificationFragment() {\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_notification, container, false);\r\n\r\n        if (getArguments() != null) {\r\n            userId = getArguments().getString(\"userId\");\r\n        } else {\r\n            Log.e(TAG, \"Không tìm thấy userId\");\r\n        }\r\n\r\n        recyclerView = view.findViewById(R.id.recycler_notifications);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\r\n\r\n        notificationViewModel = new ViewModelProvider(this).get(NotificationViewModel.class);\r\n        notificationViewModel.getNotifications(userId);\r\n        notificationViewModel.getNotificationsLiveData().observe(getViewLifecycleOwner(), notifications -> {\r\n            adapter = new NotificationAdapter(notifications);\r\n            recyclerView.setAdapter(adapter);\r\n        });\r\n\r\n        return view;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java b/app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java
---- a/app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java	(date 1733234798534)
-@@ -2,15 +2,16 @@
- 
- import android.os.Bundle;
- import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.widget.ImageView;
- import androidx.annotation.NonNull;
- import androidx.annotation.Nullable;
- import androidx.fragment.app.Fragment;
- import androidx.lifecycle.ViewModelProvider;
- import androidx.recyclerview.widget.LinearLayoutManager;
- import androidx.recyclerview.widget.RecyclerView;
--import android.view.LayoutInflater;
--import android.view.View;
--import android.view.ViewGroup;
- import com.example.agrimart.R;
- import com.example.agrimart.adapter.NotificationAdapter;
- import com.example.agrimart.data.model.Notification;
-@@ -24,6 +25,7 @@
-     private NotificationAdapter adapter;
-     private NotificationViewModel notificationViewModel;
-     private String userId;
-+    private ImageView ivEmpty;
- 
-     public NotificationFragment() {
-     }
-@@ -40,12 +42,20 @@
- 
-         recyclerView = view.findViewById(R.id.recycler_notifications);
-         recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
-+        ivEmpty = view.findViewById(R.id.ivEmpty);
- 
-         notificationViewModel = new ViewModelProvider(this).get(NotificationViewModel.class);
-         notificationViewModel.getNotifications(userId);
-         notificationViewModel.getNotificationsLiveData().observe(getViewLifecycleOwner(), notifications -> {
--            adapter = new NotificationAdapter(notifications);
--            recyclerView.setAdapter(adapter);
-+            if (notifications == null || notifications.isEmpty()) {
-+                ivEmpty.setVisibility(View.VISIBLE);
-+                recyclerView.setVisibility(View.GONE);
-+            } else {
-+                ivEmpty.setVisibility(View.GONE);
-+                recyclerView.setVisibility(View.VISIBLE);
-+                adapter = new NotificationAdapter(notifications);
-+                recyclerView.setAdapter(adapter);
-+            }
-         });
- 
-         return view;
-Index: app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.viewmodel;\r\n\r\nimport android.Manifest;\r\nimport android.app.Application;\r\nimport android.content.pm.PackageManager;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.app.NotificationManagerCompat;\r\nimport androidx.lifecycle.AndroidViewModel;\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.lifecycle.MutableLiveData;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.data.model.Notification;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentChange;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class NotificationViewModel extends AndroidViewModel {\r\n    private static final String TAG = \"NotificationViewModel\";\r\n    private final MutableLiveData<List<Notification>> notificationsLiveData = new MutableLiveData<>();\r\n    private final FirebaseFirestore firestore = FirebaseFirestore.getInstance();\r\n    private static final int REQUEST_NOTIFICATION_PERMISSION = 1;\r\n\r\n    public NotificationViewModel(@NonNull Application application) {\r\n        super(application);\r\n    }\r\n\r\n    public void createNotificationsForUser() {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n        db.collection(\"orders\")\r\n                .whereEqualTo(\"userId\", FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addSnapshotListener((snapshots, e) -> {\r\n                    if (e != null) {\r\n                        Log.e(\"FirebaseError\", \"Error listening to orders\", e);\r\n                        return;\r\n                    }\r\n\r\n                    if (snapshots != null && !snapshots.isEmpty()) {\r\n                        for (DocumentChange dc : snapshots.getDocumentChanges()) {\r\n                            notificationForUser(dc, db);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void createNotificationsForSeller() {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        db.collection(\"orders\")\r\n                .whereEqualTo(\"storeId\", FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addSnapshotListener((snapshots, e) -> {\r\n                    if (e != null) {\r\n                        Log.e(\"FirebaseError\", \"Error listening to orders\", e);\r\n                        return;\r\n                    }\r\n\r\n                    if (snapshots != null && !snapshots.isEmpty()) {\r\n                        for (DocumentChange dc : snapshots.getDocumentChanges()) {\r\n                            notificationForSeller(dc, db);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void notificationForUser(DocumentChange dc, FirebaseFirestore db) {\r\n        String status = dc.getDocument().getString(\"status\");\r\n        List<String> notifiedStatuses = (List<String>) dc.getDocument().get(\"notifiedStatuses\");\r\n        String imageUrl = \"android.resource://\" + getApplication().getPackageName() + \"/\" + R.drawable.bell;\r\n        long timestamp = System.currentTimeMillis();\r\n\r\n        String title = \"\";\r\n        String message = \"\";\r\n\r\n        if (notifiedStatuses != null && notifiedStatuses.contains(status)) {\r\n            return;\r\n        }\r\n\r\n        switch (status) {\r\n            case \"pending\":\r\n                title = \"Đặt hàng thành công!\";\r\n                message = \"Đơn hàng của bạn đang chờ người bán xác nhận.\";\r\n                break;\r\n            case \"approved\":\r\n                title = \"Người bán đang chuẩn bị hàng\";\r\n                message = \"Đơn hàng của bạn đang được đóng gói và sẽ sớm giao cho đơn vị vận chuyển.\";\r\n                break;\r\n            case \"delivering\":\r\n                title = \"Đơn hàng đang trong quá trình vận chuyển\";\r\n                message = \"Đơn hàng của bạn hiện đang trong quá trình vận chuyển.\";\r\n                break;\r\n            case \"delivered\":\r\n                title = \"Đơn hàng đã được giao thành công\";\r\n                message = \"Bạn có hài lòng với sản phẩm đã nhận?\";\r\n                break;\r\n            case \"canceled\":\r\n                title = \"Đơn hàng đã bị huỷ\";\r\n                message = \"Đơn hàng của bạn đã bị huỷ. Nếu bạn đã thanh toán bằng VNPAY số tiền đã thanh toán sẽ sớm được hoàn lại vào tài khoản của bạn.\";\r\n                break;\r\n            case \"return\":\r\n                title = \"Yêu cầu trả hàng đã được chấp nhận\";\r\n                message = \"Yêu cầu trả hàng của bạn đã được chấp nhận. Vui lòng chờ trong thời gian sớm nhất.\";\r\n                break;\r\n        }\r\n\r\n        if (!title.isEmpty() && !message.isEmpty()) {\r\n            Notification notification = new Notification(title, message, timestamp, imageUrl);\r\n            sendNotification(title, message);\r\n            saveNotificationToFirestore(notification);\r\n\r\n            db.collection(\"orders\").document(dc.getDocument().getId())\r\n                    .update(\"notifiedStatuses\", FieldValue.arrayUnion(status))\r\n                    .addOnSuccessListener(aVoid -> Log.d(\"Firestore\", \"Updated notifiedStatuses\"))\r\n                    .addOnFailureListener(e -> Log.e(\"FirestoreError\", \"Error updating notifiedStatuses\", e));\r\n        }\r\n    }\r\n\r\n    private void notificationForSeller(DocumentChange dc, FirebaseFirestore db) {\r\n        String status = dc.getDocument().getString(\"status\");\r\n        List<String> notifiedStatuses = (List<String>) dc.getDocument().get(\"notifiedStatuses\");\r\n        String imageUrl = \"android.resource://\" + getApplication().getPackageName() + \"/\" + R.drawable.bell;\r\n        long timestamp = System.currentTimeMillis();\r\n\r\n        String title = \"\";\r\n        String message = \"\";\r\n\r\n        if (notifiedStatuses != null && notifiedStatuses.contains(status)) {\r\n            return;\r\n        }\r\n\r\n        switch (status) {\r\n            case \"pending\":\r\n                title = \"Có đơn hàng mới\";\r\n                message = \"Hãy xác nhận đơn hàng mới vừa được đặt\";\r\n                break;\r\n            case \"approved\":\r\n                title = \"Chuẩn bị hàng\";\r\n                message = \"Chuẩn bị đơn hàng để giao cho đơn vị vận chuyển\";\r\n                break;\r\n            case \"delivering\":\r\n                title = \"Đơn bán đang trong quá trình vận chuyển\";\r\n                message = \"Đơn bán hiện đang trong quá trình vận chuyển.\";\r\n                break;\r\n            case \"delivered\":\r\n                title = \"Đơn bán đã được giao thành công\";\r\n                message = \"Đơn bán đã được giao thành công cho khách hàng.\";\r\n                break;\r\n            case \"canceled\":\r\n                title = \"Đơn hàng đã bị huỷ\";\r\n                message = \"Đơn hàng đã bị huỷ.\";\r\n                break;\r\n            case \"return\":\r\n                title = \"Trả hàng\";\r\n                message = \"Khách hàng yêu cầu trả hàng.\";\r\n                break;\r\n        }\r\n\r\n        if (!title.isEmpty() && !message.isEmpty()) {\r\n            Notification notification = new Notification(title, message, timestamp, imageUrl);\r\n            sendNotification(title, message);\r\n            saveNotificationToFirestore(notification);\r\n\r\n            db.collection(\"orders\").document(dc.getDocument().getId())\r\n                    .update(\"notifiedStatuses\", FieldValue.arrayUnion(status))\r\n                    .addOnSuccessListener(aVoid -> Log.d(\"Firestore\", \"Updated notifiedStatuses\"))\r\n                    .addOnFailureListener(e -> Log.e(\"FirestoreError\", \"Error updating notifiedStatuses\", e));\r\n        }\r\n    }\r\n\r\n    public void sendNotification(String title, String message) {\r\n        NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplication(), \"default_channel\")\r\n                .setSmallIcon(R.drawable.logo_icon)\r\n                .setContentTitle(title)\r\n                .setContentText(message)\r\n                .setPriority(NotificationCompat.PRIORITY_DEFAULT)\r\n                .setAutoCancel(true);\r\n\r\n        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(getApplication());\r\n        if (ActivityCompat.checkSelfPermission(getApplication(), Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {\r\n            Log.e(\"NotificationViewModel\", \"Notification permission not granted\");\r\n            return;\r\n        }\r\n        notificationManager.notify((int) System.currentTimeMillis(), builder.build());\r\n    }\r\n\r\n    public void saveNotificationToFirestore(Notification notification) {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        FirebaseUser currentUser = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n        if (currentUser != null) {\r\n            notification.setUserId(currentUser.getUid());\r\n            db.collection(\"notifications\").add(notification)\r\n                    .addOnSuccessListener(documentReference -> {\r\n                        Log.d(\"Firestore\", \"Notification saved successfully\");\r\n                    })\r\n                    .addOnFailureListener(e -> {\r\n                        Log.e(\"FirestoreError\", \"Error saving notification\", e);\r\n                    });\r\n        }\r\n    }\r\n\r\n    public void getNotifications(String userId) {\r\n        Log.d(TAG, \"Fetching notifications for user ID: \" + userId);\r\n        firestore.collection(\"notifications\")\r\n                .whereEqualTo(\"userId\", userId)\r\n                .orderBy(\"timestamp\", Query.Direction.DESCENDING)\r\n                .get()\r\n                .addOnCompleteListener(task -> {\r\n                    if (task.isSuccessful() && task.getResult() != null) {\r\n                        List<Notification> notifications = new ArrayList<>();\r\n                        for (QueryDocumentSnapshot doc : task.getResult()) {\r\n                            Notification notification = doc.toObject(Notification.class);\r\n                            notifications.add(notification);\r\n                        }\r\n                        Log.d(TAG, \"Fetched \" + notifications.size() + \" notifications\");\r\n                        notificationsLiveData.setValue(notifications);\r\n                    } else {\r\n                        Log.e(TAG, \"Error fetching notifications\", task.getException());\r\n                    }\r\n                });\r\n    }\r\n\r\n    public LiveData<List<Notification>> getNotificationsLiveData() {\r\n        return notificationsLiveData;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java b/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java
---- a/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java	(date 1733234798543)
-@@ -78,6 +78,7 @@
-         List<String> notifiedStatuses = (List<String>) dc.getDocument().get("notifiedStatuses");
-         String imageUrl = "android.resource://" + getApplication().getPackageName() + "/" + R.drawable.bell;
-         long timestamp = System.currentTimeMillis();
-+        String orderId = dc.getDocument().getId();
- 
-         String title = "";
-         String message = "";
-@@ -89,32 +90,32 @@
-         switch (status) {
-             case "pending":
-                 title = "Đặt hàng thành công!";
--                message = "Đơn hàng của bạn đang chờ người bán xác nhận.";
-+                message = "Đơn hàng " + orderId + " đang chờ người bán xác nhận.";
-                 break;
-             case "approved":
-                 title = "Người bán đang chuẩn bị hàng";
--                message = "Đơn hàng của bạn đang được đóng gói và sẽ sớm giao cho đơn vị vận chuyển.";
-+                message = "Đơn hàng " + orderId + " đang được đóng gói và sẽ sớm giao cho đơn vị vận chuyển.";
-                 break;
-             case "delivering":
-                 title = "Đơn hàng đang trong quá trình vận chuyển";
--                message = "Đơn hàng của bạn hiện đang trong quá trình vận chuyển.";
-+                message = "Đơn hàng " + orderId + " hiện đang trong quá trình vận chuyển.";
-                 break;
-             case "delivered":
-                 title = "Đơn hàng đã được giao thành công";
--                message = "Bạn có hài lòng với sản phẩm đã nhận?";
-+                message = "Đơn hàng " + orderId + " đã được giao thành công. Bạn có hài lòng với sản phẩm đã nhận?";
-                 break;
-             case "canceled":
-                 title = "Đơn hàng đã bị huỷ";
--                message = "Đơn hàng của bạn đã bị huỷ. Nếu bạn đã thanh toán bằng VNPAY số tiền đã thanh toán sẽ sớm được hoàn lại vào tài khoản của bạn.";
-+                message = "Đơn hàng " + orderId + " đã bị huỷ. Nếu bạn đã thanh toán bằng VNPAY số tiền đã thanh toán sẽ sớm được hoàn lại vào tài khoản của bạn.";
-                 break;
-             case "return":
-                 title = "Yêu cầu trả hàng đã được chấp nhận";
--                message = "Yêu cầu trả hàng của bạn đã được chấp nhận. Vui lòng chờ trong thời gian sớm nhất.";
-+                message = "Yêu cầu trả hàng của đơn hàng " + orderId + " đã được chấp nhận. Vui lòng chờ trong thời gian sớm nhất.";
-                 break;
-         }
- 
-         if (!title.isEmpty() && !message.isEmpty()) {
--            Notification notification = new Notification(title, message, timestamp, imageUrl);
-+            Notification notification = new Notification(title, message, timestamp, imageUrl,"");
-             sendNotification(title, message);
-             saveNotificationToFirestore(notification);
- 
-@@ -130,6 +131,7 @@
-         List<String> notifiedStatuses = (List<String>) dc.getDocument().get("notifiedStatuses");
-         String imageUrl = "android.resource://" + getApplication().getPackageName() + "/" + R.drawable.bell;
-         long timestamp = System.currentTimeMillis();
-+        String orderId = dc.getDocument().getId();
- 
-         String title = "";
-         String message = "";
-@@ -141,32 +143,32 @@
-         switch (status) {
-             case "pending":
-                 title = "Có đơn hàng mới";
--                message = "Hãy xác nhận đơn hàng mới vừa được đặt";
-+                message = "Đơn hàng " + orderId + " mới vừa được đặt. Hãy xác nhận đơn hàng.";
-                 break;
-             case "approved":
-                 title = "Chuẩn bị hàng";
--                message = "Chuẩn bị đơn hàng để giao cho đơn vị vận chuyển";
-+                message = "Chuẩn bị đơn hàng " + orderId + " để giao cho đơn vị vận chuyển.";
-                 break;
-             case "delivering":
-                 title = "Đơn bán đang trong quá trình vận chuyển";
--                message = "Đơn bán hiện đang trong quá trình vận chuyển.";
-+                message = "Đơn bán " + orderId + " hiện đang trong quá trình vận chuyển.";
-                 break;
-             case "delivered":
-                 title = "Đơn bán đã được giao thành công";
--                message = "Đơn bán đã được giao thành công cho khách hàng.";
-+                message = "Đơn bán " + orderId + " đã được giao thành công cho khách hàng.";
-                 break;
-             case "canceled":
-                 title = "Đơn hàng đã bị huỷ";
--                message = "Đơn hàng đã bị huỷ.";
-+                message = "Đơn hàng " + orderId + " đã bị huỷ.";
-                 break;
-             case "return":
-                 title = "Trả hàng";
--                message = "Khách hàng yêu cầu trả hàng.";
-+                message = "Khách hàng yêu cầu trả hàng cho đơn hàng " + orderId + ".";
-                 break;
-         }
- 
-         if (!title.isEmpty() && !message.isEmpty()) {
--            Notification notification = new Notification(title, message, timestamp, imageUrl);
-+            Notification notification = new Notification(title, message, timestamp, imageUrl, "");
-             sendNotification(title, message);
-             saveNotificationToFirestore(notification);
- 
-Index: app/src/main/res/layout/activity_place_order.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.Cart.PlaceOrderActivity\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@color/transparent\"\r\n        app:titleTextColor=\"@color/black\"\r\n        app:titleTextAppearance=\"@style/TextAppearance.AppCompat.Large\"\r\n        app:navigationIcon=\"@drawable/ic_arrow_left\"\r\n        android:elevation=\"4dp\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvOrderStatus\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"180dp\"\r\n        android:gravity=\"center\"\r\n        android:text=\"Đặt hàng thành công\"\r\n        android:textColor=\"@android:color/black\"\r\n        android:textSize=\"24sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/toolbar\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"240dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/tvOrderStatus\">\r\n\r\n        <Button\r\n            android:id=\"@+id/btnReturnToHome\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"40dp\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:layout_weight=\"1\"\r\n            android:backgroundTint=\"@color/green\"\r\n            app:cornerRadius=\"8dp\"\r\n            android:elevation=\"6dp\"\r\n            android:fontFamily=\"sans-serif-medium\"\r\n            android:shadowColor=\"#55000000\"\r\n            android:text=\"Trang chủ\"\r\n            android:textColor=\"@android:color/white\"\r\n            android:textSize=\"16sp\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btnViewOrders\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginEnd=\"40dp\"\r\n            android:layout_weight=\"1\"\r\n            android:backgroundTint=\"@color/green\"\r\n            app:cornerRadius=\"8dp\"\r\n            android:elevation=\"6dp\"\r\n            android:fontFamily=\"sans-serif-medium\"\r\n            android:shadowColor=\"#55000000\"\r\n            android:text=\"Đơn mua\"\r\n            android:textColor=\"@android:color/white\"\r\n            android:textSize=\"16sp\" />\r\n    </LinearLayout>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_place_order.xml b/app/src/main/res/layout/activity_place_order.xml
---- a/app/src/main/res/layout/activity_place_order.xml	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/res/layout/activity_place_order.xml	(date 1733234798553)
-@@ -24,7 +24,7 @@
-         android:id="@+id/tvOrderStatus"
-         android:layout_width="wrap_content"
-         android:layout_height="wrap_content"
--        android:layout_marginTop="180dp"
-+        android:layout_marginTop="140dp"
-         android:gravity="center"
-         android:text="Đặt hàng thành công"
-         android:textColor="@android:color/black"
-@@ -34,6 +34,16 @@
-         app:layout_constraintStart_toStartOf="parent"
-         app:layout_constraintTop_toBottomOf="@id/toolbar" />
- 
-+    <ImageView
-+        android:id="@+id/ivOrderStatus"
-+        android:layout_width="wrap_content"
-+        android:layout_height="100dp"
-+        android:layout_marginTop="16dp"
-+        android:src="@drawable/success"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toBottomOf="@id/tvOrderStatus" />
-+
-     <LinearLayout
-         android:layout_width="match_parent"
-         android:layout_height="wrap_content"
-@@ -52,6 +62,7 @@
-             android:layout_marginStart="40dp"
-             android:layout_marginTop="16dp"
-             android:layout_marginEnd="16dp"
-+            android:layout_marginBottom="10dp"
-             android:layout_weight="1"
-             android:backgroundTint="@color/green"
-             app:cornerRadius="8dp"
-@@ -69,6 +80,7 @@
-             android:layout_marginStart="16dp"
-             android:layout_marginTop="16dp"
-             android:layout_marginEnd="40dp"
-+            android:layout_marginBottom="10dp"
-             android:layout_weight="1"
-             android:backgroundTint="@color/green"
-             app:cornerRadius="8dp"
-Index: .idea/deploymentTargetSelector.xml
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
-deleted file mode 100644
---- a/.idea/deploymentTargetSelector.xml	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ /dev/null	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-@@ -1,10 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="deploymentTargetSelector">
--    <selectionStates>
--      <SelectionState runConfigName="SignInActivity">
--        <option name="selectionMode" value="DROPDOWN" />
--      </SelectionState>
--    </selectionStates>
--  </component>
--</project>
-\ No newline at end of file
-Index: app/src/main/java/com/example/agrimart/data/model/Order.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.data.model;\r\n\r\nimport com.google.firebase.Timestamp;\r\nimport com.google.firebase.firestore.PropertyName;\r\n\r\nimport java.io.Serializable;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class Order implements Serializable {\r\n\r\n    @PropertyName(\"orderId\")\r\n    private String orderId;\r\n\r\n    @PropertyName(\"products\")\r\n    private List<Product> products;\r\n\r\n    @PropertyName(\"status\")\r\n    private String status;\r\n\r\n    @PropertyName(\"total_price\")\r\n    private int totalPrice;\r\n\r\n    @PropertyName(\"userId\")\r\n    private String userId;\r\n\r\n    @PropertyName(\"storeId\")\r\n    private String sellerId;\r\n\r\n    @PropertyName(\"order_code\")\r\n    private String orderCode;\r\n\r\n    @PropertyName(\"address\")\r\n    private String address;\r\n\r\n    @PropertyName(\"shipping_name\")\r\n    private String shippingName;\r\n\r\n    @PropertyName(\"shipping_fee\")\r\n    private Double shippingFee;\r\n\r\n    private String statusDelivery;\r\n\r\n    private String storeName;\r\n\r\n    private String paymentMethod;\r\n\r\n    private boolean checkRating;\r\n\r\n    private String username;\r\n\r\n    private String phonenumber;\r\n\r\n    @PropertyName(\"created_at\")\r\n    private Timestamp createdAt;\r\n\r\n    private String transactionId;\r\n\r\n    private Timestamp transactionDate;\r\n\r\n    @PropertyName(\"vnp_TxnRef\")\r\n    private String vnpTxnRef;\r\n\r\n    public Order() {\r\n    }\r\n\r\n    public Order(String orderId, String status, int totalPrice) {\r\n        this.orderId = orderId;\r\n        this.status = status;\r\n        this.totalPrice = totalPrice;\r\n    }\r\n\r\n    @PropertyName(\"orderId\")\r\n    public String getOrderId() {\r\n        return orderId;\r\n    }\r\n\r\n    @PropertyName(\"orderId\")\r\n    public void setOrderId(String orderId) {\r\n        this.orderId = orderId;\r\n    }\r\n\r\n    @PropertyName(\"status\")\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    @PropertyName(\"status\")\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    @PropertyName(\"total_price\")\r\n    public int getTotalPrice() {\r\n        return totalPrice;\r\n    }\r\n\r\n    @PropertyName(\"total_price\")\r\n    public void setTotalPrice(int totalPrice) {\r\n        this.totalPrice = totalPrice;\r\n    }\r\n\r\n    @PropertyName(\"userId\")\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    @PropertyName(\"userId\")\r\n    public void setUserId(String userId) {\r\n        this.userId = userId;\r\n    }\r\n\r\n    @PropertyName(\"order_code\")\r\n    public String getOrderCode() {\r\n        return orderCode;\r\n    }\r\n\r\n    @PropertyName(\"order_code\")\r\n    public void setOrderCode(String orderCode) {\r\n        this.orderCode = orderCode;\r\n    }\r\n\r\n    public String getStatusDelivery() {\r\n        return statusDelivery;\r\n    }\r\n\r\n    public void setStatusDelivery(String statusDelivery) {\r\n        this.statusDelivery = statusDelivery;\r\n    }\r\n\r\n    @PropertyName(\"address\")\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    @PropertyName(\"address\")\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    @PropertyName(\"storeId\")\r\n    public String getSellerId() {\r\n        return sellerId;\r\n    }\r\n\r\n    @PropertyName(\"storeId\")\r\n    public void setSellerId(String sellerId) {\r\n        this.sellerId = sellerId;\r\n    }\r\n\r\n    @PropertyName(\"products\")\r\n    public List<Product> getProducts() {\r\n        return products;\r\n    }\r\n\r\n    @PropertyName(\"products\")\r\n    public void setProducts(List<Product> products) {\r\n        this.products = products;\r\n    }\r\n\r\n    public String getStoreName() {\r\n        return storeName;\r\n    }\r\n\r\n    public void setStoreName(String storeName) {\r\n        this.storeName = storeName;\r\n    }\r\n\r\n    public String getPaymentMethod() {\r\n        return paymentMethod;\r\n    }\r\n\r\n    public void setPaymentMethod(String paymentMethod) {\r\n        this.paymentMethod = paymentMethod;\r\n    }\r\n\r\n    public boolean isCheckRating() {\r\n        return checkRating;\r\n    }\r\n\r\n    public void setCheckRating(boolean checkRating) {\r\n        this.checkRating = checkRating;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public String getPhonenumber() {\r\n        return phonenumber;\r\n    }\r\n\r\n    public void setPhonenumber(String phonenumber) {\r\n        this.phonenumber = phonenumber;\r\n    }\r\n\r\n    @PropertyName(\"shipping_name\")\r\n    public String getShippingName() {\r\n        return shippingName;\r\n    }\r\n\r\n    @PropertyName(\"shipping_name\")\r\n    public void setShippingName(String shippingName) {\r\n        this.shippingName = shippingName;\r\n    }\r\n\r\n    @PropertyName(\"shipping_fee\")\r\n    public Double getShippingFee() {\r\n        return shippingFee;\r\n    }\r\n\r\n    @PropertyName(\"shipping_fee\")\r\n    public void setShippingFee(Double shippingFee) {\r\n        this.shippingFee = shippingFee;\r\n    }\r\n\r\n    private long createdAtMillis;  // Chúng ta sẽ sử dụng long thay vì Timestamp để truyền qua Intent\r\n    // Getter và setter cho createdAtMillis\r\n    public long getCreatedAtMillis() {\r\n        return createdAtMillis;\r\n    }\r\n\r\n    @PropertyName(\"created_at\")\r\n    public void setCreatedAt(Timestamp createdAt) {\r\n        this.createdAtMillis = createdAt.toDate().getTime(); // Chuyển Timestamp thành long\r\n    }\r\n\r\n    @PropertyName(\"created_at\")\r\n    public Timestamp getCreatedAt() {\r\n        return createdAt;\r\n    }\r\n\r\n    private long transactionDateMillis;\r\n\r\n    public String getTransactionId() {\r\n        return transactionId;\r\n    }\r\n\r\n    public void setTransactionId(String transactionId) {\r\n        this.transactionId = transactionId;\r\n    }\r\n\r\n    public Timestamp getTransactionDate() {\r\n        return transactionDate;\r\n    }\r\n\r\n    public void setTransactionDate(Timestamp transactionDate) {\r\n        this.transactionDateMillis = transactionDate.toDate().getTime();\r\n    }\r\n\r\n    @PropertyName(\"vnp_TxnRef\")\r\n    public String getVnpTxnRef() {\r\n        return vnpTxnRef;\r\n    }\r\n\r\n    @PropertyName(\"vnp_TxnRef\")\r\n    public void setVnpTxnRef(String vnpTxnRef) {\r\n        this.vnpTxnRef = vnpTxnRef;\r\n    }\r\n\r\n    public String getFormattedCreatedAtDate() {\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy HH:mm\", Locale.getDefault());\r\n        Date date = new Date(createdAtMillis);\r\n        return dateFormat.format(date);\r\n    }\r\n\r\n    public long getTransactionDateMillis() {\r\n        return transactionDateMillis;\r\n    }\r\n\r\n    public void setTransactionDateMillis(long transactionDateMillis) {\r\n        this.transactionDateMillis = transactionDateMillis;\r\n        this.createdAtMillis = createdAt.toDate().getTime();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/data/model/Order.java b/app/src/main/java/com/example/agrimart/data/model/Order.java
---- a/app/src/main/java/com/example/agrimart/data/model/Order.java	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/java/com/example/agrimart/data/model/Order.java	(date 1733234798565)
-@@ -150,12 +150,10 @@
-         this.sellerId = sellerId;
-     }
- 
--    @PropertyName("products")
-     public List<Product> getProducts() {
-         return products;
-     }
- 
--    @PropertyName("products")
-     public void setProducts(List<Product> products) {
-         this.products = products;
-     }
-@@ -220,23 +218,15 @@
-         this.shippingFee = shippingFee;
-     }
- 
--    private long createdAtMillis;  // Chúng ta sẽ sử dụng long thay vì Timestamp để truyền qua Intent
--    // Getter và setter cho createdAtMillis
--    public long getCreatedAtMillis() {
--        return createdAtMillis;
--    }
--
--    @PropertyName("created_at")
--    public void setCreatedAt(Timestamp createdAt) {
--        this.createdAtMillis = createdAt.toDate().getTime(); // Chuyển Timestamp thành long
--    }
--
-     @PropertyName("created_at")
-     public Timestamp getCreatedAt() {
-         return createdAt;
-     }
- 
--    private long transactionDateMillis;
-+    @PropertyName("created_at")
-+    public void setCreatedAt(Timestamp createdAt) {
-+        this.createdAt = createdAt;
-+    }
- 
-     public String getTransactionId() {
-         return transactionId;
-@@ -251,7 +241,7 @@
-     }
- 
-     public void setTransactionDate(Timestamp transactionDate) {
--        this.transactionDateMillis = transactionDate.toDate().getTime();
-+        this.transactionDate = transactionDate;
-     }
- 
-     @PropertyName("vnp_TxnRef")
-@@ -266,16 +256,7 @@
- 
-     public String getFormattedCreatedAtDate() {
-         SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm", Locale.getDefault());
--        Date date = new Date(createdAtMillis);
-+        Date date = new Date(createdAt.toDate().getTime());
-         return dateFormat.format(date);
-     }
--
--    public long getTransactionDateMillis() {
--        return transactionDateMillis;
--    }
--
--    public void setTransactionDateMillis(long transactionDateMillis) {
--        this.transactionDateMillis = transactionDateMillis;
--        this.createdAtMillis = createdAt.toDate().getTime();
--    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.ui.Payment;\r\n\r\nimport com.example.agrimart.data.API.Config_VNPAY;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.InetAddress;\r\nimport java.net.URL;\r\nimport java.io.OutputStream;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.*;\r\nimport javax.crypto.Mac;\r\nimport javax.crypto.spec.SecretKeySpec;\r\nimport android.util.Log;\r\nimport org.json.JSONObject;\r\n\r\npublic class VnpayRefund {\r\n\r\n    public static String createRefundRequest(String txnRef, String transactionNo, int amount, String transactionDate, String orderInfo, String createBy) throws Exception {\r\n        String vnp_RequestId = UUID.randomUUID().toString();\r\n        String vnp_Version = Config_VNPAY.VNP_VERSION;\r\n        String vnp_Command = Config_VNPAY.VNP_COMMAND_REFUND;\r\n        String vnp_TmnCode = Config_VNPAY.VNP_TMNCODE;\r\n        String vnp_TransactionType = \"02\";\r\n        String vnp_CreateDate = new SimpleDateFormat(\"yyyyMMddHHmmss\").format(new Date());\r\n        String vnp_IpAddr = InetAddress.getLocalHost().getHostAddress();\r\n        String vnp_HashSecret = Config_VNPAY.VNP_HASH_SECRET;\r\n        String formattedAmount = String.valueOf(amount * 100);\r\n\r\n        //checksum\r\n        String data = vnp_RequestId + \"|\" + vnp_Version + \"|\" + vnp_Command + \"|\" + vnp_TmnCode + \"|\" + vnp_TransactionType + \"|\" + txnRef + \"|\" + formattedAmount + \"|\" + transactionNo + \"|\" + transactionDate + \"|\" + createBy + \"|\" + vnp_CreateDate + \"|\" + vnp_IpAddr + \"|\" + orderInfo;\r\n\r\n        //vnp_SecureHash\r\n        String vnp_SecureHash = hmacSHA512(vnp_HashSecret, data);\r\n\r\n        // tạo parameters map\r\n        Map<String, String> vnp_Params = new HashMap<>();\r\n        vnp_Params.put(\"vnp_RequestId\", vnp_RequestId);\r\n        vnp_Params.put(\"vnp_Version\", vnp_Version);\r\n        vnp_Params.put(\"vnp_Command\", vnp_Command);\r\n        vnp_Params.put(\"vnp_TmnCode\", vnp_TmnCode);\r\n        vnp_Params.put(\"vnp_TransactionType\", vnp_TransactionType);\r\n        vnp_Params.put(\"vnp_TxnRef\", txnRef);\r\n        vnp_Params.put(\"vnp_Amount\", formattedAmount);\r\n        vnp_Params.put(\"vnp_TransactionNo\", transactionNo);\r\n        vnp_Params.put(\"vnp_TransactionDate\", transactionDate);\r\n        vnp_Params.put(\"vnp_OrderInfo\", orderInfo);\r\n        vnp_Params.put(\"vnp_CreateBy\", createBy);\r\n        vnp_Params.put(\"vnp_CreateDate\", vnp_CreateDate);\r\n        vnp_Params.put(\"vnp_IpAddr\", vnp_IpAddr);\r\n        vnp_Params.put(\"vnp_SecureHash\", vnp_SecureHash);\r\n\r\n        // Create JSON body from vnp_Params\r\n        JSONObject jsonBody = new JSONObject(vnp_Params);\r\n\r\n        Log.d(\"VnpayRefund\", \"Refund Request: \" + jsonBody.toString());\r\n\r\n        // gủi request đến VNPAY\r\n        URL url = new URL(Config_VNPAY.VNPAY_SANDBOX_REFUND_URL);\r\n        HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n        connection.setRequestMethod(\"POST\");\r\n        connection.setDoOutput(true);\r\n        connection.setRequestProperty(\"Content-Type\", \"application/json\");\r\n        connection.setRequestProperty(\"Accept\", \"application/json\");\r\n\r\n        OutputStream os = connection.getOutputStream();\r\n        os.write(jsonBody.toString().getBytes(\"UTF-8\"));\r\n        os.close();\r\n\r\n        //Nhận response từ VNPAY\r\n        int responseCode = connection.getResponseCode();\r\n        if (responseCode == HttpURLConnection.HTTP_OK) {\r\n            Scanner scanner = new Scanner(connection.getInputStream());\r\n            StringBuilder response = new StringBuilder();\r\n            while (scanner.hasNext()) {\r\n                response.append(scanner.nextLine());\r\n            }\r\n            scanner.close();\r\n            return response.toString();\r\n        } else {\r\n            return \"Lỗi: \" + responseCode;\r\n        }\r\n    }\r\n\r\n    public static String hmacSHA512(String key, String data) throws Exception {\r\n        Mac hmacSha512 = Mac.getInstance(\"HmacSHA512\");\r\n        SecretKeySpec secretKeySpec = new SecretKeySpec(key.getBytes(\"UTF-8\"), \"HmacSHA512\");\r\n        hmacSha512.init(secretKeySpec);\r\n        byte[] hashBytes = hmacSha512.doFinal(data.getBytes(\"UTF-8\"));\r\n        StringBuilder result = new StringBuilder();\r\n        for (byte b : hashBytes) {\r\n            result.append(String.format(\"%02x\", b));\r\n        }\r\n        return result.toString();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java b/app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java
---- a/app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java	(date 1733234798571)
-@@ -76,6 +76,7 @@
-             scanner.close();
-             return response.toString();
-         } else {
-+            Log.e("VnpayRefund", "Lỗi: " + responseCode);
-             return "Lỗi: " + responseCode;
-         }
-     }
-Index: app/src/main/java/com/example/agrimart/data/model/Notification.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.data.model;\r\n\r\npublic class Notification {\r\n    private String title;\r\n    private String message;\r\n    private long timestamp;\r\n    private String img;\r\n    private String userId;\r\n\r\n    public Notification(String title, String message, long timestamp, String imageUrl) {\r\n        this.title = title;\r\n        this.message = message;\r\n        this.timestamp = timestamp;\r\n        this.img = imageUrl;\r\n    }\r\n\r\n    public Notification() {\r\n    }\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public String getMessage() {\r\n        return message;\r\n    }\r\n\r\n    public long getTimestamp() {\r\n        return timestamp;\r\n    }\r\n\r\n    public String getImageUrl() {\r\n        return img;\r\n    }\r\n\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    public void setUserId(String userId) {\r\n        this.userId = userId;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/data/model/Notification.java b/app/src/main/java/com/example/agrimart/data/model/Notification.java
---- a/app/src/main/java/com/example/agrimart/data/model/Notification.java	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/java/com/example/agrimart/data/model/Notification.java	(date 1733234798578)
-@@ -7,11 +7,12 @@
-     private String img;
-     private String userId;
- 
--    public Notification(String title, String message, long timestamp, String imageUrl) {
-+    public Notification(String title, String message, long timestamp, String imageUrl, String userId) {
-         this.title = title;
-         this.message = message;
-         this.timestamp = timestamp;
-         this.img = imageUrl;
-+        this.userId = userId;
-     }
- 
-     public Notification() {
-Index: app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.adapter;\r\n\r\nimport static androidx.core.content.ContextCompat.startActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.data.model.Order;\r\nimport com.example.agrimart.data.model.Product;\r\nimport com.example.agrimart.ui.Cart.CheckoutActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyRating.ProductRatingActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyRating.ShopRatingActivity;\r\nimport com.example.agrimart.ui.MyProfile.PurchasedOrders.OrderInformationActivity;\r\nimport com.example.agrimart.ui.MyProfile.PurchasedOrders.RequestReturn.RequestReturnActivity;\r\nimport com.example.agrimart.ui.Payment.VnpayRefund;\r\nimport com.example.agrimart.viewmodel.OrderStatusFragmentViewModel;\r\nimport com.google.firebase.Timestamp;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class OrderStoreAdapter extends RecyclerView.Adapter<OrderStoreAdapter.OrderStoreViewHolder> {\r\n    private final List<Order> orderStoreList = new ArrayList<>();\r\n    private OrderStatusFragmentViewModel viewModel;\r\n    private final int REQUEST_CODE_RATING = 1001;\r\n\r\n\r\n    // Constructor\r\n    public OrderStoreAdapter(List<Order> orderStoreList, OrderStatusFragmentViewModel viewModel) {\r\n        this.orderStoreList.addAll(orderStoreList);\r\n        this.viewModel = viewModel;\r\n    }\r\n\r\n    // Update orders when data changes\r\n    public void updateOrders(List<Order> newOrders) {\r\n        orderStoreList.clear();\r\n        orderStoreList.addAll(newOrders);\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public OrderStoreViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        // Inflate the layout for each item\r\n        View view = LayoutInflater.from(parent.getContext())\r\n                .inflate(R.layout.item_order_store, parent, false);\r\n        return new OrderStoreViewHolder(view);\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    public void onBindViewHolder(@NonNull OrderStoreViewHolder holder, int position) {\r\n        // Get the current OrderStore\r\n        Order orderStore = orderStoreList.get(position);\r\n\r\n        List<Product> products = orderStore.getProducts();\r\n        ProductOrderAdapter productOrderAdapter = new ProductOrderAdapter(products);\r\n        productOrderAdapter.setOnProductClickListener(product -> {\r\n            openDetail(holder, orderStore);\r\n        });\r\n\r\n        holder.recyclerViewItemOrder.setAdapter(productOrderAdapter);\r\n        holder.recyclerViewItemOrder.setLayoutManager(new LinearLayoutManager(holder.itemView.getContext()));\r\n\r\n        // Set text data\r\n        holder.tvStoreName.setText(orderStore.getStoreName());\r\n\r\n        String translatedStatus;\r\n        switch (orderStore.getStatus()) {\r\n            case \"pending\":\r\n                translatedStatus = \"Chờ xác nhận\";\r\n                holder.btnBuy.setText(\"Hủy đơn hàng\");\r\n                break;\r\n            case \"approved\":\r\n                translatedStatus = \"Chờ lấy hàng\";\r\n                break;\r\n            case \"delivering\":\r\n                translatedStatus = \"Chờ giao hàng\";\r\n                holder.btnBuy.setText(\"Đã nhận hàng\");\r\n                holder.btnDetail.setVisibility(View.VISIBLE);\r\n                holder.btnDetail.setText(\"Trả hàng/Hoàn tiền\");\r\n                break;\r\n            case \"return\":\r\n                translatedStatus = \"Chờ giao hàng\";\r\n                holder.btnBuy.setText(\"Đã nhận hàng\");\r\n                break;\r\n            case \"delivered\":\r\n                translatedStatus = \"Hoàn thành\";\r\n                if (!orderStore.isCheckRating()) {\r\n                    holder.btnBuy.setText(\"Đánh giá\");\r\n                    holder.btnDetail.setVisibility(View.VISIBLE);\r\n                    holder.btnDetail.setText(\"Trả hàng/Hoàn tiền\");\r\n                } else {\r\n                    holder.btnDetail.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                break;\r\n            case \"canceled\":\r\n                translatedStatus = \"Đã hủy\";\r\n                holder.btnDetail.setText(\"Xem Thông tin Hoàn tiền\");\r\n                break;\r\n            default:\r\n                translatedStatus = \"Không xác định\";\r\n                break;\r\n        }\r\n        holder.tvStatus.setText(translatedStatus);\r\n\r\n        // Thêm listener cho btnBuy\r\n        holder.btnBuy.setOnClickListener(v -> cancelOrder(holder, orderStore));  // Truyền đúng item vào đây\r\n\r\n        holder.tvTotalPrice.setText(\"Tổng số tiền: \" + orderStore.getTotalPrice() + \" VND\");\r\n\r\n        holder.main.setOnClickListener(v -> openDetail(holder, orderStore));\r\n\r\n        holder.btnDetail.setOnClickListener(v -> {\r\n            if (!orderStore.isCheckRating()\r\n                    && (orderStore.getStatus().equals(\"delivering\")\r\n                    || orderStore.getStatus().equals(\"delivered\"))) {\r\n                openRequestReturn(holder, orderStore);\r\n            } else {\r\n                openRating(holder, orderStore);\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return orderStoreList.size();\r\n    }\r\n\r\n    // ViewHolder class\r\n    static class OrderStoreViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView tvStoreName, tvStatus, tvTotalPrice;\r\n        ImageView imageView;\r\n        RecyclerView recyclerViewItemOrder;\r\n        AppCompatButton btnBuy, btnDetail;\r\n        LinearLayout main;\r\n\r\n        public OrderStoreViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            main = itemView.findViewById(R.id.main);\r\n            tvStoreName = itemView.findViewById(R.id.tv_store_name);\r\n            tvStatus = itemView.findViewById(R.id.status);\r\n            tvTotalPrice = itemView.findViewById(R.id.total_price);\r\n            imageView = itemView.findViewById(R.id.imageView9);\r\n            recyclerViewItemOrder = itemView.findViewById(R.id.recyclerViewItemOrder);\r\n            btnBuy = itemView.findViewById(R.id.btn_buy);\r\n            btnDetail = itemView.findViewById(R.id.btn_detail);\r\n        }\r\n    }\r\n\r\n    private void cancelOrder(OrderStoreViewHolder holder, Order order) {\r\n        int position = holder.getAdapterPosition(); // Lấy đúng vị trí của item\r\n        if (position == RecyclerView.NO_POSITION) {\r\n            return; // Nếu vị trí không hợp lệ, thoát khỏi phương thức\r\n        }\r\n\r\n        if (order.getStatus().equals(\"pending\") && order.getPaymentMethod().equals(\"COD\")) {\r\n            viewModel.updateOrderStatus(order.getOrderId(), \"canceled\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                @Override\r\n                public void onSuccess(String message) {\r\n                    // Cập nhật trạng thái của item trong adapter\r\n                    order.setStatus(\"pending\");\r\n                    notifyItemChanged(position); // Chỉ cập nhật item tại vị trí hiện tại\r\n                    Toast.makeText(holder.itemView.getContext(), \"Đơn hàng đã hủy!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                @Override\r\n                public void onError(String errorMessage) {\r\n                    Toast.makeText(holder.itemView.getContext(), \"Không thể hủy đơn hàng: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        } else if (order.getStatus().equals(\"pending\") && order.getPaymentMethod().equals(\"VNPay\")) {\r\n            // Khi trả hàng gọi api hoàn tiền\r\n            FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n            db.collection(\"orders\").document(order.getOrderId()).get().addOnSuccessListener(documentSnapshot -> {\r\n                if (documentSnapshot.exists()) {\r\n                    String vnpTxnRef = documentSnapshot.getString(\"vnpTxnRef\");\r\n                    order.setVnpTxnRef(vnpTxnRef);\r\n\r\n                    new Thread(() -> {\r\n                        try {\r\n                            String vnp_TxnRef = order.getVnpTxnRef();\r\n                            String transactionId = order.getTransactionId();\r\n                            int totalPrice = order.getTotalPrice();\r\n                            String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDateMillis());\r\n\r\n                            // Gửi yêu cầu hoàn tiền\r\n                            String response = VnpayRefund.createRefundRequest(\r\n                                    vnp_TxnRef,          // Mã giao dịch của merchant (txnRef)\r\n                                    transactionId,       // Mã giao dịch từ VNPAY\r\n                                    totalPrice,          // Số tiền hoàn\r\n                                    formattedTransactionDate, // Ngày giao dịch gốc\r\n                                    \"Hoàn tiền cho đơn hàng \" + order.getOrderId(), // Lý do hoàn tiền\r\n                                    \"admin\"              // Người thực hiện\r\n                            );\r\n\r\n                            //nếu hoàn tiền thành công\r\n                            if (response.contains(\"\\\"vnp_ResponseCode\\\":\\\"00\\\"\")) { //ResponseCode là 00 (Hoàn tiền thành công)\r\n                                new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                    Toast.makeText(holder.itemView.getContext(), \"Huỷ đơn hàng thành công\", Toast.LENGTH_SHORT).show();\r\n                                });\r\n\r\n                                // Cập nhật trạng thái đơn hàng\r\n                                viewModel.updateOrderStatusRefund(order.getOrderId(), \"canceled\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                                    @Override\r\n                                    public void onSuccess(String message) {\r\n                                        order.setStatus(\"canceled\");\r\n                                        notifyItemChanged(position);\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onError(String errorMessage) {\r\n                                        new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                            Toast.makeText(holder.itemView.getContext(), \"Không thể hủy đơn hàng: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n                            } else {\r\n                                //nếu hoàn tiền không thành công\r\n                                new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                    Toast.makeText(holder.itemView.getContext(), \"Không thể hoàn tiền: \" + response, Toast.LENGTH_SHORT).show();\r\n                                });\r\n                                Log.println(Log.ERROR, \"Vnpayreturn\", response);\r\n                            }\r\n                        } catch (Exception e) {\r\n                            new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                Toast.makeText(holder.itemView.getContext(), \"Lỗi: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                            });\r\n                        }\r\n                    }).start();\r\n                } else {\r\n                    Toast.makeText(holder.itemView.getContext(), \"Đơn hàng không tồn tại\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }).addOnFailureListener(e -> {\r\n                Toast.makeText(holder.itemView.getContext(), \"Lỗi khi lấy thông tin đơn hàng: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n            });\r\n        } else if (order.getStatus().equals(\"delivering\")) {\r\n            viewModel.updateOrderStatus(order.getOrderId(), \"delivered\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                @Override\r\n                public void onSuccess(String message) {\r\n                    // Cập nhật trạng thái của item trong adapter\r\n                    viewModel.getData(\"delivering\");\r\n                    order.setStatus(\"delivering\");\r\n                    notifyItemChanged(position);\r\n\r\n                    Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);\r\n\r\n                    intent.putExtra(\"order\", order);\r\n                    holder.itemView.getContext().startActivity(intent);\r\n                }\r\n\r\n                @Override\r\n                public void onError(String errorMessage) {\r\n                    Toast.makeText(holder.itemView.getContext(), \"Không thể cập nhật trạng thái: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        } else if (order.getStatus().equals(\"delivered\") && !order.isCheckRating()) {\r\n\r\n            // Cập nhật trạng thái của item trong adapter\r\n            order.setStatus(\"delivered\");\r\n            notifyItemChanged(position);\r\n\r\n            Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);\r\n            intent.putExtra(\"order\", order);\r\n            intent.putExtra(\"position\", 2);\r\n            ((Activity) holder.itemView.getContext()).startActivityForResult(intent, REQUEST_CODE_RATING);\r\n        } else {\r\n            onCheckoutButtonClicked(holder, order);\r\n        }\r\n    }\r\n\r\n    private void openDetail(OrderStoreViewHolder holder, Order order) {\r\n        int position = holder.getAdapterPosition(); // Lấy đúng vị trí của item\r\n        if (position == RecyclerView.NO_POSITION) {\r\n            return; // Nếu vị trí không hợp lệ, thoát khỏi phương thức\r\n        }\r\n\r\n        Intent intent = new Intent(holder.itemView.getContext(), OrderInformationActivity.class);\r\n        intent.putExtra(\"order\", order);\r\n        holder.itemView.getContext().startActivity(intent);\r\n    }\r\n\r\n    private void onCheckoutButtonClicked(OrderStoreViewHolder holder, Order order) {\r\n        List<Product> selectedProducts = new ArrayList<>();\r\n        List<String> productIds = new ArrayList<>();\r\n\r\n        selectedProducts = order.getProducts();\r\n\r\n        for (Product p : selectedProducts) {\r\n            productIds.add(p.getProduct_id());\r\n        }\r\n\r\n        Intent intent = new Intent(holder.itemView.getContext(), CheckoutActivity.class);\r\n        intent.putParcelableArrayListExtra(\"selectedProducts\", new ArrayList<>(selectedProducts));\r\n        intent.putStringArrayListExtra(\"productIds\", new ArrayList<>(productIds));\r\n        intent.putExtra(\"storeName\", order.getStoreName());\r\n        holder.itemView.getContext().startActivity(intent);\r\n\r\n    }\r\n\r\n    private void openRating(OrderStoreViewHolder holder, Order order) {\r\n        Intent intent = new Intent(holder.itemView.getContext(), ShopRatingActivity.class);\r\n        intent.putExtra(\"order\", order);\r\n        holder.itemView.getContext().startActivity(intent);\r\n    }\r\n\r\n    private void openRequestReturn(OrderStoreViewHolder holder, Order order) {\r\n        Intent intent = new Intent(holder.itemView.getContext(), RequestReturnActivity.class);\r\n        intent.putExtra(\"order\", order);\r\n        holder.itemView.getContext().startActivity(intent);\r\n    }\r\n\r\n    public static String formatTimestampToVnpayDate(Long timestamp) {\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.getDefault());\r\n        Date date = new Date(timestamp);\r\n        return formatter.format(date);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java b/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java
---- a/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java	(revision cf68ce955f502cac7513b444b6000c901264c0ef)
-+++ b/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java	(date 1733234798605)
-@@ -95,13 +95,13 @@
-             case "approved":
-                 translatedStatus = "Chờ lấy hàng";
-                 break;
--            case "delivering":
-+            case "delivery":
-                 translatedStatus = "Chờ giao hàng";
-                 holder.btnBuy.setText("Đã nhận hàng");
-                 holder.btnDetail.setVisibility(View.VISIBLE);
-                 holder.btnDetail.setText("Trả hàng/Hoàn tiền");
-                 break;
--            case "return":
-+            case "refund" :
-                 translatedStatus = "Chờ giao hàng";
-                 holder.btnBuy.setText("Đã nhận hàng");
-                 break;
-@@ -111,7 +111,7 @@
-                     holder.btnBuy.setText("Đánh giá");
-                     holder.btnDetail.setVisibility(View.VISIBLE);
-                     holder.btnDetail.setText("Trả hàng/Hoàn tiền");
--                } else {
-+                }else {
-                     holder.btnDetail.setVisibility(View.VISIBLE);
-                 }
- 
-@@ -147,6 +147,8 @@
-     }
- 
- 
-+
-+
-     @Override
-     public int getItemCount() {
-         return orderStoreList.size();
-@@ -208,7 +210,7 @@
-                             String vnp_TxnRef = order.getVnpTxnRef();
-                             String transactionId = order.getTransactionId();
-                             int totalPrice = order.getTotalPrice();
--                            String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDateMillis());
-+                            String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDate());
- 
-                             // Gửi yêu cầu hoàn tiền
-                             String response = VnpayRefund.createRefundRequest(
-@@ -227,7 +229,7 @@
-                                 });
- 
-                                 // Cập nhật trạng thái đơn hàng
--                                viewModel.updateOrderStatusRefund(order.getOrderId(), "canceled", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-+                                viewModel.updateOrderStatus(order.getOrderId(), "canceled", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-                                     @Override
-                                     public void onSuccess(String message) {
-                                         order.setStatus("canceled");
-@@ -247,7 +249,7 @@
-                                 new android.os.Handler(Looper.getMainLooper()).post(() -> {
-                                     Toast.makeText(holder.itemView.getContext(), "Không thể hoàn tiền: " + response, Toast.LENGTH_SHORT).show();
-                                 });
--                                Log.println(Log.ERROR, "Vnpayreturn", response);
-+                                Log.println(Log.ERROR, "VnpayRefund", response);
-                             }
-                         } catch (Exception e) {
-                             new android.os.Handler(Looper.getMainLooper()).post(() -> {
-@@ -261,17 +263,15 @@
-             }).addOnFailureListener(e -> {
-                 Toast.makeText(holder.itemView.getContext(), "Lỗi khi lấy thông tin đơn hàng: " + e.getMessage(), Toast.LENGTH_SHORT).show();
-             });
--        } else if (order.getStatus().equals("delivering")) {
-+        } else if (order.getStatus().equals("delivery")) {
-             viewModel.updateOrderStatus(order.getOrderId(), "delivered", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-                 @Override
-                 public void onSuccess(String message) {
-                     // Cập nhật trạng thái của item trong adapter
--                    viewModel.getData("delivering");
--                    order.setStatus("delivering");
-+                    order.setStatus("delivery");
-                     notifyItemChanged(position);
- 
-                     Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);
--
-                     intent.putExtra("order", order);
-                     holder.itemView.getContext().startActivity(intent);
-                 }
-@@ -282,14 +282,13 @@
-                 }
-             });
-         } else if (order.getStatus().equals("delivered") && !order.isCheckRating()) {
--
-             // Cập nhật trạng thái của item trong adapter
-             order.setStatus("delivered");
-             notifyItemChanged(position);
- 
-             Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);
-             intent.putExtra("order", order);
--            intent.putExtra("position", 2);
-+            intent.putExtra("position", position);
-             ((Activity) holder.itemView.getContext()).startActivityForResult(intent, REQUEST_CODE_RATING);
-         } else {
-             onCheckoutButtonClicked(holder, order);
-@@ -313,7 +312,8 @@
- 
-         selectedProducts = order.getProducts();
- 
--        for (Product p : selectedProducts) {
-+        for (Product p : selectedProducts)
-+        {
-             productIds.add(p.getProduct_id());
-         }
- 
-@@ -337,10 +337,10 @@
-         holder.itemView.getContext().startActivity(intent);
-     }
- 
--    public static String formatTimestampToVnpayDate(Long timestamp) {
-+    public static String formatTimestampToVnpayDate(Timestamp timestamp) {
-         SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMddHHmmss", Locale.getDefault());
--        Date date = new Date(timestamp);
-+        Date date = new Date(timestamp.toDate().getTime());
-         return formatter.format(date);
-     }
- 
--}
-+}
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM__Changes_.xml	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM_[Changes]" date="1733225290608" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/3/2024 6:28 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_6_28_PM_[Changes]/shelved.patch	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,21 +0,0 @@
-Index: .idea/deploymentTargetSelector.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
-deleted file mode 100644
---- a/.idea/deploymentTargetSelector.xml	(revision 885a5e58091318c655ec0295da9b35d22f57d77c)
-+++ /dev/null	(revision 885a5e58091318c655ec0295da9b35d22f57d77c)
-@@ -1,10 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="deploymentTargetSelector">
--    <selectionStates>
--      <SelectionState runConfigName="SignInActivity">
--        <option name="selectionMode" value="DROPDOWN" />
--      </SelectionState>
--    </selectionStates>
--  </component>
--</project>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM__Changes_.xml	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM_[Changes]" date="1733236632195" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/3/2024 9:37 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM__Changes_.xml	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,14 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM_[Changes]" date="1733235092570" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/3/2024 9:11 PM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="app/src/main/res/drawable/success.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM_[Changes]/success.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="app/src/main/res/drawable/noti_empty.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_11_PM_[Changes]/noti_empty.png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_37_PM_[Changes]/shelved.patch	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,337 +0,0 @@
-Index: app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/RequestReturn/RequestReturnActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.ui.MyProfile.PurchasedOrders.RequestReturn;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.os.Bundle;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.widget.ImageButton;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.adapter.ProductOrderAdapter;\r\nimport com.example.agrimart.data.model.Order;\r\nimport com.example.agrimart.data.model.Product;\r\nimport com.example.agrimart.ui.Payment.VnpayRefund;\r\nimport com.example.agrimart.viewmodel.OrderStatusFragmentViewModel;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.text.NumberFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class RequestReturnActivity extends AppCompatActivity {\r\n    RecyclerView recyclerViewDetail;\r\n    Order order;\r\n    TextView totalPrice;\r\n    ImageButton btnBack;\r\n    AppCompatButton btnGui;\r\n    private OrderStatusFragmentViewModel viewModel;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_request_return);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        order = (Order) getIntent().getSerializableExtra(\"order\");\r\n        addControl();\r\n        loadDetail();\r\n        addEvent();\r\n    }\r\n\r\n\r\n    void addControl()\r\n    {\r\n        recyclerViewDetail = findViewById(R.id.recyclerViewDetail);\r\n        totalPrice = findViewById(R.id.total_price);\r\n        btnBack = findViewById(R.id.btn_back);\r\n        btnGui = findViewById(R.id.btn_gui);\r\n\r\n        viewModel = new OrderStatusFragmentViewModel();\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    void loadDetail() {\r\n        List<Product> products = order.getProducts();\r\n        ProductOrderAdapter productOrderAdapter = new ProductOrderAdapter(products);\r\n        recyclerViewDetail.setAdapter(productOrderAdapter);\r\n        recyclerViewDetail.setLayoutManager(new LinearLayoutManager(this));\r\n\r\n        totalPrice.setText(formatCurrency(order.getTotalPrice()) + \" đ\");\r\n    }\r\n\r\n    private void addEvent() {\r\n        btnBack.setOnClickListener(v -> finish());\r\n        btnGui.setOnClickListener(v-> requestReturn());\r\n    }\r\n\r\n    private void requestReturn() {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        db.collection(\"orders\").document(order.getOrderId()).get().addOnSuccessListener(documentSnapshot -> {\r\n            if (documentSnapshot.exists()) {\r\n                String vnpTxnRef = documentSnapshot.getString(\"vnpTxnRef\");\r\n                order.setVnpTxnRef(vnpTxnRef);\r\n\r\n                new Thread(() -> {\r\n                    try {\r\n                        String vnp_TxnRef = order.getVnpTxnRef();\r\n                        String transactionId = order.getTransactionId();\r\n                        int totalPrice = order.getTotalPrice();\r\n                        String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDateMillis());\r\n\r\n                        // Gửi yêu cầu hoàn tiền\r\n                        String response = VnpayRefund.createRefundRequest(\r\n                                vnp_TxnRef,          // Mã giao dịch của merchant (txnRef)\r\n                                transactionId,       // Mã giao dịch từ VNPAY\r\n                                totalPrice,          // Số tiền hoàn\r\n                                formattedTransactionDate, // Ngày giao dịch gốc\r\n                                \"Hoàn tiền cho đơn hàng \" + order.getOrderId(), // Lý do hoàn tiền\r\n                                \"admin\"              // Người thực hiện\r\n                        );\r\n\r\n                        //nếu hoàn tiền thành công\r\n                        if (response.contains(\"\\\"vnp_ResponseCode\\\":\\\"00\\\"\")) { //ResponseCode là 00 (Hoàn tiền thành công)\r\n                            new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                Toast.makeText(this, \"Huỷ đơn hàng thành công\", Toast.LENGTH_SHORT).show();\r\n                            });\r\n\r\n                            // Cập nhật trạng thái đơn hàng\r\n                            viewModel.updateOrderStatusRefund(order.getOrderId(), \"canceled\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                                @Override\r\n                                public void onSuccess(String message) {\r\n                                    order.setStatus(\"canceled\");\r\n                                }\r\n\r\n                                @Override\r\n                                public void onError(String errorMessage) {\r\n                                    new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                        Toast.makeText(RequestReturnActivity.this, \"Không thể hủy đơn hàng: \" , Toast.LENGTH_SHORT).show();\r\n                                    });\r\n                                }\r\n                            });\r\n\r\n                        } else {\r\n                            //nếu hoàn tiền không thành công\r\n                            new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                Toast.makeText(this, \"Không thể hoàn tiền: \" + response, Toast.LENGTH_SHORT).show();\r\n                            });\r\n                            Log.println(Log.ERROR, \"Vnpayreturn\", response);\r\n                        }\r\n                    } catch (Exception e) {\r\n                        new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                            Toast.makeText(this, \"Lỗi: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                        });\r\n                    }\r\n                }).start();\r\n            } else {\r\n                Toast.makeText(this, \"Đơn hàng không tồn tại\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        }).addOnFailureListener(e -> {\r\n            Toast.makeText(this, \"Lỗi khi lấy thông tin đơn hàng: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n        });\r\n    }\r\n\r\n    public static String formatTimestampToVnpayDate(Long timestamp) {\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.getDefault());\r\n        Date date = new Date(timestamp);\r\n        return formatter.format(date);\r\n    }\r\n    \r\n    private String formatCurrency(double amount) {\r\n        return NumberFormat.getInstance(Locale.getDefault()).format(amount);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/RequestReturn/RequestReturnActivity.java b/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/RequestReturn/RequestReturnActivity.java
---- a/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/RequestReturn/RequestReturnActivity.java	(revision e7fb5db241f2819c7b2ac10008f70fda301da765)
-+++ b/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/RequestReturn/RequestReturnActivity.java	(date 1733234360171)
-@@ -5,6 +5,9 @@
- import android.os.Looper;
- import android.util.Log;
- import android.widget.ImageButton;
-+import android.widget.LinearLayout;
-+import android.widget.RadioButton;
-+import android.widget.RadioGroup;
- import android.widget.TextView;
- import android.widget.Toast;
- 
-@@ -23,6 +26,7 @@
- import com.example.agrimart.data.model.Product;
- import com.example.agrimart.ui.Payment.VnpayRefund;
- import com.example.agrimart.viewmodel.OrderStatusFragmentViewModel;
-+import com.google.android.material.bottomsheet.BottomSheetDialog;
- import com.google.firebase.firestore.FirebaseFirestore;
- 
- import java.text.NumberFormat;
-@@ -34,10 +38,11 @@
- public class RequestReturnActivity extends AppCompatActivity {
-     RecyclerView recyclerViewDetail;
-     Order order;
--    TextView totalPrice;
-+    TextView totalPrice, reasonText;
-     ImageButton btnBack;
-     AppCompatButton btnGui;
-     private OrderStatusFragmentViewModel viewModel;
-+    LinearLayout myReason;
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-         super.onCreate(savedInstanceState);
-@@ -62,6 +67,8 @@
-         totalPrice = findViewById(R.id.total_price);
-         btnBack = findViewById(R.id.btn_back);
-         btnGui = findViewById(R.id.btn_gui);
-+        myReason = findViewById(R.id.my_reason);
-+        reasonText = findViewById(R.id.reason_text);
- 
-         viewModel = new OrderStatusFragmentViewModel();
-     }
-@@ -79,7 +86,48 @@
-     private void addEvent() {
-         btnBack.setOnClickListener(v -> finish());
-         btnGui.setOnClickListener(v-> requestReturn());
-+        myReason.setOnClickListener(v -> showReasonDialog((String) reasonText.getText()));
-     }
-+
-+    private void showReasonDialog(String s) {
-+        // Tạo BottomSheetDialog
-+        BottomSheetDialog bottomSheetDialog = new BottomSheetDialog(this);
-+        bottomSheetDialog.setContentView(R.layout.bottom_sheet_reason);
-+
-+        // Tham chiếu đến các view trong dialog
-+        RadioGroup radioGroup = bottomSheetDialog.findViewById(R.id.reason_radio_group);
-+        AppCompatButton btnSubmit = bottomSheetDialog.findViewById(R.id.btn_submit_reason);
-+
-+        // Tự động chọn lý do nếu chuỗi `s` được truyền vào
-+        if (s != null && !s.isEmpty()) {
-+            for (int i = 0; i < radioGroup.getChildCount(); i++) {
-+                RadioButton radioButton = (RadioButton) radioGroup.getChildAt(i);
-+                if (radioButton.getText().toString().equalsIgnoreCase(s)) {
-+                    radioButton.setChecked(true);
-+                    break;
-+                }
-+            }
-+        }
-+
-+        btnSubmit.setOnClickListener(v -> {
-+            int selectedId = radioGroup.getCheckedRadioButtonId();
-+            if (selectedId != -1) {
-+                RadioButton selectedReason = bottomSheetDialog.findViewById(selectedId);
-+                String reason = selectedReason.getText().toString();
-+                reasonText.setText(reason);
-+
-+                // Đóng dialog
-+                bottomSheetDialog.dismiss();
-+            } else {
-+                Toast.makeText(this, "Vui lòng chọn lý do", Toast.LENGTH_SHORT).show();
-+            }
-+        });
-+
-+        // Hiển thị dialog
-+        bottomSheetDialog.show();
-+    }
-+
-+
- 
-     private void requestReturn() {
-         FirebaseFirestore db = FirebaseFirestore.getInstance();
-@@ -108,14 +156,14 @@
-                         //nếu hoàn tiền thành công
-                         if (response.contains("\"vnp_ResponseCode\":\"00\"")) { //ResponseCode là 00 (Hoàn tiền thành công)
-                             new android.os.Handler(Looper.getMainLooper()).post(() -> {
--                                Toast.makeText(this, "Huỷ đơn hàng thành công", Toast.LENGTH_SHORT).show();
-+                                Toast.makeText(this, "Gửi yêu cầu thành công", Toast.LENGTH_SHORT).show();
-                             });
- 
-                             // Cập nhật trạng thái đơn hàng
--                            viewModel.updateOrderStatusRefund(order.getOrderId(), "canceled", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-+                            viewModel.updateOrderStatusRefund(order.getOrderId(), order.getStatus(), new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-                                 @Override
-                                 public void onSuccess(String message) {
--                                    order.setStatus("canceled");
-+                                    order.setStatus(order.getStatus());
-                                 }
- 
-                                 @Override
-Index: app/src/main/res/layout/activity_request_return.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\"\r\n    tools:context=\".ui.MyProfile.PurchasedOrders.RequestReturn.RequestReturnActivity\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@color/white\"\r\n        android:orientation=\"horizontal\"\r\n        android:paddingStart=\"12dp\"\r\n        android:paddingTop=\"10dp\"\r\n        android:paddingEnd=\"12dp\"\r\n        android:paddingBottom=\"10dp\">\r\n\r\n        <ImageButton\r\n            android:id=\"@+id/btn_back\"\r\n            android:layout_width=\"30dp\"\r\n            android:layout_height=\"35dp\"\r\n            android:layout_gravity=\"center_vertical\"\r\n            android:layout_marginStart=\"5dp\"\r\n            android:background=\"@color/white\"\r\n            android:scaleType=\"fitCenter\"\r\n            android:src=\"@drawable/ic_left\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView1\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"35dp\"\r\n            android:layout_marginStart=\"15dp\"\r\n            android:layout_weight=\"1\"\r\n            android:gravity=\"start\"\r\n            android:text=\"Yêu cầu trả hàng/Hoàn tiền\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"10pt\" />\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_weight=\"2\"\r\n        android:padding=\"10dp\"\r\n        android:orientation=\"vertical\">\r\n\r\n\r\n        <View\r\n            android:layout_width=\"match_parent\"\r\n            android:background=\"@color/background_light_blur_1\"\r\n            android:layout_height=\"4dp\"/>\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n\r\n            android:orientation=\"vertical\">\r\n\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:background=\"@color/background_light_blur_1\"\r\n                android:layout_height=\"2dp\"/>\r\n\r\n\r\n        </LinearLayout>\r\n        <View\r\n            android:layout_width=\"match_parent\"\r\n            android:background=\"@color/background_light_blur_1\"\r\n            android:layout_height=\"5dp\"/>\r\n\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:id=\"@+id/recyclerViewDetail\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:paddingStart=\"10dp\" />\r\n\r\n\r\n        <View\r\n            android:layout_width=\"match_parent\"\r\n            android:background=\"@color/background_light_blur_1\"\r\n            android:layout_height=\"2dp\"/>\r\n\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\">\r\n\r\n            <LinearLayout\r\n                android:id=\"@+id/my_user_sex\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"50dp\"\r\n                android:orientation=\"horizontal\"\r\n                android:paddingTop=\"10dp\"\r\n                android:layout_marginStart=\"10dp\"\r\n                android:paddingBottom=\"10dp\">\r\n\r\n\r\n                <TextView\r\n                    android:id=\"@+id/user_sex\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"center\"\r\n                    android:layout_weight=\"1\"\r\n                    android:text=\"Lý do *\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"16sp\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/user_sex_text\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:gravity=\"end\"\r\n                    android:layout_weight=\"1\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"8pt\" />\r\n                <ImageView\r\n                    android:id=\"@+id/user_sex_next\"\r\n                    android:layout_width=\"40dp\"\r\n                    android:layout_height=\"20dp\"\r\n                    android:layout_gravity=\"center\"\r\n                    android:src=\"@drawable/next\" />\r\n\r\n            </LinearLayout>\r\n            <View\r\n                android:layout_width=\"match_parent\"\r\n                android:background=\"@color/background_light_blur_1\"\r\n                android:layout_height=\"2dp\"/>\r\n\r\n            <TextView\r\n                android:id=\"@+id/text212\"\r\n                android:layout_width=\"match_parent\"\r\n                android:padding=\"10dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:textSize=\"16sp\"\r\n                android:textColor=\"@color/black\"\r\n                android:text=\"Số tiền hoàn lại\" />\r\n            <TextView\r\n                android:id=\"@+id/total_price\"\r\n                android:layout_width=\"match_parent\"\r\n                android:padding=\"10dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:textSize=\"20sp\"\r\n                android:textColor=\"@color/black\"\r\n                android:text=\"95.000đ\" />\r\n\r\n        </LinearLayout>\r\n        <View\r\n            android:layout_width=\"match_parent\"\r\n            android:background=\"@color/background_light_blur_1\"\r\n            android:layout_height=\"8dp\"/>\r\n\r\n        <EditText\r\n            android:id=\"@+id/editTextText\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:hint=\"Nhập mô tả\"\r\n            android:maxLength=\"2000\"\r\n            android:inputType=\"textMultiLine\"\r\n            android:gravity=\"top|start\"\r\n            android:lines=\"6\"\r\n            android:padding=\"10dp\" />\r\n\r\n\r\n\r\n\r\n\r\n    </LinearLayout>\r\n\r\n    <LinearLayout\r\n        android:id=\"@+id/footer\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"70dp\"\r\n        android:layout_alignParentBottom=\"true\"\r\n        android:background=\"@drawable/rounded_product_detail\">\r\n\r\n\r\n        <androidx.appcompat.widget.AppCompatButton\r\n            android:id=\"@+id/btn_gui\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:layout_margin=\"10dp\"\r\n            android:layout_weight=\"1\"\r\n            android:padding=\"15dp\"\r\n            android:background=\"@drawable/rounded_edittext_order\"\r\n            android:text=\"Gửi yêu cầu\"\r\n            android:textAllCaps=\"false\"\r\n            android:textColor=\"@color/green\"\r\n            android:textSize=\"16sp\" />\r\n    </LinearLayout>\r\n\r\n</LinearLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_request_return.xml b/app/src/main/res/layout/activity_request_return.xml
---- a/app/src/main/res/layout/activity_request_return.xml	(revision e7fb5db241f2819c7b2ac10008f70fda301da765)
-+++ b/app/src/main/res/layout/activity_request_return.xml	(date 1733234225444)
-@@ -39,37 +39,17 @@
-             android:textColor="@color/black"
-             android:textSize="10pt" />
-     </LinearLayout>
--
--    <LinearLayout
--        android:layout_width="match_parent"
--        android:layout_height="wrap_content"
--        android:layout_weight="2"
--        android:padding="10dp"
--        android:orientation="vertical">
--
--
--        <View
--            android:layout_width="match_parent"
--            android:background="@color/background_light_blur_1"
--            android:layout_height="4dp"/>
--
--        <LinearLayout
--            android:layout_width="match_parent"
--            android:layout_height="wrap_content"
--
--            android:orientation="vertical">
-+    <View
-+        android:layout_width="match_parent"
-+        android:background="@color/background_light_blur_1"
-+        android:layout_height="8dp"/>
-+    <LinearLayout
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:layout_weight="2"
-+        android:padding="10dp"
-+        android:orientation="vertical">
- 
--            <View
--                android:layout_width="match_parent"
--                android:background="@color/background_light_blur_1"
--                android:layout_height="2dp"/>
--
--
--        </LinearLayout>
--        <View
--            android:layout_width="match_parent"
--            android:background="@color/background_light_blur_1"
--            android:layout_height="5dp"/>
- 
-         <androidx.recyclerview.widget.RecyclerView
-             android:id="@+id/recyclerViewDetail"
-@@ -81,7 +61,7 @@
-         <View
-             android:layout_width="match_parent"
-             android:background="@color/background_light_blur_1"
--            android:layout_height="2dp"/>
-+            android:layout_height="4dp"/>
- 
- 
-         <LinearLayout
-@@ -90,7 +70,7 @@
-             android:orientation="vertical">
- 
-             <LinearLayout
--                android:id="@+id/my_user_sex"
-+                android:id="@+id/my_reason"
-                 android:layout_width="match_parent"
-                 android:layout_height="50dp"
-                 android:orientation="horizontal"
-@@ -104,19 +84,20 @@
-                     android:layout_width="wrap_content"
-                     android:layout_height="wrap_content"
-                     android:layout_gravity="center"
--                    android:layout_weight="1"
-                     android:text="Lý do *"
-                     android:textColor="@color/black"
-                     android:textSize="16sp" />
- 
-                 <TextView
--                    android:id="@+id/user_sex_text"
-+                    android:id="@+id/reason_text"
-                     android:layout_width="wrap_content"
-                     android:layout_height="wrap_content"
-                     android:gravity="end"
-                     android:layout_weight="1"
-+                    android:hint="Chọn lý do"
-+                    android:layout_gravity="center"
-                     android:textColor="@color/black"
--                    android:textSize="8pt" />
-+                    android:textSize="16sp" />
-                 <ImageView
-                     android:id="@+id/user_sex_next"
-                     android:layout_width="40dp"
-@@ -128,7 +109,7 @@
-             <View
-                 android:layout_width="match_parent"
-                 android:background="@color/background_light_blur_1"
--                android:layout_height="2dp"/>
-+                android:layout_height="4dp"/>
- 
-             <TextView
-                 android:id="@+id/text212"
-@@ -145,7 +126,8 @@
-                 android:padding="10dp"
-                 android:layout_height="wrap_content"
-                 android:layout_weight="1"
--                android:textSize="20sp"
-+                android:textSize="22sp"
-+                android:textStyle="bold"
-                 android:textColor="@color/black"
-                 android:text="95.000đ" />
- 
-@@ -164,7 +146,9 @@
-             android:inputType="textMultiLine"
-             android:gravity="top|start"
-             android:lines="6"
--            android:padding="10dp" />
-+            android:padding="10dp"
-+            android:background="@null" />
-+
- 
- 
- 
-Index: app/src/main/res/layout/bottom_sheet_reason.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/bottom_sheet_reason.xml b/app/src/main/res/layout/bottom_sheet_reason.xml
-new file mode 100644
---- /dev/null	(date 1733234147927)
-+++ b/app/src/main/res/layout/bottom_sheet_reason.xml	(date 1733234147927)
-@@ -0,0 +1,80 @@
-+<?xml version="1.0" encoding="utf-8"?>
-+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
-+    android:layout_width="match_parent"
-+    android:layout_height="wrap_content"
-+    android:orientation="vertical"
-+    android:padding="16dp">
-+
-+    <TextView
-+        android:id="@+id/title"
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:text="Chọn lý do"
-+        android:textSize="22sp"
-+        android:textStyle="bold"
-+        android:gravity="center"
-+        android:paddingBottom="8dp"/>
-+
-+    <RadioGroup
-+        android:id="@+id/reason_radio_group"
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content">
-+
-+        <RadioButton
-+            android:id="@+id/reason_missing_items"
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content"
-+            android:textSize="18sp"
-+            android:text="Thiếu hàng" />
-+
-+        <RadioButton
-+            android:id="@+id/reason_wrong_items"
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content"
-+            android:textSize="18sp"
-+            android:text="Người bán gửi hàng sai" />
-+
-+        <RadioButton
-+            android:id="@+id/reason_expired_items"
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content"
-+            android:textSize="18sp"
-+            android:text="Hàng hết hạn sử dụng" />
-+
-+        <RadioButton
-+            android:id="@+id/reason_not_as_described"
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content"
-+            android:textSize="18sp"
-+            android:text="Khác với mô tả" />
-+
-+        <RadioButton
-+            android:id="@+id/reason_fake_items"
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content"
-+            android:textSize="18sp"
-+            android:text="Hàng giả" />
-+
-+        <RadioButton
-+            android:id="@+id/reason_no_longer_needed"
-+            android:layout_width="wrap_content"
-+            android:layout_height="wrap_content"
-+            android:textSize="18sp"
-+            android:text="Không còn nhu cầu" />
-+    </RadioGroup>
-+
-+    <androidx.appcompat.widget.AppCompatButton
-+        android:id="@+id/btn_submit_reason"
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:layout_gravity="center"
-+        android:layout_margin="10dp"
-+        android:layout_weight="1"
-+        android:padding="15dp"
-+        android:background="@drawable/rounded_edittext_order"
-+        android:text="Xác nhận"
-+        android:textAllCaps="false"
-+        android:textColor="@color/green"
-+        android:textSize="16sp" />
-+
-+</LinearLayout>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM__Changes_.xml	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM_[Changes]" date="1733220483809" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/3/2024 5:08 PM [Changes]" />
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM__Changes_.xml	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,14 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM_[Changes]" date="1733234798967" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 12/3/2024 9:06 PM [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="app/src/main/res/drawable/success.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM_[Changes]/success.png" />
-  </binary>
-  <binary>
-    <option name="BEFORE_PATH" />
-    <option name="AFTER_PATH" value="app/src/main/res/drawable/noti_empty.png" />
-    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM_[Changes]/noti_empty.png" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_5_08_PM_[Changes]/shelved.patch	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,235 +0,0 @@
-Index: app/src/main/java/com/example/agrimart/data/model/Order.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.data.model;\r\n\r\nimport com.google.firebase.Timestamp;\r\nimport com.google.firebase.firestore.PropertyName;\r\n\r\nimport java.io.Serializable;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class Order implements Serializable {\r\n\r\n    @PropertyName(\"orderId\")\r\n    private String orderId;\r\n\r\n    @PropertyName(\"products\")\r\n    private List<Product> products;\r\n\r\n    @PropertyName(\"status\")\r\n    private String status;\r\n\r\n    @PropertyName(\"total_price\")\r\n    private int totalPrice;\r\n\r\n    @PropertyName(\"userId\")\r\n    private String userId;\r\n\r\n    @PropertyName(\"storeId\")\r\n    private String sellerId;\r\n\r\n    @PropertyName(\"order_code\")\r\n    private String orderCode;\r\n\r\n    @PropertyName(\"address\")\r\n    private String address;\r\n\r\n    @PropertyName(\"shipping_name\")\r\n    private String shippingName;\r\n\r\n    @PropertyName(\"shipping_fee\")\r\n    private Double shippingFee;\r\n\r\n    private String statusDelivery;\r\n\r\n    private String storeName;\r\n\r\n    private String paymentMethod;\r\n\r\n    private boolean checkRating;\r\n\r\n    private String username;\r\n\r\n    private String phonenumber;\r\n\r\n    @PropertyName(\"created_at\")\r\n    private Timestamp createdAt;\r\n\r\n    private String transactionId;\r\n\r\n    private Timestamp transactionDate;\r\n\r\n    @PropertyName(\"vnp_TxnRef\")\r\n    private String vnpTxnRef;\r\n\r\n    public Order() {\r\n    }\r\n\r\n    public Order(String orderId, String status, int totalPrice) {\r\n        this.orderId = orderId;\r\n        this.status = status;\r\n        this.totalPrice = totalPrice;\r\n    }\r\n\r\n    @PropertyName(\"orderId\")\r\n    public String getOrderId() {\r\n        return orderId;\r\n    }\r\n\r\n    @PropertyName(\"orderId\")\r\n    public void setOrderId(String orderId) {\r\n        this.orderId = orderId;\r\n    }\r\n\r\n    @PropertyName(\"status\")\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    @PropertyName(\"status\")\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    @PropertyName(\"total_price\")\r\n    public int getTotalPrice() {\r\n        return totalPrice;\r\n    }\r\n\r\n    @PropertyName(\"total_price\")\r\n    public void setTotalPrice(int totalPrice) {\r\n        this.totalPrice = totalPrice;\r\n    }\r\n\r\n    @PropertyName(\"userId\")\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    @PropertyName(\"userId\")\r\n    public void setUserId(String userId) {\r\n        this.userId = userId;\r\n    }\r\n\r\n    @PropertyName(\"order_code\")\r\n    public String getOrderCode() {\r\n        return orderCode;\r\n    }\r\n\r\n    @PropertyName(\"order_code\")\r\n    public void setOrderCode(String orderCode) {\r\n        this.orderCode = orderCode;\r\n    }\r\n\r\n    public String getStatusDelivery() {\r\n        return statusDelivery;\r\n    }\r\n\r\n    public void setStatusDelivery(String statusDelivery) {\r\n        this.statusDelivery = statusDelivery;\r\n    }\r\n\r\n    @PropertyName(\"address\")\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    @PropertyName(\"address\")\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    @PropertyName(\"storeId\")\r\n    public String getSellerId() {\r\n        return sellerId;\r\n    }\r\n\r\n    @PropertyName(\"storeId\")\r\n    public void setSellerId(String sellerId) {\r\n        this.sellerId = sellerId;\r\n    }\r\n\r\n    public List<Product> getProducts() {\r\n        return products;\r\n    }\r\n\r\n    public void setProducts(List<Product> products) {\r\n        this.products = products;\r\n    }\r\n\r\n    public String getStoreName() {\r\n        return storeName;\r\n    }\r\n\r\n    public void setStoreName(String storeName) {\r\n        this.storeName = storeName;\r\n    }\r\n\r\n    public String getPaymentMethod() {\r\n        return paymentMethod;\r\n    }\r\n\r\n    public void setPaymentMethod(String paymentMethod) {\r\n        this.paymentMethod = paymentMethod;\r\n    }\r\n\r\n    public boolean isCheckRating() {\r\n        return checkRating;\r\n    }\r\n\r\n    public void setCheckRating(boolean checkRating) {\r\n        this.checkRating = checkRating;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public String getPhonenumber() {\r\n        return phonenumber;\r\n    }\r\n\r\n    public void setPhonenumber(String phonenumber) {\r\n        this.phonenumber = phonenumber;\r\n    }\r\n\r\n    @PropertyName(\"shipping_name\")\r\n    public String getShippingName() {\r\n        return shippingName;\r\n    }\r\n\r\n    @PropertyName(\"shipping_name\")\r\n    public void setShippingName(String shippingName) {\r\n        this.shippingName = shippingName;\r\n    }\r\n\r\n    @PropertyName(\"shipping_fee\")\r\n    public Double getShippingFee() {\r\n        return shippingFee;\r\n    }\r\n\r\n    @PropertyName(\"shipping_fee\")\r\n    public void setShippingFee(Double shippingFee) {\r\n        this.shippingFee = shippingFee;\r\n    }\r\n\r\n    @PropertyName(\"created_at\")\r\n    public Timestamp getCreatedAt() {\r\n        return createdAt;\r\n    }\r\n\r\n    @PropertyName(\"created_at\")\r\n    public void setCreatedAt(Timestamp createdAt) {\r\n        this.createdAt = createdAt;\r\n    }\r\n\r\n    public String getTransactionId() {\r\n        return transactionId;\r\n    }\r\n\r\n    public void setTransactionId(String transactionId) {\r\n        this.transactionId = transactionId;\r\n    }\r\n\r\n    public Timestamp getTransactionDate() {\r\n        return transactionDate;\r\n    }\r\n\r\n    public void setTransactionDate(Timestamp transactionDate) {\r\n        this.transactionDate = transactionDate;\r\n    }\r\n\r\n    @PropertyName(\"vnp_TxnRef\")\r\n    public String getVnpTxnRef() {\r\n        return vnpTxnRef;\r\n    }\r\n\r\n    @PropertyName(\"vnp_TxnRef\")\r\n    public void setVnpTxnRef(String vnpTxnRef) {\r\n        this.vnpTxnRef = vnpTxnRef;\r\n    }\r\n\r\n    public String getFormattedCreatedAtDate() {\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy HH:mm\", Locale.getDefault());\r\n        Date date = new Date(createdAt.toDate().getTime());\r\n        return dateFormat.format(date);\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/data/model/Order.java b/app/src/main/java/com/example/agrimart/data/model/Order.java
---- a/app/src/main/java/com/example/agrimart/data/model/Order.java	(revision ba936340bbdac641ba150d1b6cdedfa85d9a87db)
-+++ b/app/src/main/java/com/example/agrimart/data/model/Order.java	(date 1733220401203)
-@@ -218,15 +218,23 @@
-         this.shippingFee = shippingFee;
-     }
- 
-+    private long createdAtMillis;  // Chúng ta sẽ sử dụng long thay vì Timestamp để truyền qua Intent
-+    // Getter và setter cho createdAtMillis
-+    public long getCreatedAtMillis() {
-+        return createdAtMillis;
-+    }
-+
-+    @PropertyName("created_at")
-+    public void setCreatedAt(Timestamp createdAt) {
-+        this.createdAtMillis = createdAt.toDate().getTime(); // Chuyển Timestamp thành long
-+    }
-+
-     @PropertyName("created_at")
-     public Timestamp getCreatedAt() {
-         return createdAt;
-     }
- 
--    @PropertyName("created_at")
--    public void setCreatedAt(Timestamp createdAt) {
--        this.createdAt = createdAt;
--    }
-+    private long transactionDateMillis;
- 
-     public String getTransactionId() {
-         return transactionId;
-@@ -241,7 +249,7 @@
-     }
- 
-     public void setTransactionDate(Timestamp transactionDate) {
--        this.transactionDate = transactionDate;
-+        this.transactionDateMillis = transactionDate.toDate().getTime();
-     }
- 
-     @PropertyName("vnp_TxnRef")
-@@ -256,7 +264,16 @@
- 
-     public String getFormattedCreatedAtDate() {
-         SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm", Locale.getDefault());
--        Date date = new Date(createdAt.toDate().getTime());
-+        Date date = new Date(createdAtMillis);
-         return dateFormat.format(date);
-     }
-+
-+    public long getTransactionDateMillis() {
-+        return transactionDateMillis;
-+    }
-+
-+    public void setTransactionDateMillis(long transactionDateMillis) {
-+        this.transactionDateMillis = transactionDateMillis;
-+        this.createdAtMillis = createdAt.toDate().getTime();
-+    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/OrderInformationActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.ui.MyProfile.PurchasedOrders;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Switch;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.adapter.OrderStoreAdapter;\r\nimport com.example.agrimart.adapter.ProductOrderAdapter;\r\nimport com.example.agrimart.data.model.Cart;\r\nimport com.example.agrimart.data.model.Order;\r\nimport com.example.agrimart.data.model.Product;\r\nimport com.example.agrimart.ui.Cart.CheckoutActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyRating.ProductRatingActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyRating.ShopRatingActivity;\r\nimport com.example.agrimart.viewmodel.OrderStatusFragmentViewModel;\r\nimport com.google.firebase.Timestamp;\r\n\r\nimport java.text.NumberFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class OrderInformationActivity extends AppCompatActivity {\r\n    Order order;\r\n    TextView status, shippingName, address, totalPriceProduct, shippingFee, totalPrice, tvRefund;\r\n    AppCompatButton btnBuy, btnDetail;\r\n    ImageButton btnBack;\r\n    RecyclerView recyclerViewDetail;\r\n    LinearLayout llRefund;\r\n    private final int REQUEST_CODE_RATING = 1001;\r\n    private OrderStatusFragmentViewModel viewModel;\r\n    int position;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_order_information);\r\n\r\n        // Initialize order object from intent\r\n        order = (Order) getIntent().getSerializableExtra(\"order\");\r\n        viewModel = new OrderStatusFragmentViewModel();\r\n\r\n        // Add controls\r\n        addControl();\r\n\r\n        // Load order details\r\n        loadDetail();\r\n\r\n        // Set events\r\n        addEvent();\r\n    }\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == REQUEST_CODE_RATING) {\r\n            if (resultCode == RESULT_OK) {\r\n                finish();\r\n            }\r\n        }\r\n    }\r\n\r\n    void addControl() {\r\n        status = findViewById(R.id.status);\r\n        shippingName = findViewById(R.id.shipping_name);\r\n        address = findViewById(R.id.address);\r\n        totalPriceProduct = findViewById(R.id.total_price_product);\r\n        shippingFee = findViewById(R.id.shipping_fee);\r\n        totalPrice = findViewById(R.id.total_price);\r\n        btnBuy = findViewById(R.id.btn_buy);\r\n        btnBack = findViewById(R.id.btn_back);\r\n        btnDetail = findViewById(R.id.btn_detail);\r\n        recyclerViewDetail = findViewById(R.id.recyclerViewDetail);\r\n        llRefund = findViewById(R.id.ll_refund);\r\n        tvRefund = findViewById(R.id.tv_refund);\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    void loadDetail() {\r\n        shippingName.setText(order.getShippingName());\r\n        String userDetail = order.getUsername() + \" \" + order.getPhonenumber();\r\n        address.setText(\"Huy Long 0987654321\" + \"\\n\" + order.getAddress());\r\n\r\n        // Format shipping fee and total price\r\n        shippingFee.setText(formatCurrency(order.getShippingFee()) + \" đ\");\r\n        totalPrice.setText(\"Tổng số tiền: \" + formatCurrency(order.getTotalPrice()) + \" đ\");\r\n\r\n        // Calculate total product price (excluding shipping fee)\r\n        double priceProduct = order.getTotalPrice() - order.getShippingFee();\r\n        totalPriceProduct.setText(formatCurrency(priceProduct) + \" đ\");\r\n\r\n        // Format the createdAt date\r\n        status.setText(getStatus(order.getStatus()) + order.getFormattedCreatedAtDate());\r\n\r\n        // Set up RecyclerView for product details\r\n        List<Product> products = order.getProducts();\r\n        ProductOrderAdapter productOrderAdapter = new ProductOrderAdapter(products);\r\n        recyclerViewDetail.setAdapter(productOrderAdapter);\r\n        recyclerViewDetail.setLayoutManager(new LinearLayoutManager(this));\r\n    }\r\n\r\n    void addEvent() {\r\n        btnBack.setOnClickListener(v -> finish());\r\n        btnBuy.setOnClickListener(v -> {\r\n\r\n            if(order.isCheckRating())\r\n            {\r\n                onCheckoutButtonClicked();\r\n            }else {\r\n                openRating();\r\n            }\r\n\r\n        });\r\n        btnDetail.setOnClickListener(v -> {\r\n            if(order.isCheckRating())\r\n            {\r\n                openRatingDetail();\r\n            }\r\n        });\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    String getStatus(String status) {\r\n\r\n        switch (status) {\r\n            case \"pending\":\r\n                return \"Chờ xác nhận \";\r\n            case \"approved\":\r\n                return \"Chờ lấy hàng \";\r\n            case \"delivery\":\r\n                btnDetail.setVisibility(View.VISIBLE);\r\n                btnDetail.setText(\"Trả hàng/Hoàn tiền\");\r\n                if(!order.isCheckRating())\r\n                {\r\n                    btnDetail.setText(\"Trả hàng/Hoàn tiền\");\r\n                    btnBuy.setText(\"Đã nhận hàng\");\r\n                }\r\n                return \"Chờ giao hàng \";\r\n\r\n            case \"delivered\":\r\n                btnDetail.setVisibility(View.VISIBLE);\r\n                if(!order.isCheckRating())\r\n                {\r\n                    btnDetail.setText(\"Trả hàng/Hoàn tiền\");\r\n                    btnBuy.setText(\"Đánh giá\");\r\n                }\r\n                return \"Đã giao vào \";\r\n            case \"canceled\":\r\n                llRefund.setVisibility(View.VISIBLE);\r\n                return \"Đã hủy vào \";\r\n        }\r\n\r\n        return \"Không xác định\";\r\n\r\n    }\r\n\r\n    // Helper method to format currency\r\n    private String formatCurrency(double amount) {\r\n        return NumberFormat.getInstance(Locale.getDefault()).format(amount);\r\n    }\r\n\r\n    private void onCheckoutButtonClicked() {\r\n        List<Product> selectedProducts = new ArrayList<>();\r\n        List<String> productIds = new ArrayList<>();\r\n\r\n        selectedProducts = order.getProducts();\r\n\r\n        for (Product p : selectedProducts)\r\n        {\r\n            productIds.add(p.getProduct_id());\r\n        }\r\n\r\n        Intent intent = new Intent(this, CheckoutActivity.class);\r\n        intent.putParcelableArrayListExtra(\"selectedProducts\", new ArrayList<>(selectedProducts));\r\n        intent.putStringArrayListExtra(\"productIds\", new ArrayList<>(productIds));\r\n        intent.putExtra(\"storeName\", order.getStoreName());\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void openRating() {\r\n        if (order.getStatus().equals(\"delivery\")) {\r\n            viewModel.updateOrderStatus(order.getOrderId(), \"delivered\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                @Override\r\n                public void onSuccess(String message) {\r\n                    // Cập nhật trạng thái của item trong adapter\r\n                    viewModel.getData(\"delivery\");\r\n                    order.setStatus(\"delivery\");\r\n\r\n                    Intent intent = new Intent(OrderInformationActivity.this, ProductRatingActivity.class);\r\n                    intent.putExtra(\"order\", order);\r\n                    startActivityForResult(intent, REQUEST_CODE_RATING);\r\n                }\r\n\r\n                @Override\r\n                public void onError(String errorMessage) {\r\n\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            order.setStatus(\"delivered\");\r\n            Intent intent = new Intent(this, ProductRatingActivity.class);\r\n            intent.putExtra(\"order\", order);\r\n            startActivityForResult(intent, REQUEST_CODE_RATING);\r\n        }\r\n\r\n    }\r\n\r\n    private void openRatingDetail() {\r\n        Intent intent = new Intent(this, ShopRatingActivity.class);\r\n        intent.putExtra(\"order\", order);\r\n        startActivity(intent);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/OrderInformationActivity.java b/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/OrderInformationActivity.java
---- a/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/OrderInformationActivity.java	(revision ba936340bbdac641ba150d1b6cdedfa85d9a87db)
-+++ b/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/OrderInformationActivity.java	(date 1733215981849)
-@@ -142,7 +142,7 @@
-                 return "Chờ xác nhận ";
-             case "approved":
-                 return "Chờ lấy hàng ";
--            case "delivery":
-+            case "delivering":
-                 btnDetail.setVisibility(View.VISIBLE);
-                 btnDetail.setText("Trả hàng/Hoàn tiền");
-                 if(!order.isCheckRating())
-@@ -193,13 +193,13 @@
-     }
- 
-     private void openRating() {
--        if (order.getStatus().equals("delivery")) {
-+        if (order.getStatus().equals("delivering")) {
-             viewModel.updateOrderStatus(order.getOrderId(), "delivered", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-                 @Override
-                 public void onSuccess(String message) {
-                     // Cập nhật trạng thái của item trong adapter
--                    viewModel.getData("delivery");
--                    order.setStatus("delivery");
-+                    viewModel.getData("delivering");
-+                    order.setStatus("delivering");
- 
-                     Intent intent = new Intent(OrderInformationActivity.this, ProductRatingActivity.class);
-                     intent.putExtra("order", order);
-Index: app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.adapter;\r\n\r\nimport static androidx.core.content.ContextCompat.startActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.data.model.Order;\r\nimport com.example.agrimart.data.model.Product;\r\nimport com.example.agrimart.ui.Cart.CheckoutActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyRating.ProductRatingActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyRating.ShopRatingActivity;\r\nimport com.example.agrimart.ui.MyProfile.PurchasedOrders.OrderInformationActivity;\r\nimport com.example.agrimart.ui.Payment.VnpayRefund;\r\nimport com.example.agrimart.viewmodel.OrderStatusFragmentViewModel;\r\nimport com.google.firebase.Timestamp;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class OrderStoreAdapter extends RecyclerView.Adapter<OrderStoreAdapter.OrderStoreViewHolder> {\r\n    private final List<Order> orderStoreList = new ArrayList<>();\r\n    private OrderStatusFragmentViewModel viewModel;\r\n    private final int REQUEST_CODE_RATING = 1001;\r\n\r\n\r\n    // Constructor\r\n    public OrderStoreAdapter(List<Order> orderStoreList, OrderStatusFragmentViewModel viewModel) {\r\n        this.orderStoreList.addAll(orderStoreList);\r\n        this.viewModel = viewModel;\r\n    }\r\n\r\n    // Update orders when data changes\r\n    public void updateOrders(List<Order> newOrders) {\r\n        orderStoreList.clear();\r\n        orderStoreList.addAll(newOrders);\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public OrderStoreViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        // Inflate the layout for each item\r\n        View view = LayoutInflater.from(parent.getContext())\r\n                .inflate(R.layout.item_order_store, parent, false);\r\n        return new OrderStoreViewHolder(view);\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    public void onBindViewHolder(@NonNull OrderStoreViewHolder holder, int position) {\r\n        // Get the current OrderStore\r\n        Order orderStore = orderStoreList.get(position);\r\n\r\n        List<Product> products = orderStore.getProducts();\r\n        ProductOrderAdapter productOrderAdapter = new ProductOrderAdapter(products);\r\n        productOrderAdapter.setOnProductClickListener(product -> {\r\n            openDetail(holder, orderStore);\r\n        });\r\n\r\n        holder.recyclerViewItemOrder.setAdapter(productOrderAdapter);\r\n        holder.recyclerViewItemOrder.setLayoutManager(new LinearLayoutManager(holder.itemView.getContext()));\r\n\r\n        // Set text data\r\n        holder.tvStoreName.setText(orderStore.getStoreName());\r\n\r\n        String translatedStatus;\r\n        switch (orderStore.getStatus()) {\r\n            case \"pending\":\r\n                translatedStatus = \"Chờ xác nhận\";\r\n                holder.btnBuy.setText(\"Hủy đơn hàng\");\r\n                break;\r\n            case \"approved\":\r\n                translatedStatus = \"Chờ lấy hàng\";\r\n                break;\r\n            case \"delivery\":\r\n                translatedStatus = \"Chờ giao hàng\";\r\n                holder.btnBuy.setText(\"Đã nhận hàng\");\r\n                holder.btnDetail.setVisibility(View.VISIBLE);\r\n                holder.btnDetail.setText(\"Trả hàng/Hoàn tiền\");\r\n                break;\r\n            case \"refund\":\r\n                translatedStatus = \"Chờ giao hàng\";\r\n                holder.btnBuy.setText(\"Đã nhận hàng\");\r\n                break;\r\n            case \"delivered\":\r\n                translatedStatus = \"Hoàn thành\";\r\n                if (!orderStore.isCheckRating()) {\r\n                    holder.btnBuy.setText(\"Đánh giá\");\r\n                    holder.btnDetail.setVisibility(View.VISIBLE);\r\n                    holder.btnDetail.setText(\"Trả hàng/Hoàn tiền\");\r\n                } else {\r\n                    holder.btnDetail.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                break;\r\n            case \"canceled\":\r\n                translatedStatus = \"Đã hủy\";\r\n                holder.btnDetail.setText(\"Xem Thông tin Hoàn tiền\");\r\n                break;\r\n            default:\r\n                translatedStatus = \"Không xác định\";\r\n                break;\r\n        }\r\n        holder.tvStatus.setText(translatedStatus);\r\n\r\n        // Thêm listener cho btnBuy\r\n        holder.btnBuy.setOnClickListener(v -> cancelOrder(holder, orderStore));  // Truyền đúng item vào đây\r\n\r\n        holder.tvTotalPrice.setText(\"Tổng số tiền: \" + orderStore.getTotalPrice() + \" VND\");\r\n\r\n        holder.main.setOnClickListener(v -> openDetail(holder, orderStore));\r\n\r\n        holder.btnDetail.setOnClickListener(v -> openRating(holder, orderStore));\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return orderStoreList.size();\r\n    }\r\n\r\n    // ViewHolder class\r\n    static class OrderStoreViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView tvStoreName, tvStatus, tvTotalPrice;\r\n        ImageView imageView;\r\n        RecyclerView recyclerViewItemOrder;\r\n        AppCompatButton btnBuy, btnDetail;\r\n        LinearLayout main;\r\n\r\n        public OrderStoreViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            main = itemView.findViewById(R.id.main);\r\n            tvStoreName = itemView.findViewById(R.id.tv_store_name);\r\n            tvStatus = itemView.findViewById(R.id.status);\r\n            tvTotalPrice = itemView.findViewById(R.id.total_price);\r\n            imageView = itemView.findViewById(R.id.imageView9);\r\n            recyclerViewItemOrder = itemView.findViewById(R.id.recyclerViewItemOrder);\r\n            btnBuy = itemView.findViewById(R.id.btn_buy);\r\n            btnDetail = itemView.findViewById(R.id.btn_detail);\r\n        }\r\n    }\r\n\r\n    private void cancelOrder(OrderStoreViewHolder holder, Order order) {\r\n        int position = holder.getAdapterPosition(); // Lấy đúng vị trí của item\r\n        if (position == RecyclerView.NO_POSITION) {\r\n            return; // Nếu vị trí không hợp lệ, thoát khỏi phương thức\r\n        }\r\n\r\n        if (order.getStatus().equals(\"pending\") && order.getPaymentMethod().equals(\"COD\")) {\r\n            viewModel.updateOrderStatus(order.getOrderId(), \"canceled\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                @Override\r\n                public void onSuccess(String message) {\r\n                    // Cập nhật trạng thái của item trong adapter\r\n                    order.setStatus(\"pending\");\r\n                    notifyItemChanged(position); // Chỉ cập nhật item tại vị trí hiện tại\r\n                    Toast.makeText(holder.itemView.getContext(), \"Đơn hàng đã hủy!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                @Override\r\n                public void onError(String errorMessage) {\r\n                    Toast.makeText(holder.itemView.getContext(), \"Không thể hủy đơn hàng: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        } else if (order.getStatus().equals(\"pending\") && order.getPaymentMethod().equals(\"VNPay\")) {\r\n            // Khi trả hàng gọi api hoàn tiền\r\n            FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n            db.collection(\"orders\").document(order.getOrderId()).get().addOnSuccessListener(documentSnapshot -> {\r\n                if (documentSnapshot.exists()) {\r\n                    String vnpTxnRef = documentSnapshot.getString(\"vnpTxnRef\");\r\n                    order.setVnpTxnRef(vnpTxnRef);\r\n\r\n                    new Thread(() -> {\r\n                        try {\r\n                            String vnp_TxnRef = order.getVnpTxnRef();\r\n                            String transactionId = order.getTransactionId();\r\n                            int totalPrice = order.getTotalPrice();\r\n                            String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDate());\r\n\r\n                            // Gửi yêu cầu hoàn tiền\r\n                            String response = VnpayRefund.createRefundRequest(\r\n                                    vnp_TxnRef,          // Mã giao dịch của merchant (txnRef)\r\n                                    transactionId,       // Mã giao dịch từ VNPAY\r\n                                    totalPrice,          // Số tiền hoàn\r\n                                    formattedTransactionDate, // Ngày giao dịch gốc\r\n                                    \"Hoàn tiền cho đơn hàng \" + order.getOrderId(), // Lý do hoàn tiền\r\n                                    \"admin\"              // Người thực hiện\r\n                            );\r\n\r\n                            //nếu hoàn tiền thành công\r\n                            if (response.contains(\"\\\"vnp_ResponseCode\\\":\\\"00\\\"\")) { //ResponseCode là 00 (Hoàn tiền thành công)\r\n                                new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                    Toast.makeText(holder.itemView.getContext(), \"Huỷ đơn hàng thành công\", Toast.LENGTH_SHORT).show();\r\n                                });\r\n\r\n                                // Cập nhật trạng thái đơn hàng\r\n                                viewModel.updateOrderStatus(order.getOrderId(), \"canceled\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                                    @Override\r\n                                    public void onSuccess(String message) {\r\n                                        order.setStatus(\"canceled\");\r\n                                        notifyItemChanged(position);\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onError(String errorMessage) {\r\n                                        new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                            Toast.makeText(holder.itemView.getContext(), \"Không thể hủy đơn hàng: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n                            } else {\r\n                                //nếu hoàn tiền không thành công\r\n                                new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                    Toast.makeText(holder.itemView.getContext(), \"Không thể hoàn tiền: \" + response, Toast.LENGTH_SHORT).show();\r\n                                });\r\n                                Log.println(Log.ERROR, \"VnpayRefund\", response);\r\n                            }\r\n                        } catch (Exception e) {\r\n                            new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                Toast.makeText(holder.itemView.getContext(), \"Lỗi: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                            });\r\n                        }\r\n                    }).start();\r\n                } else {\r\n                    Toast.makeText(holder.itemView.getContext(), \"Đơn hàng không tồn tại\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }).addOnFailureListener(e -> {\r\n                Toast.makeText(holder.itemView.getContext(), \"Lỗi khi lấy thông tin đơn hàng: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n            });\r\n        } else if (order.getStatus().equals(\"delivery\")) {\r\n            viewModel.updateOrderStatus(order.getOrderId(), \"delivered\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                @Override\r\n                public void onSuccess(String message) {\r\n                    // Cập nhật trạng thái của item trong adapter\r\n                    viewModel.getData(\"delivery\");\r\n                    order.setStatus(\"delivery\");\r\n                    notifyItemChanged(position);\r\n\r\n                    Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);\r\n\r\n                    intent.putExtra(\"order\", order);\r\n                    holder.itemView.getContext().startActivity(intent);\r\n                }\r\n\r\n                @Override\r\n                public void onError(String errorMessage) {\r\n                    Toast.makeText(holder.itemView.getContext(), \"Không thể cập nhật trạng thái: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        } else if (order.getStatus().equals(\"delivered\") && !order.isCheckRating()) {\r\n\r\n            // Cập nhật trạng thái của item trong adapter\r\n            order.setStatus(\"delivered\");\r\n            notifyItemChanged(position);\r\n\r\n            Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);\r\n            intent.putExtra(\"order\", order);\r\n            intent.putExtra(\"position\", 2);\r\n            ((Activity) holder.itemView.getContext()).startActivityForResult(intent, REQUEST_CODE_RATING);\r\n        } else {\r\n            onCheckoutButtonClicked(holder, order);\r\n        }\r\n    }\r\n\r\n    private void openDetail(OrderStoreViewHolder holder, Order order) {\r\n        int position = holder.getAdapterPosition(); // Lấy đúng vị trí của item\r\n        if (position == RecyclerView.NO_POSITION) {\r\n            return; // Nếu vị trí không hợp lệ, thoát khỏi phương thức\r\n        }\r\n\r\n        Intent intent = new Intent(holder.itemView.getContext(), OrderInformationActivity.class);\r\n        intent.putExtra(\"order\", order);\r\n        holder.itemView.getContext().startActivity(intent);\r\n    }\r\n\r\n    private void onCheckoutButtonClicked(OrderStoreViewHolder holder, Order order) {\r\n        List<Product> selectedProducts = new ArrayList<>();\r\n        List<String> productIds = new ArrayList<>();\r\n\r\n        selectedProducts = order.getProducts();\r\n\r\n        for (Product p : selectedProducts) {\r\n            productIds.add(p.getProduct_id());\r\n        }\r\n\r\n        Intent intent = new Intent(holder.itemView.getContext(), CheckoutActivity.class);\r\n        intent.putParcelableArrayListExtra(\"selectedProducts\", new ArrayList<>(selectedProducts));\r\n        intent.putStringArrayListExtra(\"productIds\", new ArrayList<>(productIds));\r\n        intent.putExtra(\"storeName\", order.getStoreName());\r\n        holder.itemView.getContext().startActivity(intent);\r\n\r\n    }\r\n\r\n    private void openRating(OrderStoreViewHolder holder, Order order) {\r\n        Intent intent = new Intent(holder.itemView.getContext(), ShopRatingActivity.class);\r\n        intent.putExtra(\"order\", order);\r\n        holder.itemView.getContext().startActivity(intent);\r\n    }\r\n\r\n    public static String formatTimestampToVnpayDate(Timestamp timestamp) {\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.getDefault());\r\n        Date date = new Date(timestamp.toDate().getTime());\r\n        return formatter.format(date);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java b/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java
---- a/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java	(revision ba936340bbdac641ba150d1b6cdedfa85d9a87db)
-+++ b/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java	(date 1733220249121)
-@@ -94,13 +94,13 @@
-             case "approved":
-                 translatedStatus = "Chờ lấy hàng";
-                 break;
--            case "delivery":
-+            case "delivering":
-                 translatedStatus = "Chờ giao hàng";
-                 holder.btnBuy.setText("Đã nhận hàng");
-                 holder.btnDetail.setVisibility(View.VISIBLE);
-                 holder.btnDetail.setText("Trả hàng/Hoàn tiền");
-                 break;
--            case "refund":
-+            case "return":
-                 translatedStatus = "Chờ giao hàng";
-                 holder.btnBuy.setText("Đã nhận hàng");
-                 break;
-@@ -198,7 +198,7 @@
-                             String vnp_TxnRef = order.getVnpTxnRef();
-                             String transactionId = order.getTransactionId();
-                             int totalPrice = order.getTotalPrice();
--                            String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDate());
-+                            String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDateMillis());
- 
-                             // Gửi yêu cầu hoàn tiền
-                             String response = VnpayRefund.createRefundRequest(
-@@ -217,7 +217,7 @@
-                                 });
- 
-                                 // Cập nhật trạng thái đơn hàng
--                                viewModel.updateOrderStatus(order.getOrderId(), "canceled", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-+                                viewModel.updateOrderStatusRefund(order.getOrderId(), "canceled", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-                                     @Override
-                                     public void onSuccess(String message) {
-                                         order.setStatus("canceled");
-@@ -237,7 +237,7 @@
-                                 new android.os.Handler(Looper.getMainLooper()).post(() -> {
-                                     Toast.makeText(holder.itemView.getContext(), "Không thể hoàn tiền: " + response, Toast.LENGTH_SHORT).show();
-                                 });
--                                Log.println(Log.ERROR, "VnpayRefund", response);
-+                                Log.println(Log.ERROR, "Vnpayreturn", response);
-                             }
-                         } catch (Exception e) {
-                             new android.os.Handler(Looper.getMainLooper()).post(() -> {
-@@ -251,13 +251,13 @@
-             }).addOnFailureListener(e -> {
-                 Toast.makeText(holder.itemView.getContext(), "Lỗi khi lấy thông tin đơn hàng: " + e.getMessage(), Toast.LENGTH_SHORT).show();
-             });
--        } else if (order.getStatus().equals("delivery")) {
-+        } else if (order.getStatus().equals("delivering")) {
-             viewModel.updateOrderStatus(order.getOrderId(), "delivered", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-                 @Override
-                 public void onSuccess(String message) {
-                     // Cập nhật trạng thái của item trong adapter
--                    viewModel.getData("delivery");
--                    order.setStatus("delivery");
-+                    viewModel.getData("delivering");
-+                    order.setStatus("delivering");
-                     notifyItemChanged(position);
- 
-                     Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);
-@@ -321,9 +321,9 @@
-         holder.itemView.getContext().startActivity(intent);
-     }
- 
--    public static String formatTimestampToVnpayDate(Timestamp timestamp) {
-+    public static String formatTimestampToVnpayDate(Long timestamp) {
-         SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMddHHmmss", Locale.getDefault());
--        Date date = new Date(timestamp.toDate().getTime());
-+        Date date = new Date(timestamp);
-         return formatter.format(date);
-     }
- 
-Index: app/src/main/java/com/example/agrimart/viewmodel/OrderStatusFragmentViewModel.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.viewmodel;\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.lifecycle.MutableLiveData;\r\nimport androidx.lifecycle.ViewModel;\r\nimport com.example.agrimart.data.model.Order;\r\nimport com.example.agrimart.data.model.Product;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.concurrent.atomic.AtomicInteger;\r\n\r\npublic class OrderStatusFragmentViewModel extends ViewModel {\r\n    private final FirebaseFirestore firestore;\r\n    private final FirebaseAuth auth;\r\n    private String userId;\r\n    private final MutableLiveData<List<Order>> orders = new MutableLiveData<>();\r\n\r\n    public LiveData<List<Order>> getOrders() {\r\n        return orders;\r\n    }\r\n\r\n    public OrderStatusFragmentViewModel() {\r\n        this.auth = FirebaseAuth.getInstance();\r\n        this.firestore = FirebaseFirestore.getInstance();\r\n    }\r\n\r\n    public void getData(String status) {\r\n        userId = auth.getCurrentUser().getUid();\r\n        firestore.collection(\"orders\")\r\n                .whereEqualTo(\"userId\", userId)\r\n                .whereEqualTo(\"status\", status)\r\n                .orderBy(\"created_at\", Query.Direction.DESCENDING)\r\n                .get()\r\n                .addOnCompleteListener(task -> {\r\n                    if (task.isSuccessful() && task.getResult() != null) {\r\n                        List<Order> orderList = task.getResult().toObjects(Order.class);\r\n                        if (!orderList.isEmpty()) {\r\n                            // Lấy danh sách các ID sản phẩm từ đơn hàng\r\n                            fetchProductDetailsAndStore(orderList, new OnDataFetchedListener() {\r\n                                @Override\r\n                                public void onDataFetched(List<Order> updatedOrders) {\r\n                                    orders.setValue(updatedOrders); // Cập nhật LiveData sau khi lấy xong dữ liệu\r\n                                }\r\n\r\n                                @Override\r\n                                public void onError(String errorMessage) {\r\n                                    // Handle error\r\n                                    orders.setValue(new ArrayList<>());\r\n                                }\r\n                            });\r\n                        } else {\r\n                            orders.setValue(new ArrayList<>());\r\n                        }\r\n                    } else {\r\n                        orders.setValue(new ArrayList<>());\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n    // Cập nhật thông tin của sản phẩm từ collection \"products\"\r\n    private void fetchProductDetailsAndStore(List<Order> storeOrderList, final OnDataFetchedListener listener) {\r\n        // Khởi tạo danh sách với kích thước bằng storeOrderList để đảm bảo thứ tự\r\n        List<Order> updatedStoreOrderList = new ArrayList<>(storeOrderList.size());\r\n        for (int i = 0; i < storeOrderList.size(); i++) {\r\n            updatedStoreOrderList.add(i, null); // Đảm bảo mỗi vị trí trong danh sách là null trước khi cập nhật\r\n        }\r\n\r\n        AtomicInteger remainingRequests = new AtomicInteger(storeOrderList.size());  // Đếm số lượng yêu cầu còn lại\r\n\r\n        for (int i = 0; i < storeOrderList.size(); i++) {\r\n            Order storeOrder = storeOrderList.get(i);\r\n            List<Product> products = storeOrder.getProducts();\r\n            AtomicInteger productRequests = new AtomicInteger(products.size());  // Đếm số lượng yêu cầu cho từng sản phẩm\r\n\r\n            for (Product product : products) {\r\n                int finalI = i;\r\n                firestore.collection(\"products\")\r\n                        .document(product.getProduct_id())\r\n                        .get()\r\n                        .addOnCompleteListener(productTask -> {\r\n                            if (productTask.isSuccessful()) {\r\n                                DocumentSnapshot productDoc = productTask.getResult();\r\n                                if (productDoc.exists()) {\r\n                                    // Cập nhật thông tin sản phẩm từ Firestore\r\n                                    product.setName(productDoc.getString(\"name\"));\r\n                                    product.setPrice(productDoc.getDouble(\"price\"));\r\n                                    product.setImages((List<String>) productDoc.get(\"images\"));\r\n                                    product.setStoreId(productDoc.getString(\"storeId\"));\r\n                                    product.setUnit(productDoc.getString(\"unit\"));\r\n                                }\r\n                            } else {\r\n                                listener.onError(\"Lấy thông tin sản phẩm thất bại: \" + productTask.getException().getMessage());\r\n                            }\r\n\r\n                            // Sau khi tất cả sản phẩm của đơn hàng đã được cập nhật\r\n                            if (productRequests.decrementAndGet() == 0) {\r\n                                firestore.collection(\"users\")\r\n                                        .document(storeOrder.getSellerId())\r\n                                        .get()\r\n                                        .addOnCompleteListener(userTask -> {\r\n                                            if (userTask.isSuccessful()) {\r\n                                                DocumentSnapshot storeDoc = userTask.getResult();\r\n                                                if (storeDoc.exists()) {\r\n                                                    // Cập nhật thông tin cửa hàng từ Firestore\r\n                                                    storeOrder.setStoreName(storeDoc.getString(\"store_name\"));\r\n                                                }\r\n                                            } else {\r\n                                                listener.onError(\"Lấy thông tin cửa hàng thất bại: \" + userTask.getException().getMessage());\r\n                                            }\r\n\r\n                                            // Đặt storeOrder đã được cập nhật vào đúng vị trí trong danh sách\r\n                                            updatedStoreOrderList.set(finalI, storeOrder);\r\n\r\n                                            // Sau khi tất cả các yêu cầu đã hoàn thành\r\n                                            if (remainingRequests.decrementAndGet() == 0) {\r\n                                                listener.onDataFetched(updatedStoreOrderList); // Gọi listener khi tất cả dữ liệu đã được lấy về\r\n                                            }\r\n                                        });\r\n                            }\r\n                        });\r\n            }\r\n        }\r\n    }\r\n\r\n    public void updateOrderStatus(String orderId, String newStatus, OnStatusUpdateListener listener) {\r\n        Map<String, Object> updates = new HashMap<>();\r\n        updates.put(\"status\", newStatus);\r\n        updates.put(\"created_at\", FieldValue.serverTimestamp()); // Thêm thời gian hiện hành\r\n\r\n        firestore.collection(\"orders\")\r\n                .document(orderId)\r\n                .update(updates)\r\n                .addOnSuccessListener(unused -> listener.onSuccess(\"Order status updated successfully\"))\r\n                .addOnFailureListener(e -> listener.onError(\"Failed to update order status: \" + e.getMessage()));\r\n    }\r\n\r\n\r\n    public interface OnStatusUpdateListener {\r\n        void onSuccess(String message);\r\n        void onError(String errorMessage);\r\n    }\r\n\r\n\r\n    public interface OnDataFetchedListener {\r\n        void onDataFetched(List<Order> updatedOrders);\r\n        void onError(String errorMessage);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/viewmodel/OrderStatusFragmentViewModel.java b/app/src/main/java/com/example/agrimart/viewmodel/OrderStatusFragmentViewModel.java
---- a/app/src/main/java/com/example/agrimart/viewmodel/OrderStatusFragmentViewModel.java	(revision ba936340bbdac641ba150d1b6cdedfa85d9a87db)
-+++ b/app/src/main/java/com/example/agrimart/viewmodel/OrderStatusFragmentViewModel.java	(date 1733215239742)
-@@ -143,6 +143,21 @@
-     }
- 
- 
-+    public void updateOrderStatusRefund(String orderId, String newStatus, OnStatusUpdateListener listener) {
-+        Map<String, Object> updates = new HashMap<>();
-+        updates.put("status", newStatus);
-+        updates.put("created_at", FieldValue.serverTimestamp()); // Thêm thời gian hiện hành
-+        updates.put("refund", true); // Thêm trường refund với giá trị true
-+
-+        firestore.collection("orders")
-+                .document(orderId)
-+                .update(updates)
-+                .addOnSuccessListener(unused -> listener.onSuccess("Order status updated successfully"))
-+                .addOnFailureListener(e -> listener.onError("Failed to update order status: " + e.getMessage()));
-+    }
-+
-+
-+
-     public interface OnStatusUpdateListener {
-         void onSuccess(String message);
-         void onError(String errorMessage);
-Index: app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.ui.MyProfile.PurchasedOrders;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.widget.ImageButton;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.adapter.ViewPagerAdapter;\r\nimport com.example.agrimart.data.model.Order;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.android.material.tabs.TabLayoutMediator;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\npublic class PurchasedOrdersActivity extends AppCompatActivity {\r\n    private static final String TAG = \"PurchasedOrdersActivity\"; // Thêm hằng số TAG cho log\r\n    private static final int REQUEST_CODE_RATING = 1001;\r\n\r\n    private ViewPager2 viewPager;\r\n    private List<Fragment> fragments;\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == REQUEST_CODE_RATING) {\r\n            if (resultCode == RESULT_OK) {\r\n                    loadFragmentAtPosition(4);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void loadFragmentAtPosition(int position) {\r\n        if (position >= 0 && position < fragments.size()) {\r\n            // Lấy Fragment tại vị trí cần load lại\r\n            Fragment newFragment = new OrderStatusFragment(\"delivered\");\r\n\r\n            // Thay thế Fragment hiện tại tại vị trí đó\r\n            fragments.set(position , newFragment);\r\n\r\n            // Cập nhật lại adapter với danh sách fragment mới\r\n            ViewPagerAdapter adapter = new ViewPagerAdapter(this, fragments, Arrays.asList(\"Chờ xác nhận\", \"Chờ giao hàng\", \"Trả hàng\", \"Đã giao\", \"Đã hủy\"));\r\n            viewPager.setAdapter(adapter);\r\n\r\n\r\n            viewPager.setCurrentItem(position, true);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_purchased_orders);\r\n\r\n        // Khởi tạo TabLayout và ViewPager2\r\n        TabLayout tabLayout = findViewById(R.id.tab_layout);\r\n        viewPager = findViewById(R.id.view_pager);\r\n        ImageButton btn_back = findViewById(R.id.btn_back);\r\n\r\n        // Tạo danh sách Fragment và trạng thái\r\n        fragments = new ArrayList<>();\r\n        List<String> titles = Arrays.asList(\"Chờ xác nhận\", \"Chờ lấy hàng\", \"Chờ giao hàng\", \"Trả hàng\" ,\"Đã giao\", \"Đã hủy\");\r\n        List<String> statuses = Arrays.asList(\"pending\", \"approved\", \"delivery\", \"refund\" ,\"delivered\", \"canceled\");\r\n\r\n        for (String status : statuses) {\r\n            fragments.add(new OrderStatusFragment(status)); // Thêm các fragment vào danh sách\r\n        }\r\n\r\n        // Gán adapter cho ViewPager2\r\n        ViewPagerAdapter viewPagerAdapter = new ViewPagerAdapter(this, fragments, titles);\r\n        viewPager.setAdapter(viewPagerAdapter);\r\n\r\n        // Thiết lập TabLayout với ViewPager2\r\n        new TabLayoutMediator(tabLayout, viewPager, (tab, pos) -> tab.setText(titles.get(pos))).attach();\r\n\r\n        int selectedTab = getIntent().getIntExtra(\"selectedTab\", 0); // 0 là giá trị mặc định\r\n        if (selectedTab >= 0 && selectedTab < fragments.size()) {\r\n            viewPager.setCurrentItem(selectedTab, true); // Thiết lập tab được chọn\r\n        }\r\n\r\n        btn_back.setOnClickListener(v -> onBackPressed());\r\n    }\r\n\r\n    private int location (String status)\r\n    {\r\n        switch (status){\r\n            case \"pending\": return 0;\r\n            case \"approved\": return 1;\r\n            case \"delivery\": return 2;\r\n            case \"refund\": return 3;\r\n            case \"delivered\": return 4;\r\n            case \"canceled\" : return 5;\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java b/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java
---- a/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java	(revision ba936340bbdac641ba150d1b6cdedfa85d9a87db)
-+++ b/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java	(date 1733215981834)
-@@ -70,7 +70,7 @@
-         // Tạo danh sách Fragment và trạng thái
-         fragments = new ArrayList<>();
-         List<String> titles = Arrays.asList("Chờ xác nhận", "Chờ lấy hàng", "Chờ giao hàng", "Trả hàng" ,"Đã giao", "Đã hủy");
--        List<String> statuses = Arrays.asList("pending", "approved", "delivery", "refund" ,"delivered", "canceled");
-+        List<String> statuses = Arrays.asList("pending", "approved", "delivering", "return" ,"delivered", "canceled");
- 
-         for (String status : statuses) {
-             fragments.add(new OrderStatusFragment(status)); // Thêm các fragment vào danh sách
Index: .idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_12_3_2024_9_06_PM_[Changes]/shelved.patch	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ /dev/null	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
@@ -1,656 +0,0 @@
-Index: app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.adapter;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.bumptech.glide.Glide;\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.data.model.Notification;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class NotificationAdapter extends RecyclerView.Adapter<NotificationAdapter.ViewHolder> {\r\n    private List<Notification> notificationList;\r\n\r\n    public NotificationAdapter(List<Notification> notificationList) {\r\n        this.notificationList = notificationList;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item_notification, parent, false);\r\n        return new ViewHolder(view);\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\r\n        Notification notification = notificationList.get(position);\r\n        holder.title.setText(notification.getTitle());\r\n        holder.message.setText(notification.getMessage());\r\n\r\n        SimpleDateFormat sdf = new SimpleDateFormat(\"dd/MM/yyyy HH:mm\", Locale.getDefault());\r\n        String formattedDate = sdf.format(new Date(notification.getTimestamp()));\r\n        holder.time.setText(formattedDate);\r\n\r\n        Glide.with(holder.itemView.getContext())\r\n                .load(notification.getImageUrl())\r\n                .placeholder(R.drawable.placeholder_image)\r\n                .error(R.drawable.logo_icon)\r\n                .into(holder.notificationImage);\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return notificationList.size();\r\n    }\r\n\r\n    public static class ViewHolder extends RecyclerView.ViewHolder {\r\n        TextView title, message, time;\r\n        ImageView notificationImage;\r\n\r\n        public ViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            title = itemView.findViewById(R.id.notification_title);\r\n            message = itemView.findViewById(R.id.notification_message);\r\n            time = itemView.findViewById(R.id.notification_time);\r\n            notificationImage = itemView.findViewById(R.id.notification_image);\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java b/app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java
---- a/app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/java/com/example/agrimart/adapter/NotificationAdapter.java	(date 1733232087416)
-@@ -1,5 +1,7 @@
- package com.example.agrimart.adapter;
- 
-+import android.content.Context;
-+import android.content.Intent;
- import android.view.LayoutInflater;
- import android.view.View;
- import android.view.ViewGroup;
-@@ -12,6 +14,7 @@
- import com.bumptech.glide.Glide;
- import com.example.agrimart.R;
- import com.example.agrimart.data.model.Notification;
-+import com.example.agrimart.ui.MyProfile.PurchasedOrders.OrderInformationActivity;
- 
- import java.text.SimpleDateFormat;
- import java.util.Date;
-@@ -47,6 +50,30 @@
-                 .placeholder(R.drawable.placeholder_image)
-                 .error(R.drawable.logo_icon)
-                 .into(holder.notificationImage);
-+
-+        holder.itemView.setOnClickListener(v -> {
-+            Context context = v.getContext();
-+            Intent intent = new Intent(context, OrderInformationActivity.class);
-+
-+            String message = notification.getMessage();
-+            String status = "";
-+            if (message.contains("chờ người bán xác nhận")) {
-+                status = "pending";
-+            } else if (message.contains("đang được đóng gói")) {
-+                status = "approved";
-+            } else if (message.contains("trong quá trình vận chuyển")) {
-+                status = "delivering";
-+            } else if (message.contains("đã được giao thành công")) {
-+                status = "delivered";
-+            } else if (message.contains("đã bị huỷ")) {
-+                status = "canceled";
-+            } else if (message.contains("trả hàng")) {
-+                status = "return";
-+            }
-+
-+            intent.putExtra("status", status);
-+            context.startActivity(intent);
-+        });
-     }
- 
-     @Override
-Index: app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.ui.Cart;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.Window;\r\nimport android.view.WindowManager;\r\nimport android.widget.Button;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.RadioButton;\r\nimport android.widget.RadioGroup;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.adapter.CheckoutAdapter;\r\nimport com.example.agrimart.data.model.Product;\r\nimport com.example.agrimart.ui.MyProfile.MyAddress.MyAddressActivity;\r\nimport com.example.agrimart.ui.Payment.VNPaymentActivity;\r\nimport com.example.agrimart.viewmodel.CheckoutViewModel;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.text.NumberFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\nimport java.util.Map;\r\nimport java.util.stream.Collectors;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.widget.Toast;\r\n\r\npublic class CheckoutActivity extends AppCompatActivity {\r\n    private Toolbar toolbar;\r\n    private RecyclerView rvProduct;\r\n    private CheckoutAdapter checkoutAdapter;\r\n    private List<Product> selectedProducts;\r\n    private TextView tvTotalProductPrice, tvTotalShippingPrice, tvFinalTotalPrice, tvTotalPrice;\r\n    private TextView tvUserName, tvPhoneNumber, tvAddress, tvChangeAddress;\r\n    private Button btnPlaceOrder;\r\n    private RadioGroup paymentMethodGroup;\r\n    private RadioButton radVNPay, radCOD;\r\n    private LinearLayout linearLayout;\r\n    private CheckoutViewModel checkoutViewModel;\r\n    private String orderId;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_checkout);\r\n\r\n        setupWindowInsets();\r\n        setupToolbar();\r\n        initializeViews();\r\n        setupRecyclerView();\r\n        setupViewModel();\r\n        setupListeners();\r\n        updatePrices();\r\n        calculateShippingFee();\r\n        createOrderWithGHN();\r\n    }\r\n\r\n    private void setupWindowInsets() {\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main1), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.LOLLIPOP) {\r\n            Window window = getWindow();\r\n            window.addFlags(WindowManager.LayoutParams.FLAG_DRAWS_SYSTEM_BAR_BACKGROUNDS);\r\n            window.setStatusBarColor(ContextCompat.getColor(this, R.color.green));\r\n        }\r\n    }\r\n\r\n    private void setupToolbar() {\r\n        toolbar = findViewById(R.id.header);\r\n        toolbar.setNavigationOnClickListener(v -> finish());\r\n    }\r\n\r\n    private void initializeViews() {\r\n        selectedProducts = getIntent().getParcelableArrayListExtra(\"selectedProducts\");\r\n        if (selectedProducts == null) {\r\n            selectedProducts = new ArrayList<>();\r\n        }\r\n\r\n        rvProduct = findViewById(R.id.rv_product);\r\n        tvTotalProductPrice = findViewById(R.id.tvTotalProductPrice);\r\n        tvTotalShippingPrice = findViewById(R.id.tvTotalShippingPrice);\r\n        tvFinalTotalPrice = findViewById(R.id.tvFinalTotalPrice);\r\n        tvTotalPrice = findViewById(R.id.tvTotalPrice);\r\n        tvUserName = findViewById(R.id.tvUserName1);\r\n        tvPhoneNumber = findViewById(R.id.tvPhoneNumber1);\r\n        tvAddress = findViewById(R.id.tvAddress1);\r\n        tvChangeAddress = findViewById(R.id.tvChangeAddress);\r\n        paymentMethodGroup = findViewById(R.id.radGroupPayment);\r\n        radVNPay = findViewById(R.id.radVNPay);\r\n        radCOD = findViewById(R.id.radCOD);\r\n        btnPlaceOrder = findViewById(R.id.btnPlaceOrder);\r\n        linearLayout = findViewById(R.id.lnGHN);\r\n    }\r\n\r\n    private void setupRecyclerView() {\r\n        rvProduct.setLayoutManager(new LinearLayoutManager(this));\r\n        checkoutAdapter = new CheckoutAdapter(selectedProducts);\r\n        rvProduct.setAdapter(checkoutAdapter);\r\n    }\r\n\r\n    private void setupViewModel() {\r\n        checkoutViewModel = new ViewModelProvider(this).get(CheckoutViewModel.class);\r\n        checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n        orderId = checkoutViewModel.generateOrderId();\r\n    }\r\n\r\n    private void setupListeners() {\r\n        tvChangeAddress.setOnClickListener(v -> {\r\n            Intent intent = new Intent(CheckoutActivity.this, MyAddressActivity.class);\r\n            startActivity(intent);\r\n        });\r\n\r\n        paymentMethodGroup.setOnCheckedChangeListener((group, checkId) -> {\r\n            if (checkId == R.id.radVNPay) {\r\n                radCOD.setChecked(false);\r\n            } else if (checkId == R.id.radCOD) {\r\n                radVNPay.setChecked(false);\r\n            }\r\n        });\r\n\r\n        btnPlaceOrder.setOnClickListener(v -> placeOrder());\r\n    }\r\n\r\n    private void calculateShippingFee() {\r\n        checkoutViewModel.createOrder(tvAddress.getText().toString(), selectedProducts.get(0).getStoreId());\r\n        checkoutViewModel.shippingFee.observe(this, shippingFee -> {\r\n            tvTotalShippingPrice.setText(shippingFee + \" đ\");\r\n\r\n            int price = Integer.parseInt(tvTotalProductPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n            int totalPrice = price + Integer.parseInt(String.valueOf(shippingFee));\r\n            tvTotalPrice.setText(totalPrice + \" đ\");\r\n            checkoutViewModel.updateStatusOrder(orderId, shippingFee);\r\n        });\r\n    }\r\n\r\n    private void placeOrder() {\r\n        String address = tvAddress.getText().toString();\r\n        String storeId = selectedProducts.get(0).getStoreId();\r\n        String username = tvUserName.getText().toString();\r\n        String phonenumber = tvPhoneNumber.getText().toString();\r\n\r\n        if (radVNPay.isChecked()) {\r\n            handleVNPayPayment(address, storeId, username, phonenumber);\r\n        } else if (radCOD.isChecked()) {\r\n            handleCODPayment(address, storeId, username, phonenumber);\r\n        } else {\r\n            showPaymentMethodDialog();\r\n        }\r\n    }\r\n\r\n    private void handleVNPayPayment(String address, String storeId, String username, String phonenumber) {\r\n        int price = Integer.parseInt(tvTotalPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n        String orderInfo = \"Thanh toán đơn hàng \" + orderId;\r\n        List<String> productIds = selectedProducts.stream()\r\n                .map(Product::getProduct_id)\r\n                .collect(Collectors.toList());\r\n        Intent intent = new Intent(CheckoutActivity.this, VNPaymentActivity.class);\r\n        intent.putExtra(\"price\", price);\r\n        intent.putExtra(\"orderInfo\", orderInfo);\r\n        intent.putStringArrayListExtra(\"productIds\", new ArrayList<>(productIds));\r\n        intent.putExtra(\"address\", address);\r\n        intent.putExtra(\"storeId\", storeId);\r\n        intent.putExtra(\"username\", username);\r\n        intent.putExtra(\"phonenumber\", phonenumber);\r\n        intent.putParcelableArrayListExtra(\"products\", new ArrayList<>(selectedProducts));\r\n\r\n        int shippingFee = Integer.parseInt(tvTotalShippingPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n        checkoutViewModel.updateStatusOrder(orderId, shippingFee);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void handleCODPayment(String address, String storeId, String username, String phonenumber) {\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"Xác nhận đặt hàng\")\r\n                .setMessage(\"Bạn có chắc chắn muốn đặt hàng?\")\r\n                .setPositiveButton(\"Đặt hàng\", (dialog, which) -> {\r\n                    double totalPrice = Double.parseDouble(tvTotalPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n                    String expectedDeliveryTime = \"3-5 ngày\";\r\n                    double shippingFee = 0;\r\n                    String paymentMethod = \"COD\";\r\n                    String shippingName = \"Giao hàng nhanh\";\r\n                    List<String> productIds = selectedProducts.stream()\r\n                            .map(Product::getProduct_id)\r\n                            .collect(Collectors.toList());\r\n                    checkoutViewModel.placeOrder(totalPrice, expectedDeliveryTime, shippingFee, paymentMethod, shippingName, productIds, address, storeId, selectedProducts, username, phonenumber, new CheckoutViewModel.OrderCallback() {\r\n                        @Override\r\n                        public void onSuccess(String orderId) {\r\n                            checkoutViewModel.removeOrderedProductsFromCart(FirebaseAuth.getInstance().getCurrentUser().getUid(), new CheckoutViewModel.OrderCallback() {\r\n                                @Override\r\n                                public void onSuccess(String orderId) {\r\n                                    Intent intent = new Intent(CheckoutActivity.this, PlaceOrderActivity.class);\r\n                                    intent.putExtra(\"orderId\", orderId);\r\n                                    checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n\r\n                                    int shippingFee = Integer.parseInt(tvTotalShippingPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n                                    checkoutViewModel.updateStatusOrder(orderId, shippingFee);\r\n\r\n                                    startActivity(intent);\r\n                                }\r\n\r\n                                @Override\r\n                                public void onFailure(Exception e) {\r\n                                    Toast.makeText(CheckoutActivity.this, \"Đặt hàng thất bại\", Toast.LENGTH_SHORT).show();\r\n                                }\r\n                            }, orderId);\r\n                        }\r\n\r\n                        @Override\r\n                        public void onFailure(Exception e) {\r\n                            Toast.makeText(CheckoutActivity.this, \"Đặt hàng thất bại\", Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    });\r\n                })\r\n                .setNegativeButton(\"Hủy\", (dialog, which) -> {\r\n                })\r\n                .show();\r\n    }\r\n\r\n    private void showPaymentMethodDialog() {\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"Chọn phương thức thanh toán\")\r\n                .setMessage(\"Vui lòng chọn phương thức thanh toán\")\r\n                .setPositiveButton(\"OK\", (dialog, which) -> {\r\n                })\r\n                .show();\r\n    }\r\n\r\n    private void showNoAddressDialog() {\r\n        new AlertDialog.Builder(this)\r\n                .setTitle(\"Không có địa chỉ nhận hàng\")\r\n                .setMessage(\"Vui lòng thêm địa chỉ nhận hàng\")\r\n                .setPositiveButton(\"Thêm địa chỉ\", (dialog, which) -> {\r\n                    Intent intent = new Intent(CheckoutActivity.this, MyAddressActivity.class);\r\n                    startActivity(intent);\r\n                })\r\n                .setNegativeButton(\"Thoát\", (dialog, which) -> finish())\r\n                .show();\r\n    }\r\n\r\n    private void updatePrices() {\r\n        double totalProductPrice = 0;\r\n        for (Product product : selectedProducts) {\r\n            totalProductPrice += product.getPrice() * product.getQuantity();\r\n        }\r\n\r\n        double totalShippingPrice = 0;\r\n        double finalTotalPrice = totalProductPrice + totalShippingPrice;\r\n\r\n        NumberFormat format = NumberFormat.getCurrencyInstance(new Locale(\"vi\", \"VN\"));\r\n        tvTotalProductPrice.setText(format.format(totalProductPrice));\r\n        tvTotalShippingPrice.setText(format.format(totalShippingPrice));\r\n        tvFinalTotalPrice.setText(format.format(finalTotalPrice));\r\n        tvTotalPrice.setText(format.format(finalTotalPrice));\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == 1 && resultCode == RESULT_OK) {\r\n            checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onResume() {\r\n        super.onResume();\r\n        checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);\r\n        checkoutViewModel.isUserDataAvailable(isAvailable -> {\r\n            if (!isAvailable) {\r\n                showNoAddressDialog();\r\n            }\r\n        });\r\n    }\r\n    private void createOrderWithGHN() {\r\n        FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        db.collection(\"users\").document(user.getUid())\r\n                .get()\r\n                .addOnSuccessListener(documentSnapshot -> {\r\n                    List<Map<String, Object>> addresses = (List<Map<String, Object>>) documentSnapshot.get(\"addresses\");\r\n\r\n                    if (addresses != null && !addresses.isEmpty()) {\r\n                        Map<String, Object> address = addresses.get(0);\r\n\r\n                        String province = (String) address.get(\"province\");\r\n                        String district = (String) address.get(\"district\");\r\n                        String commune = (String) address.get(\"commune\");\r\n                        String street = (String) address.get(\"street\");\r\n\r\n                        String address5 = street + \", \" + commune + \", \" + district + \", \" + province;\r\n                        checkoutViewModel.createOrder(address5, selectedProducts.get(0).getStoreId());\r\n                        checkoutViewModel.shippingFee.observe(CheckoutActivity.this, shippingFee -> {\r\n\r\n\r\n                            int price = Integer.parseInt(tvTotalProductPrice.getText().toString().replaceAll(\"[^0-9]\", \"\"));\r\n                            int totalPrice = price + Integer.parseInt(String.valueOf(shippingFee));\r\n\r\n\r\n                            NumberFormat format = NumberFormat.getCurrencyInstance(new Locale(\"vi\", \"VN\"));\r\n\r\n                            tvTotalShippingPrice.setText(format.format(shippingFee));\r\n\r\n                            String totalPriceString = format.format(totalPrice);\r\n                            tvFinalTotalPrice.setText(totalPriceString);\r\n                            tvTotalPrice.setText(totalPriceString);\r\n\r\n                        });\r\n                    }\r\n                });\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java b/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java
---- a/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/java/com/example/agrimart/ui/Cart/CheckoutActivity.java	(date 1733234739848)
-@@ -2,6 +2,7 @@
- 
- import android.content.Intent;
- import android.os.Bundle;
-+import android.util.Log;
- import android.view.Window;
- import android.view.WindowManager;
- import android.widget.Button;
-@@ -139,7 +140,9 @@
-             }
-         });
- 
--        btnPlaceOrder.setOnClickListener(v -> placeOrder());
-+        btnPlaceOrder.setOnClickListener(v -> placeOrder()
-+
-+        );
-     }
- 
-     private void calculateShippingFee() {
-@@ -206,9 +209,11 @@
-                     checkoutViewModel.placeOrder(totalPrice, expectedDeliveryTime, shippingFee, paymentMethod, shippingName, productIds, address, storeId, selectedProducts, username, phonenumber, new CheckoutViewModel.OrderCallback() {
-                         @Override
-                         public void onSuccess(String orderId) {
-+                            Log.d("CheckoutActivity", "Order placed successfully: " + orderId);
-                             checkoutViewModel.removeOrderedProductsFromCart(FirebaseAuth.getInstance().getCurrentUser().getUid(), new CheckoutViewModel.OrderCallback() {
-                                 @Override
-                                 public void onSuccess(String orderId) {
-+                                    Log.d("CheckoutActivity", "Products removed from cart successfully: " + orderId);
-                                     Intent intent = new Intent(CheckoutActivity.this, PlaceOrderActivity.class);
-                                     intent.putExtra("orderId", orderId);
-                                     checkoutViewModel.loadUserData(tvUserName, tvPhoneNumber, tvAddress);
-@@ -221,6 +226,7 @@
- 
-                                 @Override
-                                 public void onFailure(Exception e) {
-+                                    Log.e("CheckoutActivity", "Failed to remove products from cart", e);
-                                     Toast.makeText(CheckoutActivity.this, "Đặt hàng thất bại", Toast.LENGTH_SHORT).show();
-                                 }
-                             }, orderId);
-@@ -228,6 +234,7 @@
- 
-                         @Override
-                         public void onFailure(Exception e) {
-+                            Log.e("CheckoutActivity", "Failed to place order", e);
-                             Toast.makeText(CheckoutActivity.this, "Đặt hàng thất bại", Toast.LENGTH_SHORT).show();
-                         }
-                     });
-Index: app/src/main/res/layout/fragment_notification.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout\r\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:id=\"@+id/main1\"\r\n    android:background=\"@color/white\"\r\n    tools:context=\".ui.Notification.NotificationFragment\">\r\n\r\n    <RelativeLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"50dp\"\r\n        android:id=\"@+id/header\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        android:layout_alignParentTop=\"true\"\r\n        android:background=\"@color/green\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/tvTitle\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_centerInParent=\"true\"\r\n            android:text=\"@string/thong_bao\"\r\n            android:textSize=\"20sp\"\r\n            android:textStyle=\"bold\"\r\n            android:textColor=\"@color/black\"/>\r\n    </RelativeLayout>\r\n\r\n    <androidx.recyclerview.widget.RecyclerView\r\n        android:id=\"@+id/recycler_notifications\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"0dp\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/header\"\r\n        app:layout_constraintBottom_toBottomOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        android:dividerHeight=\"1dp\"\r\n        android:padding=\"8dp\" />\r\n</androidx.constraintlayout.widget.ConstraintLayout>\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/fragment_notification.xml b/app/src/main/res/layout/fragment_notification.xml
---- a/app/src/main/res/layout/fragment_notification.xml	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/res/layout/fragment_notification.xml	(date 1733233366603)
-@@ -18,14 +18,21 @@
-         android:background="@color/green">
- 
-         <TextView
--            android:id="@+id/tvTitle"
--            android:layout_width="wrap_content"
--            android:layout_height="wrap_content"
--            android:layout_centerInParent="true"
--            android:text="@string/thong_bao"
--            android:textSize="20sp"
-+            android:id="@+id/tv_title"
-+            android:layout_width="126dp"
-+            android:layout_height="40dp"
-+            android:layout_gravity="center"
-+            android:layout_marginStart="145dp"
-+            android:layout_marginTop="16dp"
-+            android:layout_marginEnd="140dp"
-+            android:layout_marginBottom="8dp"
-+            android:gravity="center"
-+            android:text="THÔNG BÁO"
-+            android:textSize="18sp"
-             android:textStyle="bold"
--            android:textColor="@color/black"/>
-+            app:layout_constraintEnd_toEndOf="parent"
-+            app:layout_constraintStart_toStartOf="parent"
-+            app:layout_constraintTop_toTopOf="parent" />
-     </RelativeLayout>
- 
-     <androidx.recyclerview.widget.RecyclerView
-@@ -38,4 +45,12 @@
-         app:layout_constraintEnd_toEndOf="parent"
-         android:dividerHeight="1dp"
-         android:padding="8dp" />
-+
-+    <ImageView
-+        android:id="@+id/ivEmpty"
-+        android:layout_width="match_parent"
-+        android:layout_height="wrap_content"
-+        android:src="@drawable/noti_empty"
-+        app:layout_constraintTop_toBottomOf="@id/header"
-+        tools:layout_editor_absoluteX="0dp" />
- </androidx.constraintlayout.widget.ConstraintLayout>
-Index: app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.ui.Notification;\r\n\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.lifecycle.ViewModelProvider;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.adapter.NotificationAdapter;\r\nimport com.example.agrimart.data.model.Notification;\r\nimport com.example.agrimart.viewmodel.NotificationViewModel;\r\nimport java.util.List;\r\n\r\npublic class NotificationFragment extends Fragment {\r\n    private static final String ARG_USER_ID = \"userId\";\r\n    private static final String TAG = \"NotificationFragment\";\r\n    private RecyclerView recyclerView;\r\n    private NotificationAdapter adapter;\r\n    private NotificationViewModel notificationViewModel;\r\n    private String userId;\r\n\r\n    public NotificationFragment() {\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_notification, container, false);\r\n\r\n        if (getArguments() != null) {\r\n            userId = getArguments().getString(\"userId\");\r\n        } else {\r\n            Log.e(TAG, \"Không tìm thấy userId\");\r\n        }\r\n\r\n        recyclerView = view.findViewById(R.id.recycler_notifications);\r\n        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));\r\n\r\n        notificationViewModel = new ViewModelProvider(this).get(NotificationViewModel.class);\r\n        notificationViewModel.getNotifications(userId);\r\n        notificationViewModel.getNotificationsLiveData().observe(getViewLifecycleOwner(), notifications -> {\r\n            adapter = new NotificationAdapter(notifications);\r\n            recyclerView.setAdapter(adapter);\r\n        });\r\n\r\n        return view;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java b/app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java
---- a/app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/java/com/example/agrimart/ui/Notification/NotificationFragment.java	(date 1733233186474)
-@@ -2,15 +2,16 @@
- 
- import android.os.Bundle;
- import android.util.Log;
-+import android.view.LayoutInflater;
-+import android.view.View;
-+import android.view.ViewGroup;
-+import android.widget.ImageView;
- import androidx.annotation.NonNull;
- import androidx.annotation.Nullable;
- import androidx.fragment.app.Fragment;
- import androidx.lifecycle.ViewModelProvider;
- import androidx.recyclerview.widget.LinearLayoutManager;
- import androidx.recyclerview.widget.RecyclerView;
--import android.view.LayoutInflater;
--import android.view.View;
--import android.view.ViewGroup;
- import com.example.agrimart.R;
- import com.example.agrimart.adapter.NotificationAdapter;
- import com.example.agrimart.data.model.Notification;
-@@ -24,6 +25,7 @@
-     private NotificationAdapter adapter;
-     private NotificationViewModel notificationViewModel;
-     private String userId;
-+    private ImageView ivEmpty;
- 
-     public NotificationFragment() {
-     }
-@@ -40,12 +42,20 @@
- 
-         recyclerView = view.findViewById(R.id.recycler_notifications);
-         recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));
-+        ivEmpty = view.findViewById(R.id.ivEmpty);
- 
-         notificationViewModel = new ViewModelProvider(this).get(NotificationViewModel.class);
-         notificationViewModel.getNotifications(userId);
-         notificationViewModel.getNotificationsLiveData().observe(getViewLifecycleOwner(), notifications -> {
--            adapter = new NotificationAdapter(notifications);
--            recyclerView.setAdapter(adapter);
-+            if (notifications == null || notifications.isEmpty()) {
-+                ivEmpty.setVisibility(View.VISIBLE);
-+                recyclerView.setVisibility(View.GONE);
-+            } else {
-+                ivEmpty.setVisibility(View.GONE);
-+                recyclerView.setVisibility(View.VISIBLE);
-+                adapter = new NotificationAdapter(notifications);
-+                recyclerView.setAdapter(adapter);
-+            }
-         });
- 
-         return view;
-Index: app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.viewmodel;\r\n\r\nimport android.Manifest;\r\nimport android.app.Application;\r\nimport android.content.pm.PackageManager;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.app.NotificationManagerCompat;\r\nimport androidx.lifecycle.AndroidViewModel;\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.lifecycle.MutableLiveData;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.data.model.Notification;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentChange;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class NotificationViewModel extends AndroidViewModel {\r\n    private static final String TAG = \"NotificationViewModel\";\r\n    private final MutableLiveData<List<Notification>> notificationsLiveData = new MutableLiveData<>();\r\n    private final FirebaseFirestore firestore = FirebaseFirestore.getInstance();\r\n    private static final int REQUEST_NOTIFICATION_PERMISSION = 1;\r\n\r\n    public NotificationViewModel(@NonNull Application application) {\r\n        super(application);\r\n    }\r\n\r\n    public void createNotificationsForUser() {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n        db.collection(\"orders\")\r\n                .whereEqualTo(\"userId\", FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addSnapshotListener((snapshots, e) -> {\r\n                    if (e != null) {\r\n                        Log.e(\"FirebaseError\", \"Error listening to orders\", e);\r\n                        return;\r\n                    }\r\n\r\n                    if (snapshots != null && !snapshots.isEmpty()) {\r\n                        for (DocumentChange dc : snapshots.getDocumentChanges()) {\r\n                            notificationForUser(dc, db);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void createNotificationsForSeller() {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        db.collection(\"orders\")\r\n                .whereEqualTo(\"storeId\", FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addSnapshotListener((snapshots, e) -> {\r\n                    if (e != null) {\r\n                        Log.e(\"FirebaseError\", \"Error listening to orders\", e);\r\n                        return;\r\n                    }\r\n\r\n                    if (snapshots != null && !snapshots.isEmpty()) {\r\n                        for (DocumentChange dc : snapshots.getDocumentChanges()) {\r\n                            notificationForSeller(dc, db);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void notificationForUser(DocumentChange dc, FirebaseFirestore db) {\r\n        String status = dc.getDocument().getString(\"status\");\r\n        List<String> notifiedStatuses = (List<String>) dc.getDocument().get(\"notifiedStatuses\");\r\n        String imageUrl = \"android.resource://\" + getApplication().getPackageName() + \"/\" + R.drawable.bell;\r\n        long timestamp = System.currentTimeMillis();\r\n\r\n        String title = \"\";\r\n        String message = \"\";\r\n\r\n        if (notifiedStatuses != null && notifiedStatuses.contains(status)) {\r\n            return;\r\n        }\r\n\r\n        switch (status) {\r\n            case \"pending\":\r\n                title = \"Đặt hàng thành công!\";\r\n                message = \"Đơn hàng của bạn đang chờ người bán xác nhận.\";\r\n                break;\r\n            case \"approved\":\r\n                title = \"Người bán đang chuẩn bị hàng\";\r\n                message = \"Đơn hàng của bạn đang được đóng gói và sẽ sớm giao cho đơn vị vận chuyển.\";\r\n                break;\r\n            case \"delivering\":\r\n                title = \"Đơn hàng đang trong quá trình vận chuyển\";\r\n                message = \"Đơn hàng của bạn hiện đang trong quá trình vận chuyển.\";\r\n                break;\r\n            case \"delivered\":\r\n                title = \"Đơn hàng đã được giao thành công\";\r\n                message = \"Bạn có hài lòng với sản phẩm đã nhận?\";\r\n                break;\r\n            case \"canceled\":\r\n                title = \"Đơn hàng đã bị huỷ\";\r\n                message = \"Đơn hàng của bạn đã bị huỷ. Nếu bạn đã thanh toán bằng VNPAY số tiền đã thanh toán sẽ sớm được hoàn lại vào tài khoản của bạn.\";\r\n                break;\r\n            case \"return\":\r\n                title = \"Yêu cầu trả hàng đã được chấp nhận\";\r\n                message = \"Yêu cầu trả hàng của bạn đã được chấp nhận. Vui lòng chờ trong thời gian sớm nhất.\";\r\n                break;\r\n        }\r\n\r\n        if (!title.isEmpty() && !message.isEmpty()) {\r\n            Notification notification = new Notification(title, message, timestamp, imageUrl);\r\n            sendNotification(title, message);\r\n            saveNotificationToFirestore(notification);\r\n\r\n            db.collection(\"orders\").document(dc.getDocument().getId())\r\n                    .update(\"notifiedStatuses\", FieldValue.arrayUnion(status))\r\n                    .addOnSuccessListener(aVoid -> Log.d(\"Firestore\", \"Updated notifiedStatuses\"))\r\n                    .addOnFailureListener(e -> Log.e(\"FirestoreError\", \"Error updating notifiedStatuses\", e));\r\n        }\r\n    }\r\n\r\n    private void notificationForSeller(DocumentChange dc, FirebaseFirestore db) {\r\n        String status = dc.getDocument().getString(\"status\");\r\n        List<String> notifiedStatuses = (List<String>) dc.getDocument().get(\"notifiedStatuses\");\r\n        String imageUrl = \"android.resource://\" + getApplication().getPackageName() + \"/\" + R.drawable.bell;\r\n        long timestamp = System.currentTimeMillis();\r\n\r\n        String title = \"\";\r\n        String message = \"\";\r\n\r\n        if (notifiedStatuses != null && notifiedStatuses.contains(status)) {\r\n            return;\r\n        }\r\n\r\n        switch (status) {\r\n            case \"pending\":\r\n                title = \"Có đơn hàng mới\";\r\n                message = \"Hãy xác nhận đơn hàng mới vừa được đặt\";\r\n                break;\r\n            case \"approved\":\r\n                title = \"Chuẩn bị hàng\";\r\n                message = \"Chuẩn bị đơn hàng để giao cho đơn vị vận chuyển\";\r\n                break;\r\n            case \"delivering\":\r\n                title = \"Đơn bán đang trong quá trình vận chuyển\";\r\n                message = \"Đơn bán hiện đang trong quá trình vận chuyển.\";\r\n                break;\r\n            case \"delivered\":\r\n                title = \"Đơn bán đã được giao thành công\";\r\n                message = \"Đơn bán đã được giao thành công cho khách hàng.\";\r\n                break;\r\n            case \"canceled\":\r\n                title = \"Đơn hàng đã bị huỷ\";\r\n                message = \"Đơn hàng đã bị huỷ.\";\r\n                break;\r\n            case \"return\":\r\n                title = \"Trả hàng\";\r\n                message = \"Khách hàng yêu cầu trả hàng.\";\r\n                break;\r\n        }\r\n\r\n        if (!title.isEmpty() && !message.isEmpty()) {\r\n            Notification notification = new Notification(title, message, timestamp, imageUrl);\r\n            sendNotification(title, message);\r\n            saveNotificationToFirestore(notification);\r\n\r\n            db.collection(\"orders\").document(dc.getDocument().getId())\r\n                    .update(\"notifiedStatuses\", FieldValue.arrayUnion(status))\r\n                    .addOnSuccessListener(aVoid -> Log.d(\"Firestore\", \"Updated notifiedStatuses\"))\r\n                    .addOnFailureListener(e -> Log.e(\"FirestoreError\", \"Error updating notifiedStatuses\", e));\r\n        }\r\n    }\r\n\r\n    public void sendNotification(String title, String message) {\r\n        NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplication(), \"default_channel\")\r\n                .setSmallIcon(R.drawable.logo_icon)\r\n                .setContentTitle(title)\r\n                .setContentText(message)\r\n                .setPriority(NotificationCompat.PRIORITY_DEFAULT)\r\n                .setAutoCancel(true);\r\n\r\n        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(getApplication());\r\n        if (ActivityCompat.checkSelfPermission(getApplication(), Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {\r\n            Log.e(\"NotificationViewModel\", \"Notification permission not granted\");\r\n            return;\r\n        }\r\n        notificationManager.notify((int) System.currentTimeMillis(), builder.build());\r\n    }\r\n\r\n    public void saveNotificationToFirestore(Notification notification) {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        FirebaseUser currentUser = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n        if (currentUser != null) {\r\n            notification.setUserId(currentUser.getUid());\r\n            db.collection(\"notifications\").add(notification)\r\n                    .addOnSuccessListener(documentReference -> {\r\n                        Log.d(\"Firestore\", \"Notification saved successfully\");\r\n                    })\r\n                    .addOnFailureListener(e -> {\r\n                        Log.e(\"FirestoreError\", \"Error saving notification\", e);\r\n                    });\r\n        }\r\n    }\r\n\r\n    public void getNotifications(String userId) {\r\n        Log.d(TAG, \"Fetching notifications for user ID: \" + userId);\r\n        firestore.collection(\"notifications\")\r\n                .whereEqualTo(\"userId\", userId)\r\n                .orderBy(\"timestamp\", Query.Direction.DESCENDING)\r\n                .get()\r\n                .addOnCompleteListener(task -> {\r\n                    if (task.isSuccessful() && task.getResult() != null) {\r\n                        List<Notification> notifications = new ArrayList<>();\r\n                        for (QueryDocumentSnapshot doc : task.getResult()) {\r\n                            Notification notification = doc.toObject(Notification.class);\r\n                            notifications.add(notification);\r\n                        }\r\n                        Log.d(TAG, \"Fetched \" + notifications.size() + \" notifications\");\r\n                        notificationsLiveData.setValue(notifications);\r\n                    } else {\r\n                        Log.e(TAG, \"Error fetching notifications\", task.getException());\r\n                    }\r\n                });\r\n    }\r\n\r\n    public LiveData<List<Notification>> getNotificationsLiveData() {\r\n        return notificationsLiveData;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java b/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java
---- a/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java	(date 1733233936496)
-@@ -78,6 +78,7 @@
-         List<String> notifiedStatuses = (List<String>) dc.getDocument().get("notifiedStatuses");
-         String imageUrl = "android.resource://" + getApplication().getPackageName() + "/" + R.drawable.bell;
-         long timestamp = System.currentTimeMillis();
-+        String orderId = dc.getDocument().getId();
- 
-         String title = "";
-         String message = "";
-@@ -89,32 +90,32 @@
-         switch (status) {
-             case "pending":
-                 title = "Đặt hàng thành công!";
--                message = "Đơn hàng của bạn đang chờ người bán xác nhận.";
-+                message = "Đơn hàng " + orderId + " đang chờ người bán xác nhận.";
-                 break;
-             case "approved":
-                 title = "Người bán đang chuẩn bị hàng";
--                message = "Đơn hàng của bạn đang được đóng gói và sẽ sớm giao cho đơn vị vận chuyển.";
-+                message = "Đơn hàng " + orderId + " đang được đóng gói và sẽ sớm giao cho đơn vị vận chuyển.";
-                 break;
-             case "delivering":
-                 title = "Đơn hàng đang trong quá trình vận chuyển";
--                message = "Đơn hàng của bạn hiện đang trong quá trình vận chuyển.";
-+                message = "Đơn hàng " + orderId + " hiện đang trong quá trình vận chuyển.";
-                 break;
-             case "delivered":
-                 title = "Đơn hàng đã được giao thành công";
--                message = "Bạn có hài lòng với sản phẩm đã nhận?";
-+                message = "Đơn hàng " + orderId + " đã được giao thành công. Bạn có hài lòng với sản phẩm đã nhận?";
-                 break;
-             case "canceled":
-                 title = "Đơn hàng đã bị huỷ";
--                message = "Đơn hàng của bạn đã bị huỷ. Nếu bạn đã thanh toán bằng VNPAY số tiền đã thanh toán sẽ sớm được hoàn lại vào tài khoản của bạn.";
-+                message = "Đơn hàng " + orderId + " đã bị huỷ. Nếu bạn đã thanh toán bằng VNPAY số tiền đã thanh toán sẽ sớm được hoàn lại vào tài khoản của bạn.";
-                 break;
-             case "return":
-                 title = "Yêu cầu trả hàng đã được chấp nhận";
--                message = "Yêu cầu trả hàng của bạn đã được chấp nhận. Vui lòng chờ trong thời gian sớm nhất.";
-+                message = "Yêu cầu trả hàng của đơn hàng " + orderId + " đã được chấp nhận. Vui lòng chờ trong thời gian sớm nhất.";
-                 break;
-         }
- 
-         if (!title.isEmpty() && !message.isEmpty()) {
--            Notification notification = new Notification(title, message, timestamp, imageUrl);
-+            Notification notification = new Notification(title, message, timestamp, imageUrl,"");
-             sendNotification(title, message);
-             saveNotificationToFirestore(notification);
- 
-@@ -130,6 +131,7 @@
-         List<String> notifiedStatuses = (List<String>) dc.getDocument().get("notifiedStatuses");
-         String imageUrl = "android.resource://" + getApplication().getPackageName() + "/" + R.drawable.bell;
-         long timestamp = System.currentTimeMillis();
-+        String orderId = dc.getDocument().getId();
- 
-         String title = "";
-         String message = "";
-@@ -141,32 +143,32 @@
-         switch (status) {
-             case "pending":
-                 title = "Có đơn hàng mới";
--                message = "Hãy xác nhận đơn hàng mới vừa được đặt";
-+                message = "Đơn hàng " + orderId + " mới vừa được đặt. Hãy xác nhận đơn hàng.";
-                 break;
-             case "approved":
-                 title = "Chuẩn bị hàng";
--                message = "Chuẩn bị đơn hàng để giao cho đơn vị vận chuyển";
-+                message = "Chuẩn bị đơn hàng " + orderId + " để giao cho đơn vị vận chuyển.";
-                 break;
-             case "delivering":
-                 title = "Đơn bán đang trong quá trình vận chuyển";
--                message = "Đơn bán hiện đang trong quá trình vận chuyển.";
-+                message = "Đơn bán " + orderId + " hiện đang trong quá trình vận chuyển.";
-                 break;
-             case "delivered":
-                 title = "Đơn bán đã được giao thành công";
--                message = "Đơn bán đã được giao thành công cho khách hàng.";
-+                message = "Đơn bán " + orderId + " đã được giao thành công cho khách hàng.";
-                 break;
-             case "canceled":
-                 title = "Đơn hàng đã bị huỷ";
--                message = "Đơn hàng đã bị huỷ.";
-+                message = "Đơn hàng " + orderId + " đã bị huỷ.";
-                 break;
-             case "return":
-                 title = "Trả hàng";
--                message = "Khách hàng yêu cầu trả hàng.";
-+                message = "Khách hàng yêu cầu trả hàng cho đơn hàng " + orderId + ".";
-                 break;
-         }
- 
-         if (!title.isEmpty() && !message.isEmpty()) {
--            Notification notification = new Notification(title, message, timestamp, imageUrl);
-+            Notification notification = new Notification(title, message, timestamp, imageUrl, "");
-             sendNotification(title, message);
-             saveNotificationToFirestore(notification);
- 
-Index: app/src/main/res/layout/activity_place_order.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/main\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".ui.Cart.PlaceOrderActivity\">\r\n\r\n    <androidx.appcompat.widget.Toolbar\r\n        android:id=\"@+id/toolbar\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:background=\"@color/transparent\"\r\n        app:titleTextColor=\"@color/black\"\r\n        app:titleTextAppearance=\"@style/TextAppearance.AppCompat.Large\"\r\n        app:navigationIcon=\"@drawable/ic_arrow_left\"\r\n        android:elevation=\"4dp\"\r\n        app:layout_constraintTop_toTopOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvOrderStatus\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"180dp\"\r\n        android:gravity=\"center\"\r\n        android:text=\"Đặt hàng thành công\"\r\n        android:textColor=\"@android:color/black\"\r\n        android:textSize=\"24sp\"\r\n        android:textStyle=\"bold\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/toolbar\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"240dp\"\r\n        android:gravity=\"center\"\r\n        android:orientation=\"horizontal\"\r\n        app:layout_constraintEnd_toEndOf=\"parent\"\r\n        app:layout_constraintHorizontal_bias=\"0.0\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toBottomOf=\"@id/tvOrderStatus\">\r\n\r\n        <Button\r\n            android:id=\"@+id/btnReturnToHome\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"40dp\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            android:layout_weight=\"1\"\r\n            android:backgroundTint=\"@color/green\"\r\n            app:cornerRadius=\"8dp\"\r\n            android:elevation=\"6dp\"\r\n            android:fontFamily=\"sans-serif-medium\"\r\n            android:shadowColor=\"#55000000\"\r\n            android:text=\"Trang chủ\"\r\n            android:textColor=\"@android:color/white\"\r\n            android:textSize=\"16sp\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/btnViewOrders\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginEnd=\"40dp\"\r\n            android:layout_weight=\"1\"\r\n            android:backgroundTint=\"@color/green\"\r\n            app:cornerRadius=\"8dp\"\r\n            android:elevation=\"6dp\"\r\n            android:fontFamily=\"sans-serif-medium\"\r\n            android:shadowColor=\"#55000000\"\r\n            android:text=\"Đơn mua\"\r\n            android:textColor=\"@android:color/white\"\r\n            android:textSize=\"16sp\" />\r\n    </LinearLayout>\r\n\r\n</androidx.constraintlayout.widget.ConstraintLayout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_place_order.xml b/app/src/main/res/layout/activity_place_order.xml
---- a/app/src/main/res/layout/activity_place_order.xml	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/res/layout/activity_place_order.xml	(date 1733234675679)
-@@ -24,7 +24,7 @@
-         android:id="@+id/tvOrderStatus"
-         android:layout_width="wrap_content"
-         android:layout_height="wrap_content"
--        android:layout_marginTop="180dp"
-+        android:layout_marginTop="140dp"
-         android:gravity="center"
-         android:text="Đặt hàng thành công"
-         android:textColor="@android:color/black"
-@@ -34,6 +34,16 @@
-         app:layout_constraintStart_toStartOf="parent"
-         app:layout_constraintTop_toBottomOf="@id/toolbar" />
- 
-+    <ImageView
-+        android:id="@+id/ivOrderStatus"
-+        android:layout_width="wrap_content"
-+        android:layout_height="100dp"
-+        android:layout_marginTop="16dp"
-+        android:src="@drawable/success"
-+        app:layout_constraintEnd_toEndOf="parent"
-+        app:layout_constraintStart_toStartOf="parent"
-+        app:layout_constraintTop_toBottomOf="@id/tvOrderStatus" />
-+
-     <LinearLayout
-         android:layout_width="match_parent"
-         android:layout_height="wrap_content"
-@@ -52,6 +62,7 @@
-             android:layout_marginStart="40dp"
-             android:layout_marginTop="16dp"
-             android:layout_marginEnd="16dp"
-+            android:layout_marginBottom="10dp"
-             android:layout_weight="1"
-             android:backgroundTint="@color/green"
-             app:cornerRadius="8dp"
-@@ -69,6 +80,7 @@
-             android:layout_marginStart="16dp"
-             android:layout_marginTop="16dp"
-             android:layout_marginEnd="40dp"
-+            android:layout_marginBottom="10dp"
-             android:layout_weight="1"
-             android:backgroundTint="@color/green"
-             app:cornerRadius="8dp"
-Index: .idea/deploymentTargetSelector.xml
-===================================================================
-diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
-deleted file mode 100644
---- a/.idea/deploymentTargetSelector.xml	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ /dev/null	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-@@ -1,10 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="deploymentTargetSelector">
--    <selectionStates>
--      <SelectionState runConfigName="app">
--        <option name="selectionMode" value="DROPDOWN" />
--      </SelectionState>
--    </selectionStates>
--  </component>
--</project>
-\ No newline at end of file
-Index: app/src/main/java/com/example/agrimart/data/model/Order.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.data.model;\r\n\r\nimport com.google.firebase.Timestamp;\r\nimport com.google.firebase.firestore.PropertyName;\r\n\r\nimport java.io.Serializable;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class Order implements Serializable {\r\n\r\n    @PropertyName(\"orderId\")\r\n    private String orderId;\r\n\r\n    @PropertyName(\"products\")\r\n    private List<Product> products;\r\n\r\n    @PropertyName(\"status\")\r\n    private String status;\r\n\r\n    @PropertyName(\"total_price\")\r\n    private int totalPrice;\r\n\r\n    @PropertyName(\"userId\")\r\n    private String userId;\r\n\r\n    @PropertyName(\"storeId\")\r\n    private String sellerId;\r\n\r\n    @PropertyName(\"order_code\")\r\n    private String orderCode;\r\n\r\n    @PropertyName(\"address\")\r\n    private String address;\r\n\r\n    @PropertyName(\"shipping_name\")\r\n    private String shippingName;\r\n\r\n    @PropertyName(\"shipping_fee\")\r\n    private Double shippingFee;\r\n\r\n    private String statusDelivery;\r\n\r\n    private String storeName;\r\n\r\n    private String paymentMethod;\r\n\r\n    private boolean checkRating;\r\n\r\n    private String username;\r\n\r\n    private String phonenumber;\r\n\r\n    @PropertyName(\"created_at\")\r\n    private Timestamp createdAt;\r\n\r\n    private String transactionId;\r\n\r\n    private Timestamp transactionDate;\r\n\r\n    @PropertyName(\"vnp_TxnRef\")\r\n    private String vnpTxnRef;\r\n\r\n    public Order() {\r\n    }\r\n\r\n    public Order(String orderId, String status, int totalPrice) {\r\n        this.orderId = orderId;\r\n        this.status = status;\r\n        this.totalPrice = totalPrice;\r\n    }\r\n\r\n    @PropertyName(\"orderId\")\r\n    public String getOrderId() {\r\n        return orderId;\r\n    }\r\n\r\n    @PropertyName(\"orderId\")\r\n    public void setOrderId(String orderId) {\r\n        this.orderId = orderId;\r\n    }\r\n\r\n    @PropertyName(\"status\")\r\n    public String getStatus() {\r\n        return status;\r\n    }\r\n\r\n    @PropertyName(\"status\")\r\n    public void setStatus(String status) {\r\n        this.status = status;\r\n    }\r\n\r\n    @PropertyName(\"total_price\")\r\n    public int getTotalPrice() {\r\n        return totalPrice;\r\n    }\r\n\r\n    @PropertyName(\"total_price\")\r\n    public void setTotalPrice(int totalPrice) {\r\n        this.totalPrice = totalPrice;\r\n    }\r\n\r\n    @PropertyName(\"userId\")\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    @PropertyName(\"userId\")\r\n    public void setUserId(String userId) {\r\n        this.userId = userId;\r\n    }\r\n\r\n    @PropertyName(\"order_code\")\r\n    public String getOrderCode() {\r\n        return orderCode;\r\n    }\r\n\r\n    @PropertyName(\"order_code\")\r\n    public void setOrderCode(String orderCode) {\r\n        this.orderCode = orderCode;\r\n    }\r\n\r\n    public String getStatusDelivery() {\r\n        return statusDelivery;\r\n    }\r\n\r\n    public void setStatusDelivery(String statusDelivery) {\r\n        this.statusDelivery = statusDelivery;\r\n    }\r\n\r\n    @PropertyName(\"address\")\r\n    public String getAddress() {\r\n        return address;\r\n    }\r\n\r\n    @PropertyName(\"address\")\r\n    public void setAddress(String address) {\r\n        this.address = address;\r\n    }\r\n\r\n    @PropertyName(\"storeId\")\r\n    public String getSellerId() {\r\n        return sellerId;\r\n    }\r\n\r\n    @PropertyName(\"storeId\")\r\n    public void setSellerId(String sellerId) {\r\n        this.sellerId = sellerId;\r\n    }\r\n\r\n    @PropertyName(\"products\")\r\n    public List<Product> getProducts() {\r\n        return products;\r\n    }\r\n\r\n    @PropertyName(\"products\")\r\n    public void setProducts(List<Product> products) {\r\n        this.products = products;\r\n    }\r\n\r\n    public String getStoreName() {\r\n        return storeName;\r\n    }\r\n\r\n    public void setStoreName(String storeName) {\r\n        this.storeName = storeName;\r\n    }\r\n\r\n    public String getPaymentMethod() {\r\n        return paymentMethod;\r\n    }\r\n\r\n    public void setPaymentMethod(String paymentMethod) {\r\n        this.paymentMethod = paymentMethod;\r\n    }\r\n\r\n    public boolean isCheckRating() {\r\n        return checkRating;\r\n    }\r\n\r\n    public void setCheckRating(boolean checkRating) {\r\n        this.checkRating = checkRating;\r\n    }\r\n\r\n    public String getUsername() {\r\n        return username;\r\n    }\r\n\r\n    public void setUsername(String username) {\r\n        this.username = username;\r\n    }\r\n\r\n    public String getPhonenumber() {\r\n        return phonenumber;\r\n    }\r\n\r\n    public void setPhonenumber(String phonenumber) {\r\n        this.phonenumber = phonenumber;\r\n    }\r\n\r\n    @PropertyName(\"shipping_name\")\r\n    public String getShippingName() {\r\n        return shippingName;\r\n    }\r\n\r\n    @PropertyName(\"shipping_name\")\r\n    public void setShippingName(String shippingName) {\r\n        this.shippingName = shippingName;\r\n    }\r\n\r\n    @PropertyName(\"shipping_fee\")\r\n    public Double getShippingFee() {\r\n        return shippingFee;\r\n    }\r\n\r\n    @PropertyName(\"shipping_fee\")\r\n    public void setShippingFee(Double shippingFee) {\r\n        this.shippingFee = shippingFee;\r\n    }\r\n\r\n    private long createdAtMillis;  // Chúng ta sẽ sử dụng long thay vì Timestamp để truyền qua Intent\r\n    // Getter và setter cho createdAtMillis\r\n    public long getCreatedAtMillis() {\r\n        return createdAtMillis;\r\n    }\r\n\r\n    @PropertyName(\"created_at\")\r\n    public void setCreatedAt(Timestamp createdAt) {\r\n        this.createdAtMillis = createdAt.toDate().getTime(); // Chuyển Timestamp thành long\r\n    }\r\n\r\n    @PropertyName(\"created_at\")\r\n    public Timestamp getCreatedAt() {\r\n        return createdAt;\r\n    }\r\n\r\n    private long transactionDateMillis;\r\n\r\n    public String getTransactionId() {\r\n        return transactionId;\r\n    }\r\n\r\n    public void setTransactionId(String transactionId) {\r\n        this.transactionId = transactionId;\r\n    }\r\n\r\n    public Timestamp getTransactionDate() {\r\n        return transactionDate;\r\n    }\r\n\r\n    public void setTransactionDate(Timestamp transactionDate) {\r\n        this.transactionDateMillis = transactionDate.toDate().getTime();\r\n    }\r\n\r\n    @PropertyName(\"vnp_TxnRef\")\r\n    public String getVnpTxnRef() {\r\n        return vnpTxnRef;\r\n    }\r\n\r\n    @PropertyName(\"vnp_TxnRef\")\r\n    public void setVnpTxnRef(String vnpTxnRef) {\r\n        this.vnpTxnRef = vnpTxnRef;\r\n    }\r\n\r\n    public String getFormattedCreatedAtDate() {\r\n        SimpleDateFormat dateFormat = new SimpleDateFormat(\"dd-MM-yyyy HH:mm\", Locale.getDefault());\r\n        Date date = new Date(createdAtMillis);\r\n        return dateFormat.format(date);\r\n    }\r\n\r\n    public long getTransactionDateMillis() {\r\n        return transactionDateMillis;\r\n    }\r\n\r\n    public void setTransactionDateMillis(long transactionDateMillis) {\r\n        this.transactionDateMillis = transactionDateMillis;\r\n        this.createdAtMillis = createdAt.toDate().getTime();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/data/model/Order.java b/app/src/main/java/com/example/agrimart/data/model/Order.java
---- a/app/src/main/java/com/example/agrimart/data/model/Order.java	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/java/com/example/agrimart/data/model/Order.java	(date 1733228100269)
-@@ -150,12 +150,10 @@
-         this.sellerId = sellerId;
-     }
- 
--    @PropertyName("products")
-     public List<Product> getProducts() {
-         return products;
-     }
- 
--    @PropertyName("products")
-     public void setProducts(List<Product> products) {
-         this.products = products;
-     }
-@@ -220,23 +218,15 @@
-         this.shippingFee = shippingFee;
-     }
- 
--    private long createdAtMillis;  // Chúng ta sẽ sử dụng long thay vì Timestamp để truyền qua Intent
--    // Getter và setter cho createdAtMillis
--    public long getCreatedAtMillis() {
--        return createdAtMillis;
--    }
--
--    @PropertyName("created_at")
--    public void setCreatedAt(Timestamp createdAt) {
--        this.createdAtMillis = createdAt.toDate().getTime(); // Chuyển Timestamp thành long
--    }
--
-     @PropertyName("created_at")
-     public Timestamp getCreatedAt() {
-         return createdAt;
-     }
- 
--    private long transactionDateMillis;
-+    @PropertyName("created_at")
-+    public void setCreatedAt(Timestamp createdAt) {
-+        this.createdAt = createdAt;
-+    }
- 
-     public String getTransactionId() {
-         return transactionId;
-@@ -251,7 +241,7 @@
-     }
- 
-     public void setTransactionDate(Timestamp transactionDate) {
--        this.transactionDateMillis = transactionDate.toDate().getTime();
-+        this.transactionDate = transactionDate;
-     }
- 
-     @PropertyName("vnp_TxnRef")
-@@ -266,16 +256,7 @@
- 
-     public String getFormattedCreatedAtDate() {
-         SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm", Locale.getDefault());
--        Date date = new Date(createdAtMillis);
-+        Date date = new Date(createdAt.toDate().getTime());
-         return dateFormat.format(date);
-     }
--
--    public long getTransactionDateMillis() {
--        return transactionDateMillis;
--    }
--
--    public void setTransactionDateMillis(long transactionDateMillis) {
--        this.transactionDateMillis = transactionDateMillis;
--        this.createdAtMillis = createdAt.toDate().getTime();
--    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.ui.Payment;\r\n\r\nimport com.example.agrimart.data.API.Config_VNPAY;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.InetAddress;\r\nimport java.net.URL;\r\nimport java.io.OutputStream;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.*;\r\nimport javax.crypto.Mac;\r\nimport javax.crypto.spec.SecretKeySpec;\r\nimport android.util.Log;\r\nimport org.json.JSONObject;\r\n\r\npublic class VnpayRefund {\r\n\r\n    public static String createRefundRequest(String txnRef, String transactionNo, int amount, String transactionDate, String orderInfo, String createBy) throws Exception {\r\n        String vnp_RequestId = UUID.randomUUID().toString();\r\n        String vnp_Version = Config_VNPAY.VNP_VERSION;\r\n        String vnp_Command = Config_VNPAY.VNP_COMMAND_REFUND;\r\n        String vnp_TmnCode = Config_VNPAY.VNP_TMNCODE;\r\n        String vnp_TransactionType = \"02\";\r\n        String vnp_CreateDate = new SimpleDateFormat(\"yyyyMMddHHmmss\").format(new Date());\r\n        String vnp_IpAddr = InetAddress.getLocalHost().getHostAddress();\r\n        String vnp_HashSecret = Config_VNPAY.VNP_HASH_SECRET;\r\n        String formattedAmount = String.valueOf(amount * 100);\r\n\r\n        //checksum\r\n        String data = vnp_RequestId + \"|\" + vnp_Version + \"|\" + vnp_Command + \"|\" + vnp_TmnCode + \"|\" + vnp_TransactionType + \"|\" + txnRef + \"|\" + formattedAmount + \"|\" + transactionNo + \"|\" + transactionDate + \"|\" + createBy + \"|\" + vnp_CreateDate + \"|\" + vnp_IpAddr + \"|\" + orderInfo;\r\n\r\n        //vnp_SecureHash\r\n        String vnp_SecureHash = hmacSHA512(vnp_HashSecret, data);\r\n\r\n        // tạo parameters map\r\n        Map<String, String> vnp_Params = new HashMap<>();\r\n        vnp_Params.put(\"vnp_RequestId\", vnp_RequestId);\r\n        vnp_Params.put(\"vnp_Version\", vnp_Version);\r\n        vnp_Params.put(\"vnp_Command\", vnp_Command);\r\n        vnp_Params.put(\"vnp_TmnCode\", vnp_TmnCode);\r\n        vnp_Params.put(\"vnp_TransactionType\", vnp_TransactionType);\r\n        vnp_Params.put(\"vnp_TxnRef\", txnRef);\r\n        vnp_Params.put(\"vnp_Amount\", formattedAmount);\r\n        vnp_Params.put(\"vnp_TransactionNo\", transactionNo);\r\n        vnp_Params.put(\"vnp_TransactionDate\", transactionDate);\r\n        vnp_Params.put(\"vnp_OrderInfo\", orderInfo);\r\n        vnp_Params.put(\"vnp_CreateBy\", createBy);\r\n        vnp_Params.put(\"vnp_CreateDate\", vnp_CreateDate);\r\n        vnp_Params.put(\"vnp_IpAddr\", vnp_IpAddr);\r\n        vnp_Params.put(\"vnp_SecureHash\", vnp_SecureHash);\r\n\r\n        // Create JSON body from vnp_Params\r\n        JSONObject jsonBody = new JSONObject(vnp_Params);\r\n\r\n        Log.d(\"VnpayRefund\", \"Refund Request: \" + jsonBody.toString());\r\n\r\n        // gủi request đến VNPAY\r\n        URL url = new URL(Config_VNPAY.VNPAY_SANDBOX_REFUND_URL);\r\n        HttpURLConnection connection = (HttpURLConnection) url.openConnection();\r\n        connection.setRequestMethod(\"POST\");\r\n        connection.setDoOutput(true);\r\n        connection.setRequestProperty(\"Content-Type\", \"application/json\");\r\n        connection.setRequestProperty(\"Accept\", \"application/json\");\r\n\r\n        OutputStream os = connection.getOutputStream();\r\n        os.write(jsonBody.toString().getBytes(\"UTF-8\"));\r\n        os.close();\r\n\r\n        //Nhận response từ VNPAY\r\n        int responseCode = connection.getResponseCode();\r\n        if (responseCode == HttpURLConnection.HTTP_OK) {\r\n            Scanner scanner = new Scanner(connection.getInputStream());\r\n            StringBuilder response = new StringBuilder();\r\n            while (scanner.hasNext()) {\r\n                response.append(scanner.nextLine());\r\n            }\r\n            scanner.close();\r\n            return response.toString();\r\n        } else {\r\n            return \"Lỗi: \" + responseCode;\r\n        }\r\n    }\r\n\r\n    public static String hmacSHA512(String key, String data) throws Exception {\r\n        Mac hmacSha512 = Mac.getInstance(\"HmacSHA512\");\r\n        SecretKeySpec secretKeySpec = new SecretKeySpec(key.getBytes(\"UTF-8\"), \"HmacSHA512\");\r\n        hmacSha512.init(secretKeySpec);\r\n        byte[] hashBytes = hmacSha512.doFinal(data.getBytes(\"UTF-8\"));\r\n        StringBuilder result = new StringBuilder();\r\n        for (byte b : hashBytes) {\r\n            result.append(String.format(\"%02x\", b));\r\n        }\r\n        return result.toString();\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java b/app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java
---- a/app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/java/com/example/agrimart/ui/Payment/VnpayRefund.java	(date 1733228600749)
-@@ -76,6 +76,7 @@
-             scanner.close();
-             return response.toString();
-         } else {
-+            Log.e("VnpayRefund", "Lỗi: " + responseCode);
-             return "Lỗi: " + responseCode;
-         }
-     }
-Index: app/src/main/java/com/example/agrimart/data/model/Notification.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.data.model;\r\n\r\npublic class Notification {\r\n    private String title;\r\n    private String message;\r\n    private long timestamp;\r\n    private String img;\r\n    private String userId;\r\n\r\n    public Notification(String title, String message, long timestamp, String imageUrl) {\r\n        this.title = title;\r\n        this.message = message;\r\n        this.timestamp = timestamp;\r\n        this.img = imageUrl;\r\n    }\r\n\r\n    public Notification() {\r\n    }\r\n\r\n    public String getTitle() {\r\n        return title;\r\n    }\r\n\r\n    public String getMessage() {\r\n        return message;\r\n    }\r\n\r\n    public long getTimestamp() {\r\n        return timestamp;\r\n    }\r\n\r\n    public String getImageUrl() {\r\n        return img;\r\n    }\r\n\r\n    public String getUserId() {\r\n        return userId;\r\n    }\r\n\r\n    public void setUserId(String userId) {\r\n        this.userId = userId;\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/data/model/Notification.java b/app/src/main/java/com/example/agrimart/data/model/Notification.java
---- a/app/src/main/java/com/example/agrimart/data/model/Notification.java	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/java/com/example/agrimart/data/model/Notification.java	(date 1733230584013)
-@@ -7,11 +7,12 @@
-     private String img;
-     private String userId;
- 
--    public Notification(String title, String message, long timestamp, String imageUrl) {
-+    public Notification(String title, String message, long timestamp, String imageUrl, String userId) {
-         this.title = title;
-         this.message = message;
-         this.timestamp = timestamp;
-         this.img = imageUrl;
-+        this.userId = userId;
-     }
- 
-     public Notification() {
-Index: app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.agrimart.adapter;\r\n\r\nimport static androidx.core.content.ContextCompat.startActivity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Looper;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.AppCompatButton;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.data.model.Order;\r\nimport com.example.agrimart.data.model.Product;\r\nimport com.example.agrimart.ui.Cart.CheckoutActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyRating.ProductRatingActivity;\r\nimport com.example.agrimart.ui.MyProfile.MyRating.ShopRatingActivity;\r\nimport com.example.agrimart.ui.MyProfile.PurchasedOrders.OrderInformationActivity;\r\nimport com.example.agrimart.ui.Payment.VnpayRefund;\r\nimport com.example.agrimart.viewmodel.OrderStatusFragmentViewModel;\r\nimport com.google.firebase.Timestamp;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Locale;\r\n\r\npublic class OrderStoreAdapter extends RecyclerView.Adapter<OrderStoreAdapter.OrderStoreViewHolder> {\r\n    private final List<Order> orderStoreList = new ArrayList<>();\r\n    private OrderStatusFragmentViewModel viewModel;\r\n    private final int REQUEST_CODE_RATING = 1001;\r\n\r\n\r\n    // Constructor\r\n    public OrderStoreAdapter(List<Order> orderStoreList, OrderStatusFragmentViewModel viewModel) {\r\n        this.orderStoreList.addAll(orderStoreList);\r\n        this.viewModel = viewModel;\r\n    }\r\n\r\n    // Update orders when data changes\r\n    public void updateOrders(List<Order> newOrders) {\r\n        orderStoreList.clear();\r\n        orderStoreList.addAll(newOrders);\r\n        notifyDataSetChanged();\r\n    }\r\n\r\n\r\n    @NonNull\r\n    @Override\r\n    public OrderStoreViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        // Inflate the layout for each item\r\n        View view = LayoutInflater.from(parent.getContext())\r\n                .inflate(R.layout.item_order_store, parent, false);\r\n        return new OrderStoreViewHolder(view);\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    @Override\r\n    public void onBindViewHolder(@NonNull OrderStoreViewHolder holder, int position) {\r\n        // Get the current OrderStore\r\n        Order orderStore = orderStoreList.get(position);\r\n\r\n        List<Product> products = orderStore.getProducts();\r\n        ProductOrderAdapter productOrderAdapter = new ProductOrderAdapter(products);\r\n        productOrderAdapter.setOnProductClickListener(product -> {\r\n            openDetail(holder, orderStore);\r\n        });\r\n\r\n        holder.recyclerViewItemOrder.setAdapter(productOrderAdapter);\r\n        holder.recyclerViewItemOrder.setLayoutManager(new LinearLayoutManager(holder.itemView.getContext()));\r\n\r\n        // Set text data\r\n        holder.tvStoreName.setText(orderStore.getStoreName());\r\n\r\n        String translatedStatus;\r\n        switch (orderStore.getStatus()) {\r\n            case \"pending\":\r\n                translatedStatus = \"Chờ xác nhận\";\r\n                holder.btnBuy.setText(\"Hủy đơn hàng\");\r\n                break;\r\n            case \"approved\":\r\n                translatedStatus = \"Chờ lấy hàng\";\r\n                break;\r\n            case \"delivering\":\r\n                translatedStatus = \"Chờ giao hàng\";\r\n                holder.btnBuy.setText(\"Đã nhận hàng\");\r\n                holder.btnDetail.setVisibility(View.VISIBLE);\r\n                holder.btnDetail.setText(\"Trả hàng/Hoàn tiền\");\r\n                break;\r\n            case \"return\":\r\n                translatedStatus = \"Chờ giao hàng\";\r\n                holder.btnBuy.setText(\"Đã nhận hàng\");\r\n                break;\r\n            case \"delivered\":\r\n                translatedStatus = \"Hoàn thành\";\r\n                if (!orderStore.isCheckRating()) {\r\n                    holder.btnBuy.setText(\"Đánh giá\");\r\n                    holder.btnDetail.setVisibility(View.VISIBLE);\r\n                    holder.btnDetail.setText(\"Trả hàng/Hoàn tiền\");\r\n                } else {\r\n                    holder.btnDetail.setVisibility(View.VISIBLE);\r\n                }\r\n\r\n                break;\r\n            case \"canceled\":\r\n                translatedStatus = \"Đã hủy\";\r\n                holder.btnDetail.setText(\"Xem Thông tin Hoàn tiền\");\r\n                break;\r\n            default:\r\n                translatedStatus = \"Không xác định\";\r\n                break;\r\n        }\r\n        holder.tvStatus.setText(translatedStatus);\r\n\r\n        // Thêm listener cho btnBuy\r\n        holder.btnBuy.setOnClickListener(v -> cancelOrder(holder, orderStore));  // Truyền đúng item vào đây\r\n\r\n        holder.tvTotalPrice.setText(\"Tổng số tiền: \" + orderStore.getTotalPrice() + \" VND\");\r\n\r\n        holder.main.setOnClickListener(v -> openDetail(holder, orderStore));\r\n\r\n        holder.btnDetail.setOnClickListener(v -> openRating(holder, orderStore));\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return orderStoreList.size();\r\n    }\r\n\r\n    // ViewHolder class\r\n    static class OrderStoreViewHolder extends RecyclerView.ViewHolder {\r\n\r\n        TextView tvStoreName, tvStatus, tvTotalPrice;\r\n        ImageView imageView;\r\n        RecyclerView recyclerViewItemOrder;\r\n        AppCompatButton btnBuy, btnDetail;\r\n        LinearLayout main;\r\n\r\n        public OrderStoreViewHolder(@NonNull View itemView) {\r\n            super(itemView);\r\n            main = itemView.findViewById(R.id.main);\r\n            tvStoreName = itemView.findViewById(R.id.tv_store_name);\r\n            tvStatus = itemView.findViewById(R.id.status);\r\n            tvTotalPrice = itemView.findViewById(R.id.total_price);\r\n            imageView = itemView.findViewById(R.id.imageView9);\r\n            recyclerViewItemOrder = itemView.findViewById(R.id.recyclerViewItemOrder);\r\n            btnBuy = itemView.findViewById(R.id.btn_buy);\r\n            btnDetail = itemView.findViewById(R.id.btn_detail);\r\n        }\r\n    }\r\n\r\n    private void cancelOrder(OrderStoreViewHolder holder, Order order) {\r\n        int position = holder.getAdapterPosition(); // Lấy đúng vị trí của item\r\n        if (position == RecyclerView.NO_POSITION) {\r\n            return; // Nếu vị trí không hợp lệ, thoát khỏi phương thức\r\n        }\r\n\r\n        if (order.getStatus().equals(\"pending\") && order.getPaymentMethod().equals(\"COD\")) {\r\n            viewModel.updateOrderStatus(order.getOrderId(), \"canceled\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                @Override\r\n                public void onSuccess(String message) {\r\n                    // Cập nhật trạng thái của item trong adapter\r\n                    order.setStatus(\"pending\");\r\n                    notifyItemChanged(position); // Chỉ cập nhật item tại vị trí hiện tại\r\n                    Toast.makeText(holder.itemView.getContext(), \"Đơn hàng đã hủy!\", Toast.LENGTH_SHORT).show();\r\n                }\r\n\r\n                @Override\r\n                public void onError(String errorMessage) {\r\n                    Toast.makeText(holder.itemView.getContext(), \"Không thể hủy đơn hàng: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        } else if (order.getStatus().equals(\"pending\") && order.getPaymentMethod().equals(\"VNPay\")) {\r\n            // Khi trả hàng gọi api hoàn tiền\r\n            FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n            db.collection(\"orders\").document(order.getOrderId()).get().addOnSuccessListener(documentSnapshot -> {\r\n                if (documentSnapshot.exists()) {\r\n                    String vnpTxnRef = documentSnapshot.getString(\"vnpTxnRef\");\r\n                    order.setVnpTxnRef(vnpTxnRef);\r\n\r\n                    new Thread(() -> {\r\n                        try {\r\n                            String vnp_TxnRef = order.getVnpTxnRef();\r\n                            String transactionId = order.getTransactionId();\r\n                            int totalPrice = order.getTotalPrice();\r\n                            String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDateMillis());\r\n\r\n                            // Gửi yêu cầu hoàn tiền\r\n                            String response = VnpayRefund.createRefundRequest(\r\n                                    vnp_TxnRef,          // Mã giao dịch của merchant (txnRef)\r\n                                    transactionId,       // Mã giao dịch từ VNPAY\r\n                                    totalPrice,          // Số tiền hoàn\r\n                                    formattedTransactionDate, // Ngày giao dịch gốc\r\n                                    \"Hoàn tiền cho đơn hàng \" + order.getOrderId(), // Lý do hoàn tiền\r\n                                    \"admin\"              // Người thực hiện\r\n                            );\r\n\r\n                            //nếu hoàn tiền thành công\r\n                            if (response.contains(\"\\\"vnp_ResponseCode\\\":\\\"00\\\"\")) { //ResponseCode là 00 (Hoàn tiền thành công)\r\n                                new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                    Toast.makeText(holder.itemView.getContext(), \"Huỷ đơn hàng thành công\", Toast.LENGTH_SHORT).show();\r\n                                });\r\n\r\n                                // Cập nhật trạng thái đơn hàng\r\n                                viewModel.updateOrderStatusRefund(order.getOrderId(), \"canceled\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                                    @Override\r\n                                    public void onSuccess(String message) {\r\n                                        order.setStatus(\"canceled\");\r\n                                        notifyItemChanged(position);\r\n                                    }\r\n\r\n                                    @Override\r\n                                    public void onError(String errorMessage) {\r\n                                        new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                            Toast.makeText(holder.itemView.getContext(), \"Không thể hủy đơn hàng: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                                        });\r\n                                    }\r\n                                });\r\n\r\n                            } else {\r\n                                //nếu hoàn tiền không thành công\r\n                                new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                    Toast.makeText(holder.itemView.getContext(), \"Không thể hoàn tiền: \" + response, Toast.LENGTH_SHORT).show();\r\n                                });\r\n                                Log.println(Log.ERROR, \"Vnpayreturn\", response);\r\n                            }\r\n                        } catch (Exception e) {\r\n                            new android.os.Handler(Looper.getMainLooper()).post(() -> {\r\n                                Toast.makeText(holder.itemView.getContext(), \"Lỗi: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n                            });\r\n                        }\r\n                    }).start();\r\n                } else {\r\n                    Toast.makeText(holder.itemView.getContext(), \"Đơn hàng không tồn tại\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }).addOnFailureListener(e -> {\r\n                Toast.makeText(holder.itemView.getContext(), \"Lỗi khi lấy thông tin đơn hàng: \" + e.getMessage(), Toast.LENGTH_SHORT).show();\r\n            });\r\n        } else if (order.getStatus().equals(\"delivering\")) {\r\n            viewModel.updateOrderStatus(order.getOrderId(), \"delivered\", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {\r\n                @Override\r\n                public void onSuccess(String message) {\r\n                    // Cập nhật trạng thái của item trong adapter\r\n                    viewModel.getData(\"delivering\");\r\n                    order.setStatus(\"delivering\");\r\n                    notifyItemChanged(position);\r\n\r\n                    Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);\r\n\r\n                    intent.putExtra(\"order\", order);\r\n                    holder.itemView.getContext().startActivity(intent);\r\n                }\r\n\r\n                @Override\r\n                public void onError(String errorMessage) {\r\n                    Toast.makeText(holder.itemView.getContext(), \"Không thể cập nhật trạng thái: \" + errorMessage, Toast.LENGTH_SHORT).show();\r\n                }\r\n            });\r\n        } else if (order.getStatus().equals(\"delivered\") && !order.isCheckRating()) {\r\n\r\n            // Cập nhật trạng thái của item trong adapter\r\n            order.setStatus(\"delivered\");\r\n            notifyItemChanged(position);\r\n\r\n            Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);\r\n            intent.putExtra(\"order\", order);\r\n            intent.putExtra(\"position\", 2);\r\n            ((Activity) holder.itemView.getContext()).startActivityForResult(intent, REQUEST_CODE_RATING);\r\n        } else {\r\n            onCheckoutButtonClicked(holder, order);\r\n        }\r\n    }\r\n\r\n    private void openDetail(OrderStoreViewHolder holder, Order order) {\r\n        int position = holder.getAdapterPosition(); // Lấy đúng vị trí của item\r\n        if (position == RecyclerView.NO_POSITION) {\r\n            return; // Nếu vị trí không hợp lệ, thoát khỏi phương thức\r\n        }\r\n\r\n        Intent intent = new Intent(holder.itemView.getContext(), OrderInformationActivity.class);\r\n        intent.putExtra(\"order\", order);\r\n        holder.itemView.getContext().startActivity(intent);\r\n    }\r\n\r\n    private void onCheckoutButtonClicked(OrderStoreViewHolder holder, Order order) {\r\n        List<Product> selectedProducts = new ArrayList<>();\r\n        List<String> productIds = new ArrayList<>();\r\n\r\n        selectedProducts = order.getProducts();\r\n\r\n        for (Product p : selectedProducts) {\r\n            productIds.add(p.getProduct_id());\r\n        }\r\n\r\n        Intent intent = new Intent(holder.itemView.getContext(), CheckoutActivity.class);\r\n        intent.putParcelableArrayListExtra(\"selectedProducts\", new ArrayList<>(selectedProducts));\r\n        intent.putStringArrayListExtra(\"productIds\", new ArrayList<>(productIds));\r\n        intent.putExtra(\"storeName\", order.getStoreName());\r\n        holder.itemView.getContext().startActivity(intent);\r\n\r\n    }\r\n\r\n    private void openRating(OrderStoreViewHolder holder, Order order) {\r\n        Intent intent = new Intent(holder.itemView.getContext(), ShopRatingActivity.class);\r\n        intent.putExtra(\"order\", order);\r\n        holder.itemView.getContext().startActivity(intent);\r\n    }\r\n\r\n    public static String formatTimestampToVnpayDate(Long timestamp) {\r\n        SimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmss\", Locale.getDefault());\r\n        Date date = new Date(timestamp);\r\n        return formatter.format(date);\r\n    }\r\n\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java b/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java
---- a/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java	(revision d45ca09de0bf312d44c2d875b91462249100cc0f)
-+++ b/app/src/main/java/com/example/agrimart/adapter/OrderStoreAdapter.java	(date 1733228060637)
-@@ -94,13 +94,13 @@
-             case "approved":
-                 translatedStatus = "Chờ lấy hàng";
-                 break;
--            case "delivering":
-+            case "delivery":
-                 translatedStatus = "Chờ giao hàng";
-                 holder.btnBuy.setText("Đã nhận hàng");
-                 holder.btnDetail.setVisibility(View.VISIBLE);
-                 holder.btnDetail.setText("Trả hàng/Hoàn tiền");
-                 break;
--            case "return":
-+            case "refund" :
-                 translatedStatus = "Chờ giao hàng";
-                 holder.btnBuy.setText("Đã nhận hàng");
-                 break;
-@@ -110,7 +110,7 @@
-                     holder.btnBuy.setText("Đánh giá");
-                     holder.btnDetail.setVisibility(View.VISIBLE);
-                     holder.btnDetail.setText("Trả hàng/Hoàn tiền");
--                } else {
-+                }else {
-                     holder.btnDetail.setVisibility(View.VISIBLE);
-                 }
- 
-@@ -137,6 +137,8 @@
-     }
- 
- 
-+
-+
-     @Override
-     public int getItemCount() {
-         return orderStoreList.size();
-@@ -198,7 +200,7 @@
-                             String vnp_TxnRef = order.getVnpTxnRef();
-                             String transactionId = order.getTransactionId();
-                             int totalPrice = order.getTotalPrice();
--                            String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDateMillis());
-+                            String formattedTransactionDate = formatTimestampToVnpayDate(order.getTransactionDate());
- 
-                             // Gửi yêu cầu hoàn tiền
-                             String response = VnpayRefund.createRefundRequest(
-@@ -217,7 +219,7 @@
-                                 });
- 
-                                 // Cập nhật trạng thái đơn hàng
--                                viewModel.updateOrderStatusRefund(order.getOrderId(), "canceled", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-+                                viewModel.updateOrderStatus(order.getOrderId(), "canceled", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-                                     @Override
-                                     public void onSuccess(String message) {
-                                         order.setStatus("canceled");
-@@ -237,7 +239,7 @@
-                                 new android.os.Handler(Looper.getMainLooper()).post(() -> {
-                                     Toast.makeText(holder.itemView.getContext(), "Không thể hoàn tiền: " + response, Toast.LENGTH_SHORT).show();
-                                 });
--                                Log.println(Log.ERROR, "Vnpayreturn", response);
-+                                Log.println(Log.ERROR, "VnpayRefund", response);
-                             }
-                         } catch (Exception e) {
-                             new android.os.Handler(Looper.getMainLooper()).post(() -> {
-@@ -251,17 +253,15 @@
-             }).addOnFailureListener(e -> {
-                 Toast.makeText(holder.itemView.getContext(), "Lỗi khi lấy thông tin đơn hàng: " + e.getMessage(), Toast.LENGTH_SHORT).show();
-             });
--        } else if (order.getStatus().equals("delivering")) {
-+        } else if (order.getStatus().equals("delivery")) {
-             viewModel.updateOrderStatus(order.getOrderId(), "delivered", new OrderStatusFragmentViewModel.OnStatusUpdateListener() {
-                 @Override
-                 public void onSuccess(String message) {
-                     // Cập nhật trạng thái của item trong adapter
--                    viewModel.getData("delivering");
--                    order.setStatus("delivering");
-+                    order.setStatus("delivery");
-                     notifyItemChanged(position);
- 
-                     Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);
--
-                     intent.putExtra("order", order);
-                     holder.itemView.getContext().startActivity(intent);
-                 }
-@@ -272,14 +272,13 @@
-                 }
-             });
-         } else if (order.getStatus().equals("delivered") && !order.isCheckRating()) {
--
-             // Cập nhật trạng thái của item trong adapter
-             order.setStatus("delivered");
-             notifyItemChanged(position);
- 
-             Intent intent = new Intent(holder.itemView.getContext(), ProductRatingActivity.class);
-             intent.putExtra("order", order);
--            intent.putExtra("position", 2);
-+            intent.putExtra("position", position);
-             ((Activity) holder.itemView.getContext()).startActivityForResult(intent, REQUEST_CODE_RATING);
-         } else {
-             onCheckoutButtonClicked(holder, order);
-@@ -303,7 +302,8 @@
- 
-         selectedProducts = order.getProducts();
- 
--        for (Product p : selectedProducts) {
-+        for (Product p : selectedProducts)
-+        {
-             productIds.add(p.getProduct_id());
-         }
- 
-@@ -321,10 +321,10 @@
-         holder.itemView.getContext().startActivity(intent);
-     }
- 
--    public static String formatTimestampToVnpayDate(Long timestamp) {
-+    public static String formatTimestampToVnpayDate(Timestamp timestamp) {
-         SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMddHHmmss", Locale.getDefault());
--        Date date = new Date(timestamp);
-+        Date date = new Date(timestamp.toDate().getTime());
-         return formatter.format(date);
-     }
- 
--}
-+}
-\ No newline at end of file
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id(\"com.android.application\")\r\n    id(\"com.google.gms.google-services\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"com.example.agrimart\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"com.example.agrimart\"\r\n        minSdk = 30\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(getDefaultProguardFile(\"proguard-android-optimize.txt\"), \"proguard-rules.pro\")\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n    sourceSets {\r\n        getByName(\"main\") {\r\n            res {\r\n                srcDirs(\"src\\\\main\\\\res\", \"src\\\\main\\\\res\\\\animator\")\r\n            }\r\n        }\r\n    }\r\n    buildFeatures{\r\n        viewBinding=true;\r\n        dataBinding=true;\r\n        buildConfig = true\r\n    }\r\n}\r\ndependencies {\r\n    implementation(\"com.github.wdsqjq:AndRatingBar:1.0.6\")\r\n    implementation(\"com.squareup.retrofit2:retrofit:2.9.0\")\r\n    implementation(\"com.squareup.retrofit2:converter-gson:2.9.0\")\r\n    implementation(\"com.google.code.gson:gson:2.10.1\")\r\n    implementation(\"com.github.yalantis:ucrop:2.2.6\")\r\n    implementation(\"androidx.core:core-ktx:1.12.0\")\r\n    implementation(\"org.jetbrains.kotlin:kotlin-stdlib:1.8.22\")\r\n    implementation(\"org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.22\")\r\n    implementation(\"androidx.viewpager:viewpager:1.0.0\")\r\n    implementation(\"androidx.appcompat:appcompat:1.6.1\")\r\n    implementation(\"androidx.constraintlayout:constraintlayout:2.1.4\")\r\n    implementation(\"androidx.activity:activity:1.9.1\")\r\n    implementation (\"com.github.denzcoskun:ImageSlideshow:0.1.2\")\r\n    implementation (\"de.hdodenhof:circleimageview:3.1.0\")\r\n    implementation (\"com.squareup.picasso:picasso:2.71828\")\r\n    implementation(\"androidx.lifecycle:lifecycle-livedata-ktx:2.8.7\")\r\n    implementation(\"androidx.lifecycle:lifecycle-viewmodel-ktx:2.8.7\")\r\n    implementation(\"androidx.recyclerview:recyclerview:1.3.2\")\r\n    implementation (\"com.google.android.material:material:1.12.0\")\r\n    implementation(\"com.google.firebase:firebase-firestore:25.1.1\")\r\n    implementation(\"com.google.firebase:firebase-auth:23.1.0\")\r\n    implementation(\"com.google.firebase:firebase-storage:21.0.1\")\r\n    implementation(\"com.google.firebase:firebase-messaging:24.0.3\")\r\n    implementation(\"com.google.firebase:firebase-inappmessaging-display:21.0.1\")\r\n    implementation(\"androidx.navigation:navigation-fragment:2.8.3\")\r\n    implementation(\"androidx.navigation:navigation-ui:2.8.3\")\r\n    //ZaloPay\r\n    implementation(fileTree(mapOf(\r\n        \"dir\" to \"D:\\\\Data\\\\Android\\\\DoAn\\\\ZaloPay\",\r\n        \"include\" to listOf(\"*.aar\", \"*.jar\"),\r\n        \"exclude\" to listOf(\"\")\r\n    )))\r\n    testImplementation(\"junit:junit:4.13.2\")\r\n    androidTestImplementation(\"androidx.test.ext:junit:1.2.1\")\r\n    androidTestImplementation(\"androidx.test.espresso:espresso-core:3.6.1\")\r\n    implementation(\"com.google.android.gms:play-services-auth:21.2.0\")\r\n    implementation(platform(\"com.google.firebase:firebase-bom:33.5.1\"))\r\n    implementation (\"com.github.bumptech.glide:glide:4.16.0\")\r\n    implementation (\"com.github.dhaval2404:imagepicker:2.1\")\r\n//  implementation (\"io.github.ParkSangGwon:tedimagepicker:1.6.1\")\r\n    // ViewModel\r\n//    implementation(\"androidx.lifecycle:lifecycle-viewmodel:2.8.5\")\r\n    implementation (\"com.facebook.android:facebook-login:latest.release\")\r\n    implementation(\"androidx.browser:browser:1.8.0\")\r\n\r\n    implementation(\"com.squareup.okhttp3:okhttp:3.14.1\")\r\n    implementation(files(\"libs/merchant-1.0.25.aar\"))\r\n\r\n    implementation (\"com.squareup.retrofit2:converter-jackson:2.10.0\")\r\n    implementation (\"com.fasterxml.jackson.core:jackson-databind:2.17.2\")\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ b/app/build.gradle.kts	(date 1734091145875)
@@ -9,7 +9,7 @@
 
     defaultConfig {
         applicationId = "com.example.agrimart"
-        minSdk = 30
+        minSdk = 28
         targetSdk = 34
         versionCode = 1
         versionName = "1.0"
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <uses-feature\r\n        android:name=\"android.hardware.telephony\"\r\n        android:required=\"false\" />\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.WAKE_LOCK\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" />\r\n    <uses-permission android:name=\"android.permission.GET_ACCOUNTS\" />\r\n    <uses-permission android:name=\"android.permission.USE_CREDENTIALS\" />\r\n    <uses-permission android:name=\"android.permission.READ_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" />\r\n    <uses-permission android:name=\"android.permission.READ_MEDIA_IMAGES\" />\r\n    <uses-permission android:name=\"android.permission.SEND_SMS\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@drawable/logo_icon\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@drawable/logo_icon\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.AgriMart\"\r\n        tools:ignore=\"ExtraText\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".ui.MyProfile.PurchasedOrders.RequestReturn.RequestReturnActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyRating.ShopRatingActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.PurchasedOrders.OrderInformationActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyRating.ProductRatingActivity\"\r\n            android:exported=\"false\"\r\n            android:windowSoftInputMode=\"adjustResize\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyRating.MyRatingActivity\"\r\n            android:exported=\"false\" />\r\n\r\n        <service\r\n            android:name=\".data.service.FirebaseNotificationService\"\r\n            android:exported=\"false\">\r\n            <intent-filter>\r\n                <action android:name=\"com.google.firebase.MESSAGING_EVENT\" />\r\n            </intent-filter>\r\n        </service>\r\n\r\n        <activity\r\n            android:name=\".ui.ProductPage.ListProductRatingActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Cart.PlaceOrderActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Payment.VNPaymentActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyStore.EditProfileStoreActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.PostProduct.ProductPreviewActivity\"\r\n            android:exported=\"false\"\r\n            android:windowSoftInputMode=\"adjustPan\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAddress.GetAddressActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.EditNumberPhoneActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.ChangePasswordActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.VerifyWithPasswordActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.EditUserNameActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\"com.yalantis.ucrop.UCropActivity\"\r\n            android:theme=\"@style/Theme.AppCompat.NoActionBar\"\r\n            tools:replace=\"android:theme\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAddress.EditAddressActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAddress.NewAddressActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyStore.RegisterSellerActivity\"\r\n            android:exported=\"false\"\r\n            android:theme=\"@style/Theme.AgriMart\" />\r\n        <activity\r\n            android:name=\".ui.Account.VerifyActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyStore.MyStoreActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.PurchasedOrders.PurchasedOrdersActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAddress.MyAddressActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyAccount.MyAccountActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Store.StoreActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MyProfile.MyStore.OrderManagementActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Homepage.SearchActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Cart.CheckoutActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.ProductPage.ProductDetailActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.PostProduct.YourProductListingsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.PostProduct.PostProductActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.MainActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Account.EnterOTPActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Account.ForgotPasswordActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Account.SignUpActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Homepage.HomeFragment\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".ui.Account.SignInActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.ApplicationId\"\r\n            android:value=\"@string/facebook_app_id\" />\r\n        <meta-data\r\n            android:name=\"com.facebook.sdk.ClientToken\"\r\n            android:value=\"@string/facebook_client_token\" />\r\n\r\n        <activity\r\n            android:name=\"com.facebook.FacebookActivity\"\r\n            android:configChanges=\"keyboard|keyboardHidden|screenLayout|screenSize|orientation\"\r\n            android:label=\"@string/app_name\"\r\n            android:screenOrientation=\"portrait\"\r\n            tools:ignore=\"DiscouragedApi\" />\r\n        <activity\r\n            android:name=\"com.facebook.CustomTabActivity\"\r\n            android:exported=\"true\"\r\n            android:screenOrientation=\"portrait\"\r\n            tools:ignore=\"DiscouragedApi\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.VIEW\" />\r\n\r\n                <category android:name=\"android.intent.category.DEFAULT\" />\r\n                <category android:name=\"android.intent.category.BROWSABLE\" />\r\n\r\n                <data android:scheme=\"@string/fb_login_protocol_scheme\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ b/app/src/main/AndroidManifest.xml	(date 1734091178446)
@@ -40,9 +40,6 @@
             android:name=".ui.MyProfile.MyRating.ProductRatingActivity"
             android:exported="false"
             android:windowSoftInputMode="adjustResize" />
-        <activity
-            android:name=".ui.MyProfile.MyRating.MyRatingActivity"
-            android:exported="false" />
 
         <service
             android:name=".data.service.FirebaseNotificationService"
Index: app/src/main/res/layout/dialog_confirm.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvDialogTitle\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:textSize=\"18sp\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:textColor=\"@color/color_item_selected\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:textStyle=\"bold\"\r\n        android:text=\"Dialog Title\" />\r\n\r\n    <TextView\r\n        android:id=\"@+id/tvDialogMessage\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:textSize=\"16sp\"\r\n        android:layout_below=\"@id/tvDialogTitle\"\r\n        android:layout_marginTop=\"8dp\"\r\n        android:layout_marginHorizontal=\"16dp\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:text=\"message\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@id/tvDialogMessage\"\r\n        android:layout_centerHorizontal=\"true\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:orientation=\"horizontal\">\r\n\r\n        <com.google.android.material.button.MaterialButton\r\n            android:id=\"@+id/btnDialogCancel\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Hủy\"\r\n            android:layout_marginEnd=\"80dp\"\r\n            android:textSize=\"14sp\"\r\n            android:textColor=\"@color/black\"\r\n            app:strokeColor=\"@color/green\"\r\n            style=\"@style/Widget.Material3.Button.OutlinedButton\" />\r\n\r\n        <com.google.android.material.button.MaterialButton\r\n            android:id=\"@+id/btnDialogConfirm\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Xác nhận\"\r\n            android:textSize=\"14sp\"\r\n            android:textColor=\"@color/background_green\"\r\n            android:backgroundTint=\"@color/green\"\r\n            style=\"@style/Widget.Material3.Button.TonalButton\" />\r\n    </LinearLayout>\r\n\r\n</RelativeLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_confirm.xml b/app/src/main/res/layout/dialog_confirm.xml
--- a/app/src/main/res/layout/dialog_confirm.xml	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ b/app/src/main/res/layout/dialog_confirm.xml	(date 1734104639496)
@@ -39,7 +39,7 @@
             android:layout_width="wrap_content"
             android:layout_height="wrap_content"
             android:text="Hủy"
-            android:layout_marginEnd="80dp"
+            android:layout_marginEnd="50dp"
             android:textSize="14sp"
             android:textColor="@color/black"
             app:strokeColor="@color/green"
Index: app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.agrimart.ui.MyProfile.PurchasedOrders;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.widget.ImageButton;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.activity.result.ActivityResult;\r\nimport androidx.activity.result.ActivityResultLauncher;\r\nimport androidx.activity.result.contract.ActivityResultContracts;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.adapter.ViewPagerAdapter;\r\nimport com.example.agrimart.data.model.Order;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport com.google.android.material.tabs.TabLayoutMediator;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.viewpager2.widget.ViewPager2;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\npublic class PurchasedOrdersActivity extends AppCompatActivity {\r\n    private static final String TAG = \"PurchasedOrdersActivity\"; // Thêm hằng số TAG cho log\r\n    private static final int REQUEST_CODE_RATING = 1001;\r\n\r\n    private ViewPager2 viewPager;\r\n    private List<Fragment> fragments;\r\n\r\n\r\n    @Override\r\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if (requestCode == REQUEST_CODE_RATING) {\r\n            if (resultCode == RESULT_OK) {\r\n                String orderStatus = data.getStringExtra(\"order_status\");\r\n                assert orderStatus != null;\r\n                loadFragmentAtPosition(location(orderStatus), orderStatus);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    private void loadFragmentAtPosition(int position, String orderStatus) {\r\n        if (position >= 0 && position < fragments.size()) {\r\n            // Lấy Fragment tại vị trí cần load lại\r\n            Fragment newFragment = new OrderStatusFragment(orderStatus);\r\n\r\n            // Thay thế Fragment hiện tại tại vị trí đó\r\n            fragments.set(position , newFragment);\r\n\r\n            // Cập nhật lại adapter với danh sách fragment mới\r\n            ViewPagerAdapter adapter = new ViewPagerAdapter(this, fragments, Arrays.asList(\"Chờ xác nhận\",\"Chờ lấy hàng\", \"Chờ giao hàng\", \"Trả hàng\", \"Đã giao\", \"Đã hủy\"));\r\n            viewPager.setAdapter(adapter);\r\n\r\n\r\n            viewPager.setCurrentItem(position, true);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_purchased_orders);\r\n\r\n        // Khởi tạo TabLayout và ViewPager2\r\n        TabLayout tabLayout = findViewById(R.id.tab_layout);\r\n        viewPager = findViewById(R.id.view_pager);\r\n        ImageButton btn_back = findViewById(R.id.btn_back);\r\n\r\n        // Tạo danh sách Fragment và trạng thái\r\n        fragments = new ArrayList<>();\r\n        List<String> titles = Arrays.asList(\"Chờ xác nhận\", \"Chờ lấy hàng\", \"Chờ giao hàng\", \"Trả hàng\" ,\"Đã giao\", \"Đã hủy\");\r\n        List<String> statuses = Arrays.asList(\"pending\", \"approved\", \"delivering\", \"return\" ,\"delivered\", \"canceled\");\r\n\r\n        for (String status : statuses) {\r\n            fragments.add(new OrderStatusFragment(status)); // Thêm các fragment vào danh sách\r\n        }\r\n\r\n        // Gán adapter cho ViewPager2\r\n        ViewPagerAdapter viewPagerAdapter = new ViewPagerAdapter(this, fragments, titles);\r\n        viewPager.setAdapter(viewPagerAdapter);\r\n\r\n        // Thiết lập TabLayout với ViewPager2\r\n        new TabLayoutMediator(tabLayout, viewPager, (tab, pos) -> tab.setText(titles.get(pos))).attach();\r\n\r\n        int selectedTab = getIntent().getIntExtra(\"selectedTab\", 0); // 0 là giá trị mặc định\r\n        if (selectedTab >= 0 && selectedTab < fragments.size()) {\r\n            viewPager.setCurrentItem(selectedTab, true); // Thiết lập tab được chọn\r\n        }\r\n\r\n        btn_back.setOnClickListener(v -> onBackPressed());\r\n    }\r\n\r\n    private int location (String status)\r\n    {\r\n        switch (status){\r\n            case \"pending\": return 0;\r\n            case \"approved\": return 1;\r\n            case \"delivery\": return 2;\r\n            case \"refund\": return 3;\r\n            case \"delivered\": return 4;\r\n            case \"canceled\" : return 5;\r\n        }\r\n        return -1;\r\n    }\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java b/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java
--- a/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ b/app/src/main/java/com/example/agrimart/ui/MyProfile/PurchasedOrders/PurchasedOrdersActivity.java	(date 1734106347930)
@@ -105,7 +105,7 @@
             case "pending": return 0;
             case "approved": return 1;
             case "delivery": return 2;
-            case "refund": return 3;
+            case "return": return 3;
             case "delivered": return 4;
             case "canceled" : return 5;
         }
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ b/.idea/deploymentTargetSelector.xml	(date 1734091026551)
@@ -4,6 +4,14 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
+        <DropdownSelection timestamp="2024-12-13T11:56:17.868666500Z">
+          <Target type="DEFAULT_BOOT">
+            <handle>
+              <DeviceId pluginId="Default" identifier="serial=localhost:5555;connection=4c6ae16b" />
+            </handle>
+          </Target>
+        </DropdownSelection>
+        <DialogSelection />
       </SelectionState>
     </selectionStates>
   </component>
Index: app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.agrimart.viewmodel;\r\n\r\nimport android.Manifest;\r\nimport android.app.Application;\r\nimport android.content.pm.PackageManager;\r\nimport android.util.Log;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.app.NotificationManagerCompat;\r\nimport androidx.lifecycle.AndroidViewModel;\r\nimport androidx.lifecycle.LiveData;\r\nimport androidx.lifecycle.MutableLiveData;\r\n\r\nimport com.example.agrimart.R;\r\nimport com.example.agrimart.data.model.Notification;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.DocumentChange;\r\nimport com.google.firebase.firestore.FieldValue;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.Query;\r\nimport com.google.firebase.firestore.QueryDocumentSnapshot;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class NotificationViewModel extends AndroidViewModel {\r\n    private static final String TAG = \"NotificationViewModel\";\r\n    private final MutableLiveData<List<Notification>> notificationsLiveData = new MutableLiveData<>();\r\n    private final FirebaseFirestore firestore = FirebaseFirestore.getInstance();\r\n    private static final int REQUEST_NOTIFICATION_PERMISSION = 1;\r\n\r\n    public NotificationViewModel(@NonNull Application application) {\r\n        super(application);\r\n    }\r\n\r\n    public void createNotificationsForUser() {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n\r\n        db.collection(\"orders\")\r\n                .whereEqualTo(\"userId\", FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addSnapshotListener((snapshots, e) -> {\r\n                    if (e != null) {\r\n                        Log.e(\"FirebaseError\", \"Error listening to orders\", e);\r\n                        return;\r\n                    }\r\n\r\n                    if (snapshots != null && !snapshots.isEmpty()) {\r\n                        for (DocumentChange dc : snapshots.getDocumentChanges()) {\r\n                            notificationForUser(dc, db);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void createNotificationsForSeller() {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        db.collection(\"orders\")\r\n                .whereEqualTo(\"storeId\", FirebaseAuth.getInstance().getCurrentUser().getUid())\r\n                .addSnapshotListener((snapshots, e) -> {\r\n                    if (e != null) {\r\n                        Log.e(\"FirebaseError\", \"Error listening to orders\", e);\r\n                        return;\r\n                    }\r\n\r\n                    if (snapshots != null && !snapshots.isEmpty()) {\r\n                        for (DocumentChange dc : snapshots.getDocumentChanges()) {\r\n                            notificationForSeller(dc, db);\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void notificationForUser(DocumentChange dc, FirebaseFirestore db) {\r\n        String status = dc.getDocument().getString(\"status\");\r\n        List<String> notifiedStatuses = (List<String>) dc.getDocument().get(\"notifiedStatuses\");\r\n        String imageUrl = \"android.resource://\" + getApplication().getPackageName() + \"/\" + R.drawable.bell;\r\n        long timestamp = System.currentTimeMillis();\r\n        String orderId = dc.getDocument().getId();\r\n\r\n        String title = \"\";\r\n        String message = \"\";\r\n\r\n        if (notifiedStatuses != null && notifiedStatuses.contains(status)) {\r\n            return;\r\n        }\r\n\r\n        switch (status) {\r\n            case \"pending\":\r\n                title = \"Đặt hàng thành công!\";\r\n                message = \"Đơn hàng \" + orderId + \" đang chờ người bán xác nhận.\";\r\n                break;\r\n            case \"approved\":\r\n                title = \"Người bán đang chuẩn bị hàng\";\r\n                message = \"Đơn hàng \" + orderId + \" đang được đóng gói và sẽ sớm giao cho đơn vị vận chuyển.\";\r\n                break;\r\n            case \"delivering\":\r\n                title = \"Đơn hàng đang trong quá trình vận chuyển\";\r\n                message = \"Đơn hàng \" + orderId + \" hiện đang trong quá trình vận chuyển.\";\r\n                break;\r\n            case \"delivered\":\r\n                title = \"Đơn hàng đã được giao thành công\";\r\n                message = \"Đơn hàng \" + orderId + \" đã được giao thành công. Bạn có hài lòng với sản phẩm đã nhận?\";\r\n                break;\r\n            case \"canceled\":\r\n                title = \"Đơn hàng đã bị huỷ\";\r\n                message = \"Đơn hàng \" + orderId + \" đã bị huỷ. Nếu bạn đã thanh toán bằng VNPAY số tiền đã thanh toán sẽ sớm được hoàn lại vào tài khoản của bạn.\";\r\n                break;\r\n            case \"waiting\":\r\n                title = \"Yêu cầu trả hàng\";\r\n                message = \"Yêu cầu trả hàng của đơn hàng \" + orderId + \" đã được gửi. Vui lòng chờ yêu cầu được phê duyệt.\";\r\n                break;\r\n            case \"return\":\r\n                title = \"Yêu cầu trả hàng đã được chấp nhận\";\r\n                message = \"Yêu cầu trả hàng của đơn hàng \" + orderId + \" đã được chấp nhận. Vui lòng chờ trong thời gian sớm nhất.\";\r\n                break;\r\n        }\r\n\r\n        if (!title.isEmpty() && !message.isEmpty()) {\r\n            Notification notification = new Notification(title, message, timestamp, imageUrl, \"\");\r\n            sendNotification(title, message);\r\n            saveNotificationToFirestore(notification);\r\n\r\n            db.collection(\"orders\").document(dc.getDocument().getId())\r\n                    .update(\"notifiedStatuses\", FieldValue.arrayUnion(status))\r\n                    .addOnSuccessListener(aVoid -> Log.d(\"Firestore\", \"Updated notifiedStatuses\"))\r\n                    .addOnFailureListener(e -> Log.e(\"FirestoreError\", \"Error updating notifiedStatuses\", e));\r\n        }\r\n    }\r\n\r\n    private void notificationForSeller(DocumentChange dc, FirebaseFirestore db) {\r\n        String status = dc.getDocument().getString(\"status\");\r\n        List<String> notifiedStatuses = (List<String>) dc.getDocument().get(\"notifiedStatuses\");\r\n        String imageUrl = \"android.resource://\" + getApplication().getPackageName() + \"/\" + R.drawable.bell;\r\n        long timestamp = System.currentTimeMillis();\r\n        String orderId = dc.getDocument().getId();\r\n\r\n        String title = \"\";\r\n        String message = \"\";\r\n\r\n        if (notifiedStatuses != null && notifiedStatuses.contains(status)) {\r\n            return;\r\n        }\r\n\r\n        switch (status) {\r\n            case \"pending\":\r\n                title = \"Có đơn hàng mới\";\r\n                message = \"Đơn hàng \" + orderId + \" mới vừa được đặt. Hãy xác nhận đơn hàng.\";\r\n                break;\r\n            case \"approved\":\r\n                title = \"Chuẩn bị hàng\";\r\n                message = \"Chuẩn bị đơn hàng \" + orderId + \" để giao cho đơn vị vận chuyển.\";\r\n                break;\r\n            case \"delivering\":\r\n                title = \"Đơn bán đang trong quá trình vận chuyển\";\r\n                message = \"Đơn bán \" + orderId + \" hiện đang trong quá trình vận chuyển.\";\r\n                break;\r\n            case \"delivered\":\r\n                title = \"Đơn bán đã được giao thành công\";\r\n                message = \"Đơn bán \" + orderId + \" đã được giao thành công cho khách hàng.\";\r\n                break;\r\n            case \"canceled\":\r\n                title = \"Đơn hàng đã bị huỷ\";\r\n                message = \"Đơn hàng \" + orderId + \" đã bị huỷ.\";\r\n                break;\r\n            case \"return\":\r\n                title = \"Trả hàng\";\r\n                message = \"Khách hàng yêu cầu trả hàng cho đơn hàng \" + orderId + \".\";\r\n                break;\r\n        }\r\n\r\n        if (!title.isEmpty() && !message.isEmpty()) {\r\n            Notification notification = new Notification(title, message, timestamp, imageUrl, \"\");\r\n            sendNotification(title, message);\r\n            saveNotificationToFirestore(notification);\r\n\r\n            db.collection(\"orders\").document(dc.getDocument().getId())\r\n                    .update(\"notifiedStatuses\", FieldValue.arrayUnion(status))\r\n                    .addOnSuccessListener(aVoid -> Log.d(\"Firestore\", \"Updated notifiedStatuses\"))\r\n                    .addOnFailureListener(e -> Log.e(\"FirestoreError\", \"Error updating notifiedStatuses\", e));\r\n        }\r\n    }\r\n\r\n    public void sendNotification(String title, String message) {\r\n        NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplication(), \"default_channel\")\r\n                .setSmallIcon(R.drawable.logo_icon)\r\n                .setContentTitle(title)\r\n                .setContentText(message)\r\n                .setPriority(NotificationCompat.PRIORITY_DEFAULT)\r\n                .setAutoCancel(true);\r\n\r\n        NotificationManagerCompat notificationManager = NotificationManagerCompat.from(getApplication());\r\n        if (ActivityCompat.checkSelfPermission(getApplication(), Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED) {\r\n            Log.e(\"NotificationViewModel\", \"Notification permission not granted\");\r\n            return;\r\n        }\r\n        notificationManager.notify((int) System.currentTimeMillis(), builder.build());\r\n    }\r\n\r\n    public void saveNotificationToFirestore(Notification notification) {\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        FirebaseUser currentUser = FirebaseAuth.getInstance().getCurrentUser();\r\n\r\n        if (currentUser != null) {\r\n            notification.setUserId(currentUser.getUid());\r\n            db.collection(\"notifications\")\r\n                    .whereEqualTo(\"userId\", currentUser.getUid())\r\n                    .whereEqualTo(\"title\", notification.getTitle())\r\n                    .whereEqualTo(\"message\", notification.getMessage())\r\n                    .whereEqualTo(\"timestamp\", notification.getTimestamp())\r\n                    .get()\r\n                    .addOnCompleteListener(task -> {\r\n                        if (task.isSuccessful() && task.getResult() != null && task.getResult().isEmpty()) {\r\n                            db.collection(\"notifications\").add(notification)\r\n                                    .addOnSuccessListener(documentReference -> {\r\n                                        Log.d(\"Firestore\", \"Notification saved successfully\");\r\n                                    })\r\n                                    .addOnFailureListener(e -> {\r\n                                        Log.e(\"FirestoreError\", \"Error saving notification\", e);\r\n                                    });\r\n                        } else {\r\n                            Log.d(\"Firestore\", \"Notification already exists, not saving again\");\r\n                        }\r\n                    })\r\n                    .addOnFailureListener(e -> {\r\n                        Log.e(\"FirestoreError\", \"Error checking for existing notification\", e);\r\n                    });\r\n        }\r\n    }\r\n\r\n    public void getNotifications(String userId) {\r\n        Log.d(TAG, \"Fetching notifications for user ID: \" + userId);\r\n        firestore.collection(\"notifications\")\r\n                .whereEqualTo(\"userId\", userId)\r\n                .orderBy(\"timestamp\", Query.Direction.DESCENDING)\r\n                .get()\r\n                .addOnCompleteListener(task -> {\r\n                    if (task.isSuccessful() && task.getResult() != null) {\r\n                        List<Notification> notifications = new ArrayList<>();\r\n                        for (QueryDocumentSnapshot doc : task.getResult()) {\r\n                            Notification notification = doc.toObject(Notification.class);\r\n                            notifications.add(notification);\r\n                        }\r\n                        Log.d(TAG, \"Fetched \" + notifications.size() + \" notifications\");\r\n                        notificationsLiveData.setValue(notifications);\r\n                    } else {\r\n                        Log.e(TAG, \"Error fetching notifications\", task.getException());\r\n                    }\r\n                });\r\n    }\r\n\r\n    public LiveData<List<Notification>> getNotificationsLiveData() {\r\n        return notificationsLiveData;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java b/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java
--- a/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java	(revision 71b6d37576dc31f5ebc047132a776716859837f4)
+++ b/app/src/main/java/com/example/agrimart/viewmodel/NotificationViewModel.java	(date 1734108141782)
@@ -20,6 +20,7 @@
 import com.google.firebase.firestore.DocumentChange;
 import com.google.firebase.firestore.FieldValue;
 import com.google.firebase.firestore.FirebaseFirestore;
+import com.google.firebase.firestore.ListenerRegistration;
 import com.google.firebase.firestore.Query;
 import com.google.firebase.firestore.QueryDocumentSnapshot;
 
@@ -28,18 +29,24 @@
 
 public class NotificationViewModel extends AndroidViewModel {
     private static final String TAG = "NotificationViewModel";
+    private static final String CHANNEL_ID = "default_channel";
     private final MutableLiveData<List<Notification>> notificationsLiveData = new MutableLiveData<>();
     private final FirebaseFirestore firestore = FirebaseFirestore.getInstance();
     private static final int REQUEST_NOTIFICATION_PERMISSION = 1;
+    private ListenerRegistration userListenerRegistration;
+    private ListenerRegistration sellerListenerRegistration;
 
     public NotificationViewModel(@NonNull Application application) {
         super(application);
     }
 
     public void createNotificationsForUser() {
+        if (userListenerRegistration != null) {
+            userListenerRegistration.remove();
+        }
+
         FirebaseFirestore db = FirebaseFirestore.getInstance();
-
-        db.collection("orders")
+        userListenerRegistration = db.collection("orders")
                 .whereEqualTo("userId", FirebaseAuth.getInstance().getCurrentUser().getUid())
                 .addSnapshotListener((snapshots, e) -> {
                     if (e != null) {
@@ -56,8 +63,12 @@
     }
 
     public void createNotificationsForSeller() {
+        if (sellerListenerRegistration != null) {
+            sellerListenerRegistration.remove();
+        }
+
         FirebaseFirestore db = FirebaseFirestore.getInstance();
-        db.collection("orders")
+        sellerListenerRegistration = db.collection("orders")
                 .whereEqualTo("storeId", FirebaseAuth.getInstance().getCurrentUser().getUid())
                 .addSnapshotListener((snapshots, e) -> {
                     if (e != null) {
@@ -113,11 +124,17 @@
                 message = "Yêu cầu trả hàng của đơn hàng " + orderId + " đã được gửi. Vui lòng chờ yêu cầu được phê duyệt.";
                 break;
             case "return":
-                title = "Yêu cầu trả hàng đã được chấp nhận";
-                message = "Yêu cầu trả hàng của đơn hàng " + orderId + " đã được chấp nhận. Vui lòng chờ trong thời gian sớm nhất.";
+                title = "Trả hàng thành công";
+                message = "Yêu cầu trả đơn hàng " + orderId + " thành công. Số tiền đã thanh toán sẽ được hoàn trả trong thời gian sớm nhất.";
                 break;
         }
 
+        Boolean isRefund = dc.getDocument().getBoolean("refund");
+        if (isRefund != null && isRefund) {
+            title = "Hoàn tiền thành công";
+            message = "Số tiền thuộc về đơn hàng " + orderId + " đã được hoàn lại vào tài khoản của bạn.";
+        }
+
         if (!title.isEmpty() && !message.isEmpty()) {
             Notification notification = new Notification(title, message, timestamp, imageUrl, "");
             sendNotification(title, message);
@@ -184,7 +201,7 @@
     }
 
     public void sendNotification(String title, String message) {
-        NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplication(), "default_channel")
+        NotificationCompat.Builder builder = new NotificationCompat.Builder(getApplication(), CHANNEL_ID)
                 .setSmallIcon(R.drawable.logo_icon)
                 .setContentTitle(title)
                 .setContentText(message)
